{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","hooks/useCompany.js","hooks/useInvoices.js","hooks/useArticles.js","hooks/useAuthors.js","hooks/useCustomers.js","components/Editor/Editor.js","components/CustomerForm/CustomerForm.js","components/Customers.js","components/Author/Author.js","services/formatDate.js","services/formatPrice.js","components/Article.js","components/Articles/Articles.js","components/DropZone.js","components/CompanyForm.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePageOverlay.js","components/SinglePage/SinglePage.js","components/Invoice/Invoice.js","services/calculateTotalPrice.js","components/Invoices.js","components/Authors/Authors.js","migration/authors.js","migration/useMigrationWrapper.js","hooks/useMigration.js","migration/index.js","pages/Home/Home.js","components/TopNavigationBar/TopNavigationBar.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","authors","invoiceAddress","shippingAddress","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","logo","aboveClientInvoiceAddress","footerText","invoiceText","subjectAndBelow","contactInformation","contact","books","useCompany","companySceleton","useInvoices","useArticles","useAuthors","useCustomers","Editor","props","active","setActive","onFocus","onBlur","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","className","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","CustomerForm","customer","setCustomer","RichTextEditor","createValueFromString","setInvoiceAddress","setShippingAddress","useEffect","handleCustomerChange","e","parseFloat","isNaN","updateRichtext","Form","Group","Field","control","Input","onChange","placeholder","icon","customers","setCustomers","Button","onClick","customerSceleton","id","length","primary","Modal","onClose","open","Header","Content","Actions","content","negative","labelPosition","Table","celled","Row","HeaderCell","Body","map","c","Cell","dangerouslySetInnerHTML","__html","Author","author","setAuthor","percent","authorPrice","setAuthorPrice","handleAuthorChange","toFixed","width","target","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","formatPrice","replace","Article","article","setArticle","articlePrice","setArticlePrice","handleArticleChange","authorOptions","undefined","text","concat","a","type","Dropdown","search","selection","options","authorSceleton","Segment","setArticles","invoiceArticle","setInvoiceArticle","invoices","filteredInvoices","useMemo","reduce","list","i","articleSceleton","_articles","positive","invoice","paymentDate","secondary","pos","deleteArticle","baseStyle","flex","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","isDragAccept","isDragReject","getRootProps","getInputProps","event","stopPropagation","CompanyForm","company","setCompany","selected","setFooterText","setSubjectAndBelow","setInvoiceText","setContactInformation","setAboveClientInvoiceAddress","updateRichText","updateCompany","src","alt","files","file","reader","FileReader","onload","result","readAsDataURL","setInvoice","formSelected","wrapperClass","setFormSelected","selectedArticles","setSelectedArticles","toBePayed","setToBePayed","toBeSend","setToBeSend","newArticle","setNewArticle","setPorto","setAuthors","articleId","updateInvoice","checked","toggleNewArticle","updateInvoiceDate","customerOptions","articlesOptions","filter","Container","Card","fluid","widths","_authors","v","DatePicker","dateFormat","Checkbox","payed","toggle","PrintButton","fileName","input","document","getElementById","html2canvas","scale","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","Page","children","singleMode","height","SinglePageOverlay","SinglePage","articles_net_price","totalPrice","total","x","companyColor","multiple","parseInt","totalPriceWithDiscount","net","edit","setInvoices","onSave","newInvoice","calculateTotalPrice","_invoices","_customers","invoiceSelected","setInvoiceSelected","invoiceSceleton","Authors","deleteAuthor","useAddAuthorsToArticles","migrate","version","currentVersion","setCurrentVersion","useMigrationWrapper","useMigration","Home","history","useHistory","push","TopNavigationBar","size","render","exact","path","Invoices","Customers"],"mappings":"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","file":"static/js/main.fe920abc.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  name: \"\",\n  empty: true,\n  price: \"20,00\",\n  isbn: \"\",\n  amount: 1,\n  authors: [],\n};\n","export default {\n  name: \"Max Mustermann\",\n  invoiceAddress:\n    \"<p>musterdomain.de<br/>\\\n  Muster Firma GbR<br/>\\\n  Musterstraße 2<br/>\\\n  15366 Musterstadt</p>\",\n  shippingAddress:\n    \"<p>musterdomain.de • Muster Firma GbR<br/>\\\n  Musterstraße 2 • 15366 Musterstadt</p>\",\n  discount: 0,\n  ust: 7,\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5,00\",\n  finalText: \"\",\n  articles: [],\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  logo: \"\",\n  aboveClientInvoiceAddress:\n    \"<p>Verlag GbR • Musterstraße 12 • 10405 Musterstadt</p>\",\n  footerText:\n    \"<p><b>Geschäftsführung</b> Max Mustermann<br/>\\\n  <b>Bankverbindung</b> Postbank • IBAN DE 00 0000 0000 0000 00 • BIC ABCDEFGHIJKL<br/>\\\n  <b>Steuernummer</b> 000/000/00000 | <b>USt-IdNr.</b> DE000000000</p>\",\n  invoiceText:\n    \"<p>Zahlen Sie bitte den Rechnungsbetrag bis zum <Datum> unter Angabe der Rechnungsnummer\\\nauf unten stehendes Konto.<br/>\\\nDie gelieferte Ware bleibt bis zur vollständigen Bezahlung Eigentum des Verlages.<br/>\\\nVielen Dank für Ihre Bestellung.</p>\\\n<p>Mit herzlichen Grüßen.<br/>\\\nMusterstadt, den <Datum></p>\",\n  subjectAndBelow:\n    \"<h3>Rechnung</h3>\\\n  <p><br></p>\\\n  <p>wir erlauben uns, in Rechnung zu stellen:</p>\",\n  contactInformation:\n    \"<p>Buch- und Zeitschriftenverlag GbR<br>\\\n  Max Mustermann</p>\\\n  <p>Hauptsitz<br>\\\n  Musterstraße 12<br>\\\n  10405 Musterstadt<br>\\\n  Telefon 000 / 00 00 00</p>\\\n  <p>Büro Musterstadt<br>\\\n  Musterstraße 19<br>\\\n  10409 Musterstadt<br>\\\n  Telefon 030 / 00 00 00 00</p>\\\n  <p>info@muster-email.de<br>\\\n  www.musterdomain.de</p>\\\n  <p>Steuernummer 000/000/00000<br>\\\n  Finanzamt Musterstadt</p>\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  books: [],\n};\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\n\nexport default function useCompany() {\n  return useLocalStorage(\"company\", companySceleton);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useInvoices() {\n  return useLocalStorage(\"invoices\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useArticles() {\n  return useLocalStorage(\"articles\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useAuthors() {\n  return useLocalStorage(\"authors\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useCustomers() {\n  return useLocalStorage(\"customers\", []);\n}\n","import React, { useState } from \"react\";\nimport RichTextEditor from \"react-rte\";\n\nexport default function Editor(props) {\n  const [active, setActive] = useState(false);\n  console.log(active);\n  return (\n    <RichTextEditor\n      {...props}\n      onFocus={() => setActive(true)}\n      onBlur={() => {\n        if (props.onBlur && typeof props.onBlur === \"function\") {\n          props.onBlur();\n        }\n        setActive(false);\n      }}\n      toolbarConfig={{\n        display: active\n          ? [\n              \"INLINE_STYLE_BUTTONS\",\n              \"BLOCK_TYPE_BUTTONS\",\n              \"LINK_BUTTONS\",\n              \"BLOCK_TYPE_DROPDOWN\",\n              \"HISTORY_BUTTONS\",\n            ]\n          : [],\n        INLINE_STYLE_BUTTONS: [\n          { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\n          { label: \"Italic\", style: \"ITALIC\" },\n          { label: \"Underline\", style: \"UNDERLINE\" },\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n          { label: \"Normal\", style: \"unstyled\" },\n          { label: \"Heading Large\", style: \"header-one\" },\n          { label: \"Heading Medium\", style: \"header-two\" },\n          { label: \"Heading Small\", style: \"header-three\" },\n        ],\n        BLOCK_TYPE_BUTTONS: [\n          { label: \"UL\", style: \"unordered-list-item\" },\n          { label: \"OL\", style: \"ordered-list-item\" },\n        ],\n      }}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input } from \"semantic-ui-react\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"../Editor/Editor\";\n\nexport default function CustomerForm({ customer, setCustomer }) {\n  const [invoiceAddress, setInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n  );\n\n  const [shippingAddress, setShippingAddress] = useState(\n    RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n  );\n\n  useEffect(() => {\n    setInvoiceAddress(\n      RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n    );\n    setShippingAddress(\n      RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n    );\n  }, [customer]);\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const updateRichtext = (name, value) => {\n    setCustomer({ ...customer, [name]: value.toString(\"html\") });\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"Kundenname\"\n          value={customer.name}\n          name=\"name\"\n          onChange={handleCustomerChange}\n        />\n      </Form.Group>\n      <Form.Field\n        control={Editor}\n        label={\"Rechnungsadresse\"}\n        onChange={setInvoiceAddress}\n        value={invoiceAddress}\n        onBlur={() => {\n          updateRichtext(\"invoiceAddress\", invoiceAddress);\n        }}\n      />\n      <Form.Field\n        control={Editor}\n        label={\"Lieferadress\"}\n        onChange={setShippingAddress}\n        value={shippingAddress}\n        onBlur={() => {\n          updateRichtext(\"shippingAddress\", shippingAddress);\n        }}\n      />\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"MwST\"\n          placeholder=\"7\"\n          name=\"ust\"\n          icon=\"percent\"\n          onChange={handleCustomerChange}\n          value={customer.ust}\n        />\n        <Form.Field\n          control={Input}\n          label=\"Kundenrabatt\"\n          placeholder=\"0\"\n          icon=\"percent\"\n          name=\"discount\"\n          onChange={handleCustomerChange}\n          value={customer.discount}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { customer as customerSceleton } from \"../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport CustomerForm from \"./CustomerForm/CustomerForm\";\nexport default () => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState();\n\n  const saveCustomer = () => {\n    setCustomers([...customers, customer]);\n    setCustomer();\n  };\n  return (\n    <div>\n      <Button\n        onClick={() =>\n          setCustomer({ ...customerSceleton, id: customers.length })\n        }\n        primary\n      >\n        Neuer Kunde\n      </Button>\n      {customer && (\n        <Modal onClose={() => setCustomer()} open={true}>\n          <Modal.Header>Kunde</Modal.Header>\n          <Modal.Content>\n            <CustomerForm customer={customer} setCustomer={setCustomer} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setCustomer()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={saveCustomer}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsadresse</Table.HeaderCell>\n            <Table.HeaderCell>Lieferadress</Table.HeaderCell>\n            <Table.HeaderCell>Rabatt</Table.HeaderCell>\n            <Table.HeaderCell>MwST</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {customers.map((c) => (\n            <Table.Row>\n              <Table.Cell>{c.name}</Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.invoiceAddress }} />\n              </Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.shippingAddress }} />\n              </Table.Cell>\n              <Table.Cell>{c.discount}</Table.Cell>\n              <Table.Cell>{c.ust}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\n\nexport default function Author({ author, setAuthor }) {\n  const [authorPrice, setAuthorPrice] = useState(author.percent);\n\n  const handleAuthorChange = (e, { name, value }) => {\n    if (name === \"percent\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setAuthorPrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setAuthorPrice(value);\n    }\n    setAuthor({ ...author, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleAuthorChange}\n          value={author.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Kontakt\"\n          placeholder=\"Tel, Email, ...\"\n          onChange={handleAuthorChange}\n          name=\"contact\"\n          value={author.contact}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Prozent\"\n          placeholder=\"Prozent\"\n          name=\"percent\"\n          icon=\"percent\"\n          onChange={(e, { value }) => setAuthorPrice(value)}\n          onBlur={(e) => {\n            handleAuthorChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={authorPrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React from \"react\";\n\nexport default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: `${day < 10 ? \"0\" + day : day}.&#8202;${\n          month < 10 ? \"0\" + month : month\n        }.&#8202;${date.getFullYear()}`,\n      }}\n    />\n  );\n}\n","export default function formatPrice(price) {\n  return `${price.toFixed(2)}`.replace(\".\", \",\");\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { Form, Input, Dropdown } from \"semantic-ui-react\";\nimport { useAuthors } from \"../hooks\";\nimport { author as authorSceleton } from \"../sceletons\";\nimport Author from \"./Author\";\nimport { Segment } from \"semantic-ui-react\";\nimport { formatPrice } from \"../services\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n  const [authors] = useAuthors();\n  const [author, setAuthor] = useState(article.authors[0]);\n\n  useEffect(() => {\n    setArticle({ ...article, authors: author ? [author] : [] });\n  }, [author]);\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setArticlePrice(\"0,00\");\n        return;\n      }\n      value = formatPrice(value);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  const authorOptions = [\n    { key: undefined, value: undefined, text: \"\" },\n    { key: authors.length, value: authors.length, text: \"Neuer Kunde\" },\n  ].concat(\n    authors.map((a) => ({\n      key: a.id,\n      value: a.id,\n      text: a.name,\n    }))\n  );\n\n  const handleAuthorChange = (e, { value }) => {\n    if (value === undefined) {\n      setAuthor();\n    } else if (value < authors.length) {\n      setAuthor(authors[value]);\n    } else {\n      setAuthor({ ...authorSceleton, id: authors.length });\n    }\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={(e) => {\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n      <Form.Field\n        label=\"Wählen Sie einen Autoren aus:\"\n        control={Dropdown}\n        search\n        selection\n        options={authorOptions}\n        value={author ? author.id : undefined}\n        onChange={handleAuthorChange}\n      />\n      {author && (\n        <Segment>\n          <Author author={author} setAuthor={setAuthor} />\n        </Segment>\n      )}\n    </Form>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport { useArticles, useInvoices } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\nimport { formatDate } from \"../../services\";\n\nexport default () => {\n  const [articles, setArticles] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const [invoices] = useInvoices();\n  const filteredInvoices = useMemo(() => {\n    if (!invoiceArticle) {\n      return null;\n    }\n    return invoices.reduce((list, i) => {\n      for (let a in i.articles) {\n        const article = i.articles[a];\n        if (article.id === invoiceArticle.id) {\n          return [\n            ...list,\n            {\n              ...i,\n              article,\n            },\n          ];\n        }\n      }\n      return list;\n    }, []);\n  }, [invoices, invoiceArticle]);\n  const updateArticle = () => {\n    let _articles = [...articles];\n    _articles[article.id] = article;\n    setArticles(_articles);\n    setArticle();\n  };\n\n  const deleteArticle = (pos) => {\n    const _articles = [...articles];\n    _articles[pos] = undefined;\n    setArticles(_articles);\n  };\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articles.length })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Artikel</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateArticle}\n              content=\"Speichern\"\n              positive\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                  <Table.HeaderCell>Zahlungsdatum</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {filteredInvoices.map((invoice) => (\n                  <Table.Row>\n                    <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                    <Table.Cell>{invoice.customer.name}</Table.Cell>\n                    <Table.Cell>{invoice.article.amount}</Table.Cell>\n                    <Table.Cell>{invoice.article.price}</Table.Cell>\n                    <Table.Cell>\n                      {invoice.paymentDate\n                        ? formatDate(invoice.paymentDate)\n                        : \"Ausstehend\"}\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Menge</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>{a.amount}</Table.Cell>\n                  <Table.Cell>{a.price}</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setArticle(a)}\n                      primary\n                      icon=\"edit\"\n                    ></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                      secondary\n                    ></Button>\n                    <Button\n                      onClick={() => deleteArticle(i)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const { isDragActive, isDragAccept, isDragReject } = useDropzone({\n    accept: \"image/*\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: (event) => event.stopPropagation(),\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport DropZone from \"./DropZone\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"./Editor/Editor\";\n\nexport default function CompanyForm({ company, setCompany, selected }) {\n  const [footerText, setFooterText] = useState(\n    RichTextEditor.createValueFromString(company.footerText, \"html\")\n  );\n  const [subjectAndBelow, setSubjectAndBelow] = useState(\n    RichTextEditor.createValueFromString(company.subjectAndBelow, \"html\")\n  );\n  const [invoiceText, setInvoiceText] = useState(\n    RichTextEditor.createValueFromString(company.invoiceText, \"html\")\n  );\n  const [contactInformation, setContactInformation] = useState(\n    RichTextEditor.createValueFromString(company.contactInformation, \"html\")\n  );\n  const [aboveClientInvoiceAddress, setAboveClientInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(\n      company.aboveClientInvoiceAddress,\n      \"html\"\n    )\n  );\n\n  const updateRichText = (name, value) => {\n    setCompany({ ...company, [name]: value.toString(\"html\") });\n  };\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n  return (\n    <Form>\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n      )}\n      {selected === \"logo\" && (\n        <Segment>\n          <h4>Logo</h4>\n          {company.logo !== \"\" ? (\n            <div>\n              <img src={company.logo} alt=\"company logo\" />\n              <Button\n                negative\n                onClick={() => setCompany({ ...company, logo: \"\" })}\n              >\n                Löschen\n              </Button>\n            </div>\n          ) : (\n            <DropZone onDrop={onDropHandler} />\n          )}\n        </Segment>\n      )}\n      {selected === \"aboveClientInvoiceAddress\" && (\n        <Form.Field\n          control={Editor}\n          value={aboveClientInvoiceAddress}\n          onChange={setAboveClientInvoiceAddress}\n          onBlur={() => {\n            updateRichText(\n              \"aboveClientInvoiceAddress\",\n              aboveClientInvoiceAddress\n            );\n          }}\n          label=\"Absender\"\n          name=\"aboveClientInvoiceAddress\"\n        />\n      )}\n      {selected === \"contactInformation\" && (\n        <Form.Field\n          control={Editor}\n          value={contactInformation}\n          onChange={setContactInformation}\n          onBlur={() => {\n            updateRichText(\"contactInformation\", contactInformation);\n          }}\n          label=\"Kontakt Informationen\"\n          name=\"contactInformation\"\n        />\n      )}\n      {selected === \"subjectAndBelow\" && (\n        <Form.Field\n          control={Editor}\n          value={subjectAndBelow}\n          onChange={setSubjectAndBelow}\n          onBlur={() => {\n            updateRichText(\"subjectAndBelow\", subjectAndBelow);\n          }}\n          label=\"Betreff und Begrüßung\"\n          name=\"subjectAndBelow\"\n        />\n      )}\n      {selected === \"invoiceText\" && (\n        <Form.Field\n          control={Editor}\n          value={invoiceText}\n          onChange={setInvoiceText}\n          onBlur={() => {\n            updateRichText(\"invoiceText\", invoiceText);\n          }}\n          label=\"Rechnungstext\"\n          name=\"invoiceText\"\n        />\n      )}\n      {selected === \"footerText\" && (\n        <Form.Field\n          control={Editor}\n          value={footerText}\n          onChange={(value) => {\n            setFooterText(value);\n          }}\n          onBlur={() => {\n            updateRichText(\"footerText\", footerText);\n          }}\n          label=\"Fußzeile\"\n          name=\"footerText\"\n        />\n      )}\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Farbe\"\n          control={Input}\n          placeholder=\"z.B. #ffffff oder rgb(120,0,0)\"\n          name=\"companyColor\"\n          onChange={updateCompany}\n          value={company.color}\n        />\n      )}\n    </Form>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport {\n  useLocalStorage,\n  useCompany,\n  useCustomers,\n  useAuthors,\n} from \"../../hooks\";\nimport {\n  Container,\n  Form,\n  Input,\n  Card,\n  Modal,\n  Button,\n  Checkbox,\n  Dropdown,\n  Segment,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport Article from \"../Article\";\nimport CustomerForm from \"../CustomerForm/CustomerForm\";\nimport CompanyForm from \"../CompanyForm\";\nimport { formatPrice } from \"../../services\";\n\nexport default ({\n  invoice,\n  setInvoice,\n  formSelected = [],\n  wrapperClass,\n  setFormSelected,\n}) => {\n  const [customers] = useCustomers();\n  const [company, setCompany] = useCompany();\n  const [customer, setCustomer] = useState(\n    customers[invoice.customer.id] || invoice.customer\n  );\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [selectedArticles, setSelectedArticles] = useState(invoice.articles);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articles.length,\n  });\n  const [toBePayed, setToBePayed] = useState(1);\n  const [toBeSend, setToBeSend] = useState(1);\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [porto, setPorto] = useState(invoice.porto);\n  const [authors, setAuthors] = useAuthors();\n\n  useEffect(() => {\n    setInvoice({\n      ...invoice,\n      customer,\n      articles: selectedArticles.map((a) => ({\n        ...articles[a.articleId],\n        ...a,\n      })),\n      company,\n    });\n  }, [customer, selectedArticles, company]);\n\n  const updateInvoice = (e, { name, value, checked }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = formatPrice(value);\n      setPorto(value);\n    }\n    if (name === \"payed\") {\n      value = checked;\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    setArticle({\n      ...articleSceleton,\n      id: articles.length + 1,\n    });\n    toggleNewArticle();\n    if (article.authors.length > 0) {\n      const _authors = [...authors];\n      _authors[article.authors[0].id] = article.authors[0];\n      setAuthors(_authors);\n    }\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  const customerOptions = useMemo(() => {\n    let list = [\n      {\n        key: customers.length,\n        value: customers.length,\n        text: `Neuer Kunde`,\n      },\n    ];\n    return list.concat(\n      customers.map((c) => ({\n        key: c.id,\n        text: c.name,\n        value: c.id,\n      }))\n    );\n  }, [customers, customer]);\n\n  const articlesOptions = useMemo(() => {\n    const list = [{ key: articles.length, value: articles.length, text: \"\" }];\n    return list.concat(\n      articles.map((a) => ({\n        key: a.id,\n        value: a.id,\n        text: a.name,\n      }))\n    );\n  }, [articles]);\n\n  const handleCustomerChange = (e, { value }) => {\n    if (value < customers.length) setCustomer(customers[value]);\n    else setCustomer({ ...customerSceleton, id: customers.length });\n  };\n\n  const handleArticleChange = (id, name, value) => {\n    if (id >= selectedArticles.length) {\n      if (value >= articles.length) {\n        return;\n      }\n      setSelectedArticles([\n        ...selectedArticles,\n        { toBeSend, toBePayed, articleId: value },\n      ]);\n      setToBeSend(1);\n      setToBePayed(1);\n    } else {\n      if (name === \"articleId\" && value >= articles.length) {\n        setSelectedArticles(selectedArticles.filter((a, i) => i !== id));\n        return;\n      }\n      const _articles = [...selectedArticles];\n      _articles[id][name] = value;\n      setSelectedArticles(_articles);\n    }\n  };\n\n  return (\n    <div className={wrapperClass}>\n      <div className={\"invoice-form \"}>\n        {formSelected[0] === \"customer\" && (\n          <Modal open onClose={() => setFormSelected([])}>\n            <div className=\"invoice-form-wrap\">\n              <Form>\n                <Form.Field\n                  label=\"Wählen Sie einen Kunden aus:\"\n                  control={Dropdown}\n                  search\n                  selection\n                  options={customerOptions}\n                  value={customer.id}\n                  onChange={handleCustomerChange}\n                />\n              </Form>\n              <Segment>\n                <CustomerForm customer={customer} setCustomer={setCustomer} />\n              </Segment>\n            </div>\n          </Modal>\n        )}\n        <Container>\n          <Card fluid>\n            <Card.Content>\n              <div className=\"invoice-form-wrap\">\n                <div>\n                  <Form>\n                    {selectedArticles.length > 0 && (\n                      <div>\n                        <h3>Artikel in der Rechnung</h3>\n                        {selectedArticles.map((a, i) => (\n                          <div>\n                            <Form.Group widths=\"equal\">\n                              <Form.Input\n                                fluid\n                                name=\"toBeSend\"\n                                type=\"number\"\n                                label=\"Zu Senden\"\n                                value={a.toBeSend}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                              <Form.Input\n                                fluid\n                                name=\"toBePayed\"\n                                type=\"number\"\n                                label=\"Zu Bezahlen\"\n                                value={a.toBePayed}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n\n                              <Form.Field\n                                control={Dropdown}\n                                fluid\n                                label=\"Artikel\"\n                                name=\"articleId\"\n                                search\n                                selection\n                                options={articlesOptions}\n                                value={a.articleId}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                            </Form.Group>\n                          </div>\n                        ))}\n                        <hr></hr>\n                      </div>\n                    )}\n                    <h3>Artikel hinzufügen</h3>\n\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        fluid\n                        name=\"amount\"\n                        type=\"number\"\n                        label=\"Zu Senden\"\n                        value={toBeSend}\n                        onChange={(e, { value }) => setToBeSend(value)}\n                      />\n                      <Form.Input\n                        fluid\n                        name=\"amountPayed\"\n                        type=\"number\"\n                        label=\"Zu Bezahlen\"\n                        value={toBePayed}\n                        onChange={(e, { value }) => setToBePayed(value)}\n                      />\n                      <Form.Field\n                        control={Dropdown}\n                        fluid\n                        label=\"Artikel\"\n                        name=\"articleId\"\n                        search\n                        selection\n                        options={articlesOptions}\n                        value={article.id}\n                        onChange={(e, { value }) =>\n                          handleArticleChange(\n                            selectedArticles.length,\n                            \"articleId\",\n                            value\n                          )\n                        }\n                      />\n                    </Form.Group>\n                  </Form>\n                  <Button onClick={toggleNewArticle}>\n                    Neuen Artikel Anlegen\n                  </Button>\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle}>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      positive\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </div>\n            </Card.Content>\n          </Card>\n          {formSelected[0] === \"general\" && (\n            <Modal open onClose={() => setFormSelected([])}>\n              <div className=\"invoice-form-wrap\">\n                <Form>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"invoiceDate\" && (\n                      <Form.Field\n                        label=\"Rechnungsdatum\"\n                        name=\"invoiceDate\"\n                        selected={new Date(invoice.invoiceDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"orderDate\" && (\n                      <Form.Field\n                        label=\"Bestelldatum\"\n                        name=\"orderDate\"\n                        selected={new Date(invoice.orderDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"shippingDate\" && (\n                      <Form.Field\n                        label=\"Versanddatum\"\n                        name=\"shippingDate\"\n                        selected={new Date(invoice.shippingDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                  </Form.Group>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"porto\" && (\n                      <Form.Field\n                        label=\"Porto\"\n                        value={porto}\n                        name=\"porto\"\n                        onChange={(e, { value }) => setPorto(value)}\n                        control={Input}\n                        onBlur={(e) =>\n                          updateInvoice(e, {\n                            name: e.target.name,\n                            value: e.target.value,\n                          })\n                        }\n                        icon=\"euro\"\n                      />\n                    )}\n                    {formSelected[1] === \"invoiceNumber\" && (\n                      <Form.Field\n                        label=\"Rechnungsnummer\"\n                        name=\"invoiceNumber\"\n                        value={invoice.invoiceNumber}\n                        onChange={updateInvoice}\n                        control={Input}\n                      />\n                    )}\n                  </Form.Group>\n\n                  {formSelected[1] === \"payed\" && (\n                    <div>\n                      <Form.Field>\n                        <label>Bezahlt</label>\n                        <Checkbox\n                          onChange={(e, { name, checked }) => {\n                            if (checked) {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: new Date(),\n                              });\n                            } else {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: undefined,\n                              });\n                            }\n                          }}\n                          name=\"payed\"\n                          checked={invoice.payed}\n                          toggle\n                        />\n                      </Form.Field>\n                      {invoice.payed && (\n                        <Form.Field\n                          label=\"Zahlungseingangsdatum\"\n                          name=\"paymentDate\"\n                          selected={new Date(invoice.paymentDate)}\n                          onChange={(v) => updateInvoiceDate(v, \"paymentDate\")}\n                          control={DatePicker}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                      )}\n                    </div>\n                  )}\n                </Form>\n                <CompanyForm\n                  company={company}\n                  setCompany={setCompany}\n                  selected={formSelected[1]}\n                />\n              </div>\n            </Modal>\n          )}\n        </Container>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { Button } from \"semantic-ui-react\";\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <Button\n    primary\n    onClick={() => {\n      const input = document.getElementById(id);\n\n      html2canvas(input, { scale: 3 }).then((canvas) => {\n        const imgData = canvas.toDataURL(\"image/jpeg\", 0.5);\n        let pdf = new jsPDF();\n        pdf.addImage(imgData, \"JPEG\", 0, 0, 210, 297);\n        pdf.save(`${fileName}.pdf`);\n      });\n    }}\n    icon=\"download\"\n    labelPosition=\"right\"\n    content=\"Download\"\n  ></Button>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\n\nexport default function SinglePageOverlay({ onClick, wrapperClass, children }) {\n  return (\n    <div\n      className={`${wrapperClass ? wrapperClass : \"\"} invoice-overlay-wrapper`}\n    >\n      {children}\n      <div className=\"invoice-overlay\" onClick={onClick} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate, formatPrice } from \"../../services\";\nimport { Button } from \"semantic-ui-react\";\nimport SinglePageOverlay from \"./SinglePageOverlay\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    customer,\n    articles = [],\n    company,\n  },\n  setFormSelected,\n}) => {\n  const articles_net_price = articles\n    .map(({ price, toBePayed }) => {\n      const totalPrice = price * toBePayed;\n      const totalPriceWithDiscount =\n        totalPrice - totalPrice * (customer.discount / 100);\n      const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div\n        className=\"invoice-folding-line\"\n        style={\n          company.companyColor ? { borderColor: company.companyColor } : {}\n        }\n      />\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <SinglePageOverlay\n            onClick={() => setFormSelected([\"general\", \"logo\"])}\n          >\n            <div className=\"invoice-page-image-wrapper\">\n              <img\n                className=\"invoice-header-company-logo\"\n                src={company.logo}\n                alt=\"company logo\"\n              />\n            </div>\n          </SinglePageOverlay>\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-header-customer-company\"\n                onClick={() =>\n                  setFormSelected([\"general\", \"aboveClientInvoiceAddress\"])\n                }\n              >\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: company.aboveClientInvoiceAddress,\n                  }}\n                />\n              </SinglePageOverlay>\n              {customer ? (\n                <SinglePageOverlay\n                  wrapperClass=\"invoice-header-customer-info\"\n                  onClick={() => setFormSelected([\"customer\"])}\n                >\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: customer.invoiceAddress,\n                    }}\n                  />\n                </SinglePageOverlay>\n              ) : (\n                <Button>Kunde hinzufügen</Button>\n              )}\n            </div>\n            <SinglePageOverlay\n              wrapperClass=\"invoice-header-company-info\"\n              onClick={() => setFormSelected([\"general\", \"contactInformation\"])}\n            >\n              <div\n                dangerouslySetInnerHTML={{ __html: company.contactInformation }}\n              ></div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-subject-and-below\"\n                onClick={() => setFormSelected([\"general\", \"subjectAndBelow\"])}\n              >\n                <div\n                  dangerouslySetInnerHTML={{ __html: company.subjectAndBelow }}\n                />\n              </SinglePageOverlay>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versanddatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"orderDate\"])}\n                    wrapperClass=\"invoice-body-order-date\"\n                  >\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"shippingDate\"])}\n                    wrapperClass=\"invoice-body-send-date\"\n                  >\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"customer\"])}\n                  >\n                    <div\n                      className=\"invoice-body-send-to\"\n                      dangerouslySetInnerHTML={{\n                        __html: customer.shippingAddress,\n                      }}\n                    ></div>\n                  </SinglePageOverlay>\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-invoice-date\">\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceDate\"])}\n              >\n                <div className=\"invoice-body-top-right\">\n                  <p>\n                    Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceNumber\"])}\n              >\n                <div className=\"invoice-body-invoice-nr\">\n                  <p>\n                    Rechnungsnummer: <b>{invoiceNumber}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlung angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-bottom\">\n            <div className=\"invoice-body-article-wrapper\">\n              {articles.map(({ toBePayed, toBeSend, price, name, isbn }) => {\n                const multiple = parseInt(toBePayed) > 1;\n                const totalPrice = price * toBePayed;\n                const totalPriceWithDiscount =\n                  totalPrice - totalPrice * (customer.discount / 100);\n                const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n                return (\n                  <div className=\"invoice-body-article\">\n                    <div className=\"invoice-body-article-left\">\n                      <div className=\"invoice-body-article-description\">\n                        <div>\n                          <b>\n                            {toBePayed !== toBeSend && toBeSend + \"/\"}\n                            {toBePayed} Exemplar\n                            {multiple && \"e\"}\n                          </b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          <b>{name && `„${name}“,`}</b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          {isbn && `${isbn},`}\n                        </div>\n                      </div>\n                      <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                        multiple ? \"je\" : \"\"\n                      } ${price} €${\n                        multiple ? ` = ${formatPrice(totalPrice)}€` : \"\"\n                      }${\n                        customer.discount > 0\n                          ? `, abzüglich ${\n                              customer.discount\n                            } % Rabatt = ${formatPrice(\n                              totalPriceWithDiscount\n                            )} €`\n                          : \"\"\n                      } (beinhaltet ${customer.ust} % MwST = ${formatPrice(\n                        totalPriceWithDiscount - net\n                      )})`}</div>\n                    </div>\n                    <div className=\"invoice-body-article-price\">\n                      <b>{articles.length > 1 && `${formatPrice(net)} €`}</b>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"invoice-body-price-calculation\">\n              <div className=\"invoice-body-price-calculation-label-and-number\">\n                <p>Netto</p>\n                <p>\n                  <b>{formatPrice(articles_net_price)} €</b>\n                </p>\n              </div>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"porto\"])}\n              >\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>Versandkosten</p>\n                  <p>\n                    <b>{porto.replace(\".\", \",\")} €</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay onClick={() => setFormSelected([\"customer\"])}>\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>{`+${customer.ust}% Mehrwertsteuer`}</p>\n                  <p>\n                    <b>\n                      {formatPrice(\n                        ((articles_net_price + parseFloat(porto)) *\n                          parseFloat(customer.ust)) /\n                          100\n                      )}{\" \"}\n                      €\n                    </b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n            </div>\n            <div className=\"invoice-body-price\">\n              <p>Rechnungsbetrag</p>\n              <p>\n                <b>\n                  {formatPrice(\n                    (articles_net_price + parseFloat(porto)) *\n                      (1 + parseFloat(customer.ust) / 100)\n                  )}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n            <SinglePageOverlay\n              onClick={() => setFormSelected([\"general\", \"invoiceText\"])}\n            >\n              <div>\n                <p\n                  className=\"invoice-body-final-text\"\n                  dangerouslySetInnerHTML={{ __html: company.invoiceText }}\n                ></p>\n              </div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <SinglePageOverlay\n          onClick={() => setFormSelected([\"general\", \"footerText\"])}\n        >\n          <div\n            className=\"invoice-footer\"\n            style={\n              company.companyColor ? { borderColor: company.companyColor } : {}\n            }\n            dangerouslySetInnerHTML={{ __html: company.footerText }}\n          ></div>\n        </SinglePageOverlay>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React, { useState } from \"react\";\n\nimport InvoiceForm from \"../InvoiceForm\";\nimport PrintButton from \"../PrintButton\";\nimport SinglePage from \"../SinglePage/SinglePage\";\nimport { Button } from \"semantic-ui-react\";\n\nimport \"./Invoice.css\";\nimport { useCustomers } from \"../../hooks\";\nimport { calculateTotalPrice } from \"../../services\";\n\nexport default ({\n  edit,\n  invoice,\n  setInvoice,\n  invoices,\n  setInvoices,\n  onSave,\n}) => {\n  if (!invoice || !invoices) {\n    return null;\n  }\n  const [active, setActive] = useState(edit);\n  const [formSelected, setFormSelected] = useState([]);\n  const [customers, setCustomers] = useCustomers();\n\n  const saveInvoice = () => {\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    _invoices[invoice.id] = invoice;\n    setInvoices(_invoices);\n    setInvoice();\n    const _customers = [...customers];\n    _customers[invoice.customer.id] = invoice.customer;\n    setCustomers(_customers);\n    if (typeof onSave === \"function\") {\n      onSave();\n    }\n  };\n\n  const newInvoice = invoice.id === invoices.length;\n\n  return (\n    <div className=\"invoice-page\">\n      {active && (\n        <InvoiceForm\n          wrapperClass=\"invoice-form-wrapper\"\n          invoice={invoice}\n          setInvoice={setInvoice}\n          setInvoices={setInvoices}\n          formSelected={formSelected}\n          setFormSelected={setFormSelected}\n        />\n      )}\n\n      <div className=\"invoice-page-wrapper\">\n        <h1>\n          {newInvoice ? \"Neue Rechnung erstellen\" : \"Rechnung Bearbeiten\"}\n        </h1>\n        <p>Klicken Sie auf den Bereich den Sie anpassen wollen.</p>\n        {active ? (\n          <div className=\"invoice-page-button-container\">\n            <div>\n              <PrintButton\n                id={\"singlePage\"}\n                label={\"Rechnung Herunterladen\"}\n                fileName={invoice.invoiceNumber}\n              />\n            </div>\n            <div>\n              <Button\n                onClick={() => setInvoice()}\n                content=\"Abbrechen\"\n                negative\n                icon=\"close\"\n                labelPosition=\"right\"\n              ></Button>\n              {invoice.customer && (\n                <Button\n                  onClick={saveInvoice}\n                  content={newInvoice ? \"Anlegen\" : \"Speichern\"}\n                  positive\n                  icon=\"check\"\n                  labelPosition=\"right\"\n                ></Button>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"invoice-button-wrapper\">\n            <Button onClick={() => setActive(true)} primary>\n              Neue Rechnung erstellen\n            </Button>\n          </div>\n        )}\n        <SinglePage\n          id={\"singlePage\"}\n          invoice={invoice}\n          setInvoice={setInvoice}\n          setFormSelected={setFormSelected}\n        />\n      </div>\n    </div>\n  );\n};\n","export default (invoice) =>\n  invoice.articles\n    .map(({ price, toBePayed }) => {\n      const totalPrice = price * toBePayed;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React, { useState } from \"react\";\nimport { useCompany, useInvoices, useCustomers } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../sceletons\";\nimport { formatDate, formatPrice } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n  const [customers] = useCustomers();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice\n        edit\n        invoice={invoiceSelected}\n        setInvoice={setInvoiceSelected}\n        setInvoices={setInvoices}\n        invoices={invoices}\n      />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoices.length,\n            customer: {\n              ...customerSceleton,\n              id: customers.length,\n            },\n            company,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell>Zahlungseingang</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map((i) => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map((a) => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{formatPrice(i.totalPrice)} €</Table.Cell>\n              <Table.Cell>\n                {i.paymentDate ? formatDate(i.paymentDate) : \"Ausstehend\"}\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  primary\n                  icon=\"edit\"\n                  onClick={() => setInvoiceSelected(i)}\n                ></Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\n\nexport default function Authors() {\n  const [authors, setAuthors] = useAuthors();\n  const [author, setAuthor] = useState();\n\n  function deleteAuthor(id) {\n    const _authors = [...authors];\n    _authors[id] = undefined;\n    setAuthors(_authors);\n  }\n\n  function updateAuthors(id) {\n    const _authors = [...authors];\n    _authors[author.id] = author;\n    setAuthors(_authors);\n    setAuthor();\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ authorSceleton, id: authors.length })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateAuthors}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button onClick={() => setAuthor(a)} icon=\"eye\"></Button>\n                    <Button\n                      onClick={() => deleteAuthor(i)}\n                      icon=\"delete\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import useMigrationWrapper from \"./useMigrationWrapper\";\nimport { useArticles } from \"../hooks\";\n\nconst VERSION = 2;\n\nfunction useAddAuthorsToArticles() {\n  const [articles, setArticles] = useArticles();\n\n  setArticles(articles.map((a) => ({ ...a, authors: [] })));\n}\n\nexport default () => useMigrationWrapper(useAddAuthorsToArticles, VERSION);\n","import { useLocalStorage } from \"../hooks\";\n\nexport default function useMigrationWrapper(migrate, version) {\n  const [currentVersion, setCurrentVersion] = useLocalStorage(\"version\", \"1\");\n  if (parseInt(currentVersion) < version) {\n    migrate();\n  }\n  setCurrentVersion(version);\n}\n","import migration from \"../migration\";\n\nexport default function useMigration() {\n  migration();\n}\n","import authors from \"./authors\";\n\nexport default function migration() {\n  authors();\n}\n","import React, { useState } from \"react\";\nimport { useInvoices, useCompany, useCustomers } from \"../../hooks\";\nimport Invoice from \"../../components/Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home() {\n  const [company] = useCompany();\n  const [customers] = useCustomers();\n  const history = useHistory();\n\n  const [invoices, setInvoices] = useInvoices();\n  const [invoice, setInvoice] = useState({\n    ...invoiceSceleton,\n    id: invoices.length,\n    customer: {\n      ...customerSceleton,\n      id: customers.length,\n    },\n    company,\n  });\n\n  return (\n    <Invoice\n      invoice={invoice}\n      setInvoice={setInvoice}\n      setInvoices={setInvoices}\n      invoices={invoices}\n      edit={true}\n      onSave={() => {\n        history.push(\"/invoices\");\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { useInvoices } from \"../../hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./TopNavigationBar.css\";\n\nexport default function TopNavigationBar() {\n  const [invoices] = useInvoices();\n  const history = useHistory();\n\n  return (\n    <div className=\"oi-top-navigation-bar\">\n      <div>\n        <h2 className=\"oi-top-navigation-bar-heading\">Online Rechnung</h2>\n      </div>\n      {invoices.length > 0 && (\n        <div>\n          <Button.Group>\n            <Button\n              content=\"Rechnungen\"\n              onClick={() => history.push(\"invoices\")}\n            />\n            <Button\n              content=\"Artikel\"\n              onClick={() => history.push(\"articles\")}\n            />\n            <Button\n              content=\"Kunden\"\n              onClick={() => history.push(\"customers\")}\n            />\n            <Button content=\"Autoren\" onClick={() => history.push(\"authors\")} />\n          </Button.Group>\n          <Button\n            size=\"large\"\n            className=\"oi-top-navigation-bar-new-invoice\"\n            content=\"Neue Rechnung\"\n            onClick={() => history.push(\"/\")}\n            secondary\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Authors from \"./components/Authors/Authors\";\nimport useMigration from \"./hooks/useMigration\";\nimport Home from \"./pages/Home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopNavigationBar from \"./components/TopNavigationBar\";\n\nimport \"semantic-ui-less/semantic.less\";\n\nconst App = () => {\n  useMigration();\n\n  return (\n    <Router>\n      <TopNavigationBar />\n      <div className=\"invoice-app-container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/invoices\">\n            <Invoices />\n          </Route>\n          <Route path=\"/customers\">\n            <Customers />\n          </Route>\n          <Route path=\"/articles\">\n            <Articles />\n          </Route>\n\n          <Route path=\"/authors\">\n            <Authors />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}