{"version":3,"sources":["components/Customers.js"],"names":["useCustomers","customers","addCustomer","removeCustomer","updateCustomer","customersLength","useState","customer","setCustomer","useGA","onClick","customerSceleton","id","primary","onClose","open","Header","Content","Actions","content","negative","icon","labelPosition","celled","Row","HeaderCell","Body","map","c","i","Cell","name","dangerouslySetInnerHTML","__html","invoiceAddress","shippingAddress","discount","ust"],"mappings":"mNAKe,qBAAO,IAAD,EAOfA,cAPe,mBAEjBC,EAFiB,KAGjBC,EAHiB,KAIjBC,EAJiB,KAKjBC,EALiB,KAMjBC,EANiB,OAQaC,qBARb,mBAQZC,EARY,KAQFC,EARE,KASnBC,cAWA,OACE,6BACE,kBAAC,IAAD,CACEC,QAAS,kBACPF,EAAY,eAAKG,IAAN,CAAwBC,GAAIP,MAEzCQ,SAAO,GAJT,eAQCN,GACC,kBAAC,IAAD,CAAOO,QAAS,kBAAMN,KAAeO,MAAM,GACzC,kBAAC,IAAMC,OAAP,cACA,kBAAC,IAAMC,QAAP,KACE,kBAAC,IAAD,CAAcV,SAAUA,EAAUC,YAAaA,KAEjD,kBAAC,IAAMU,QAAP,KACE,kBAAC,IAAD,CACER,QAAS,kBAAMF,KACfW,QAAQ,YACRC,UAAQ,EACRC,KAAK,QACLC,cAAc,UAEhB,kBAAC,IAAD,CACEZ,QAlCS,WACfH,EAASK,IAAMP,EACjBH,EAAYK,GAEZH,EAAeG,GAEjBC,KA6BUW,QAAQ,YACRN,SAAO,EACPQ,KAAK,QACLC,cAAc,YAKtB,kBAAC,IAAD,CAAOC,QAAM,GACX,kBAAC,IAAMP,OAAP,KACE,kBAAC,IAAMQ,IAAP,KACE,kBAAC,IAAMC,WAAP,aACA,kBAAC,IAAMA,WAAP,yBACA,kBAAC,IAAMA,WAAP,sBACA,kBAAC,IAAMA,WAAP,eACA,kBAAC,IAAMA,WAAP,aACA,kBAAC,IAAMA,WAAP,QAIJ,kBAAC,IAAMC,KAAP,KACGzB,EAAU0B,KAAI,SAACC,EAAGC,GAAJ,OACb,kBAAC,IAAML,IAAP,KACE,kBAAC,IAAMM,KAAP,KAAaF,EAAEG,MACf,kBAAC,IAAMD,KAAP,KACE,yBAAKE,wBAAyB,CAAEC,OAAQL,EAAEM,mBAE5C,kBAAC,IAAMJ,KAAP,KACE,yBAAKE,wBAAyB,CAAEC,OAAQL,EAAEO,oBAE5C,kBAAC,IAAML,KAAP,KAAaF,EAAEQ,UACf,kBAAC,IAAMN,KAAP,KAAaF,EAAES,KACf,kBAAC,IAAMP,KAAP,KACE,kBAAC,IAAD,CACEpB,QAAS,kBAAMF,EAAYoB,IAC3Bf,SAAO,EACPQ,KAAK,SAEP,kBAAC,IAAD,CACEX,QAAS,kBAAMP,EAAeyB,EAAEhB,KAChCQ,UAAQ,EACRC,KAAK","file":"static/js/8.eafb70d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useCustomers, useGA } from \"../hooks\";\nimport { customer as customerSceleton } from \"../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport CustomerForm from \"./CustomerForm/CustomerForm\";\nexport default () => {\n  const [\n    customers,\n    addCustomer,\n    removeCustomer,\n    updateCustomer,\n    customersLength,\n  ] = useCustomers();\n  const [customer, setCustomer] = useState();\n  useGA();\n\n  const saveCustomer = () => {\n    if (customer.id >= customersLength) {\n      addCustomer(customer);\n    } else {\n      updateCustomer(customer);\n    }\n    setCustomer();\n  };\n\n  return (\n    <div>\n      <Button\n        onClick={() =>\n          setCustomer({ ...customerSceleton, id: customersLength })\n        }\n        primary\n      >\n        Neuer Kunde\n      </Button>\n      {customer && (\n        <Modal onClose={() => setCustomer()} open={true}>\n          <Modal.Header>Kunde</Modal.Header>\n          <Modal.Content>\n            <CustomerForm customer={customer} setCustomer={setCustomer} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setCustomer()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={saveCustomer}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsadresse</Table.HeaderCell>\n            <Table.HeaderCell>Lieferadresse</Table.HeaderCell>\n            <Table.HeaderCell>Rabatt</Table.HeaderCell>\n            <Table.HeaderCell>MwST</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {customers.map((c, i) => (\n            <Table.Row>\n              <Table.Cell>{c.name}</Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.invoiceAddress }} />\n              </Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.shippingAddress }} />\n              </Table.Cell>\n              <Table.Cell>{c.discount}</Table.Cell>\n              <Table.Cell>{c.ust}</Table.Cell>\n              <Table.Cell>\n                <Button\n                  onClick={() => setCustomer(c)}\n                  primary\n                  icon=\"edit\"\n                ></Button>\n                <Button\n                  onClick={() => removeCustomer(c.id)}\n                  negative\n                  icon=\"trash\"\n                ></Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n"],"sourceRoot":""}