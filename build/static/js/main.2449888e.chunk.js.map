{"version":3,"sources":["hooks/useLocalStorage.js","components/Customers.js","components/Articles.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","services/formatDate.js","services/calculateTotalPrice.js","components/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage.js","components/Invoice.js","components/Invoices.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","customers","Table","celled","Header","Row","HeaderCell","Body","map","c","Cell","name","address","postCode","city","discount","ust","articles","a","isbn","amount","price","empty","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","invoice","setInvoice","setCustomers","customerSceleton","customer","setCustomer","undefined","newCustomer","setNewCustomer","customerSearch","setCustomerSearch","articleSceleton","article","setArticle","articleAmount","setArticleAmount","articleSearch","setArticleSearch","newArticle","setNewArticle","invoices","setInvoices","toggleNewArticle","filteredCustomers","useMemo","filter","toLowerCase","includes","filteredArticles","addNewCustomer","toggleNewCustomer","handleCustomerChange","e","parseFloat","isNaN","handleArticleChange","toFixed","addArticleToInvoice","updateInvoiceDate","className","Container","Card","fluid","Content","Accordion","Title","index","Icon","active","class","Label","onClick","Input","placeholder","onChange","Button","fc","length","Modal","open","onClose","Form","Group","width","Field","id","control","label","icon","Actions","content","negative","labelPosition","primary","i","Detail","pos","type","selected","v","DatePicker","dateFormat","totalPrice","reduce","total","x","calculateTotalPrice","_invoices","PrintButton","style","height","px","mm","start","end","input","document","getElementById","inputHeightMm","offsetHeight","Math","floor","a4HeightPx","numPages","a4HeightMm","range","Array","join","split","val","comp","inputHeightPx","html2canvas","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","Page","children","singleMode","SinglePage","send_default_price","articles_net_price","multiple","parseInt","totalPriceWithDiscount","net","invoiceSelected","setInvoiceSelected","Invoice","invoiceSceleton","render","Tab","panes","menuItem","Invoices","Customers","Articles"],"mappings":"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","file":"static/js/main.2449888e.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [customers, setCustomer] = useLocalStorage(\"customers\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Adresse</Table.HeaderCell>\n          <Table.HeaderCell>PLZ</Table.HeaderCell>\n          <Table.HeaderCell>Stadt</Table.HeaderCell>\n          <Table.HeaderCell>Rabatt</Table.HeaderCell>\n          <Table.HeaderCell>MwST</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {customers.map(c => (\n          <Table.Row>\n            <Table.Cell>{c.name}</Table.Cell>\n            <Table.Cell>{c.address}</Table.Cell>\n            <Table.Cell>{c.postCode}</Table.Cell>\n            <Table.Cell>{c.city}</Table.Cell>\n            <Table.Cell>{c.discount}</Table.Cell>\n            <Table.Cell>{c.ust}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>ISBN</Table.HeaderCell>\n          <Table.HeaderCell>Menge</Table.HeaderCell>\n          <Table.HeaderCell>Preis</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {articles.map(a => (\n          <Table.Row>\n            <Table.Cell>{a.name}</Table.Cell>\n            <Table.Cell>{a.isbn}</Table.Cell>\n            <Table.Cell>{a.amount}</Table.Cell>\n            <Table.Cell>{a.price}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","export default { name: \"\", empty: true, price: \"\", isbn: \"\", amount: 1 };\n","export default {\n  name: \"\",\n  address: \"\",\n  postCode: \"\",\n  city: \"\",\n  discount: 0,\n  ust: 7\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  articles: []\n};\n","export default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return `${day < 10 ? \"0\" + day : day}.${\n    month < 10 ? \"0\" + month : month\n  }.${date.getFullYear()}`;\n}\n","export default invoice =>\n  invoice.articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React, { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport {\n  Accordion,\n  Container,\n  Form,\n  Icon,\n  Input,\n  Card,\n  Modal,\n  Label,\n  Button\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton\n} from \"../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport { calculateTotalPrice } from \"../services\";\n\nexport default ({ invoice, setInvoice }) => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState(customerSceleton);\n  const [newCustomer, setNewCustomer] = useState(undefined);\n  const [customerSearch, setCustomerSearch] = useState(\"\");\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [article, setArticle] = useState(articleSceleton);\n  const [articleAmount, setArticleAmount] = useState(1);\n  const [articleSearch, setArticleSearch] = useState(\"\");\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const filteredCustomers = useMemo(\n    () =>\n      customers.filter(c =>\n        c.name.toLowerCase().includes(customerSearch.toLowerCase())\n      ),\n    [customers, customerSearch]\n  );\n\n  const filteredArticles = useMemo(\n    () =>\n      articles.filter(a =>\n        a.name.toLowerCase().includes(articleSearch.toLowerCase())\n      ),\n    [articles, articleSearch]\n  );\n\n  const addNewCustomer = () => {\n    setCustomers([...customers, customer]);\n    setInvoice({ ...invoice, customer });\n    toggleNewCustomer();\n  };\n\n  const removeCustomer = () => {\n    setInvoice({ ...invoice, customer: undefined });\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n      value = value.toFixed(2);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  const addArticleToInvoice = article => {\n    setInvoice({\n      ...invoice,\n      articles: [\n        ...invoice.articles,\n        { ...article, articleAmount: articleAmount }\n      ]\n    });\n  };\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    addArticleToInvoice(article);\n    toggleNewArticle();\n  };\n\n  const removeArticle = pos => {\n    setInvoice({\n      ...invoice,\n      articles: invoice.articles.filter((a, i) => i !== pos)\n    });\n  };\n\n  const toggleNewCustomer = () => {\n    setNewCustomer(!newCustomer);\n  };\n\n  const saveInvoice = () => {\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    _invoices[invoice.id] = invoice;\n    setInvoices(_invoices);\n    setInvoice();\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  return (\n    <div className=\"invoice-form\">\n      <Container>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Rechnungsdaten</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Accordion>\n              <Accordion.Title index={0}>\n                <Icon name=\"dropdown\" />\n                Kunde\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                {invoice.customer ? (\n                  <div class=\"invoice-form-label-container\">\n                    <Label>\n                      {invoice.customer.name}\n                      <Icon name=\"delete\" onClick={removeCustomer} />\n                    </Label>\n                  </div>\n                ) : (\n                  <div>\n                    <Input\n                      placeholder=\"Suche...\"\n                      onChange={(e, { value }) => setCustomerSearch(value)}\n                      value={customerSearch}\n                    />\n                    {customerSearch == \"\" ? (\n                      <Button onClick={toggleNewCustomer}>Neuer Kunde</Button>\n                    ) : (\n                      <div className=\"invoice-form-label-container\">\n                        {filteredCustomers.map(fc => (\n                          <Label\n                            onClick={() =>\n                              setInvoice({ ...invoice, customer: fc })\n                            }\n                          >\n                            {fc.name}\n                          </Label>\n                        ))}\n                        {filteredCustomers.length == 0 && (\n                          <p>No Customers found.</p>\n                        )}\n                      </div>\n                    )}\n\n                    <Modal open={newCustomer} onClose={toggleNewCustomer}>\n                      <Modal.Header>Neuer Kunde</Modal.Header>\n                      <Modal.Content>\n                        <Form>\n                          <Form.Group width=\"equal\">\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Name\"\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              onChange={handleCustomerChange}\n                              value={customer.name}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Geschäftsform\"\n                              placeholder=\"Geschäftsform\"\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Anschrift\"\n                              placeholder=\"Musterschstraße 3\"\n                              name=\"address\"\n                              onChange={handleCustomerChange}\n                              value={customer.address}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"PLZ\"\n                              placeholder=\"PLZ\"\n                              name=\"postCode\"\n                              onChange={handleCustomerChange}\n                              value={customer.postCode}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Stadt\"\n                              placeholder=\"Stadt\"\n                              name=\"city\"\n                              onChange={handleCustomerChange}\n                              value={customer.city}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"MwST\"\n                              placeholder=\"7\"\n                              name=\"ust\"\n                              icon=\"percent\"\n                              onChange={handleCustomerChange}\n                              value={customer.ust}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Rabat\"\n                              placeholder=\"0\"\n                              icon=\"percent\"\n                              name=\"discount\"\n                              onChange={handleCustomerChange}\n                              value={customer.discount}\n                            />\n                          </Form.Group>\n                        </Form>\n                      </Modal.Content>\n                      <Modal.Actions>\n                        <Button\n                          onClick={toggleNewCustomer}\n                          content=\"Abbrechen\"\n                          negative\n                          icon=\"close\"\n                          labelPosition=\"right\"\n                        ></Button>\n                        <Button\n                          onClick={addNewCustomer}\n                          content=\"Anlegen\"\n                          primary\n                          icon=\"check\"\n                          labelPosition=\"right\"\n                        ></Button>\n                      </Modal.Actions>\n                    </Modal>\n                  </div>\n                )}\n              </Accordion.Content>\n              <Accordion.Title index={1}>\n                <Icon name=\"dropdown\" />\n                Artikel\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <div className=\"invoice-form-label-container\">\n                  {invoice.articles.map((a, i) => {\n                    return (\n                      <Label>\n                        {a.name}\n                        <Label.Detail>{a.articleAmount}</Label.Detail>\n                        <Icon\n                          name=\"delete\"\n                          onClick={() => removeArticle(i)}\n                        ></Icon>\n                      </Label>\n                    );\n                  })}\n                </div>\n                <div>\n                  <Input\n                    name=\"amount\"\n                    type=\"number\"\n                    label=\"Menge\"\n                    value={articleAmount}\n                    onChange={(e, { value }) => setArticleAmount(value)}\n                  />\n\n                  <Input\n                    name=\"article\"\n                    placeholder=\"Suche...\"\n                    value={articleSearch}\n                    onChange={(e, { value }) => setArticleSearch(value)}\n                  />\n                  {articleSearch == \"\" ? (\n                    <Button onClick={toggleNewArticle}>Neuer Artikel</Button>\n                  ) : (\n                    <div className=\"invoice-form-label-container\">\n                      {filteredArticles.map(a => (\n                        <Label onClick={() => addArticleToInvoice(a)}>\n                          {a.name}\n                        </Label>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle}>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Form>\n                      <Form.Group width=\"equal\">\n                        <Form.Field\n                          id=\"form-input-control-name\"\n                          control={Input}\n                          label=\"Name\"\n                          placeholder=\"Name\"\n                          name=\"name\"\n                          onChange={handleArticleChange}\n                          value={article.name}\n                        />\n                        <Form.Field\n                          id=\"form-input-control-name\"\n                          control={Input}\n                          label=\"Menge\"\n                          placeholder=\"Menge\"\n                          type=\"number\"\n                          onChange={handleArticleChange}\n                          name=\"amount\"\n                          value={article.amount}\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Field\n                          id=\"form-input-control-last-name\"\n                          control={Input}\n                          label=\"ISBN\"\n                          placeholder=\"ISBN\"\n                          name=\"isbn\"\n                          onChange={handleArticleChange}\n                          value={article.isbn}\n                        />\n                        <Form.Field\n                          id=\"form-input-control-last-name\"\n                          control={Input}\n                          label=\"Preis\"\n                          placeholder=\"Preis\"\n                          name=\"price\"\n                          icon=\"euro sign\"\n                          onChange={handleArticleChange}\n                          value={article.price}\n                        />\n                      </Form.Group>\n                    </Form>\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewCustomer}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewCustomer}\n                      content=\"Anlegen\"\n                      primary\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </Accordion.Content>\n              <Accordion.Title>\n                <Icon name=\"dropdown\" />\n                Allgemein\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <Form>\n                  <Form.Field\n                    label=\"Rechnungsdatum\"\n                    name=\"invoiceDate\"\n                    selected={new Date(invoice.invoiceDate)}\n                    onChange={v => updateInvoiceDate(v, \"invoiceDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Bestelldatum\"\n                    name=\"orderDate\"\n                    selected={new Date(invoice.orderDate)}\n                    onChange={v => updateInvoiceDate(v, \"orderDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Versanddatum\"\n                    name=\"shippingDate\"\n                    selected={new Date(invoice.shippingDate)}\n                    onChange={v => updateInvoiceDate(v, \"shippingDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Rechnungsnummer\"\n                    name=\"invoiceNumber\"\n                    value={invoice.invoiceNumber}\n                    onChange={(e, { name, value }) =>\n                      setInvoice({ ...invoice, [name]: value })\n                    }\n                    control={Input}\n                  />\n                </Form>\n              </Accordion.Content>\n            </Accordion>\n          </Card.Content>\n        </Card>\n        <Button\n          onClick={() => setInvoice()}\n          content=\"Abbrechen\"\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n        ></Button>\n        {invoice.customer && (\n          <Button\n            onClick={saveInvoice}\n            content=\"Speichern\"\n            primary\n            icon=\"check\"\n            labelPosition=\"right\"\n          ></Button>\n        )}\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function(val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label }) => (\n  <div className=\"tc mb4 mt2\">\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div id=\"myMm\" style={{ height: \"1mm\" }} />\n\n    <div\n      className=\"pa2 ba bw1 b--black bg-yellow black-90 br2 dib pointer dim shadow-1\"\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input).then(canvas => {\n          const imgData = canvas.toDataURL(\"image/png\", 4);\n          let pdf;\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            pdf = new jsPDF();\n          }\n\n          pdf.addImage(imgData, \"PNG\", 0, 0);\n          pdf.save(`${id}.pdf`);\n        });\n\n        ////////////////////////////////////////////////////////\n        // System to manually handle page breaks\n        // Wasn't able to get it working !\n        // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\n        // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\n        ////////////////////////////////////////////////////////\n        // range(0, numPages).forEach((page) => {\n        //   console.log(`Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page*a4HeightPx}`);\n        //   html2canvas(input, {height: a4HeightPx, y: page*a4HeightPx})\n        //     .then((canvas) => {\n        //       const imgData = canvas.toDataURL('image/png');\n        //       console.log(imgData)\n        //       if (page > 0) {\n        //         pdf.addPage();\n        //       }\n        //       pdf.addImage(imgData, 'PNG', 0, 0);\n        //     });\n        //   ;\n        // });\n\n        // setTimeout(() => {\n        //   pdf.save(`${id}.pdf`);\n        // }, 5000);\n      }}\n    >\n      {label}\n    </div>\n  </div>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center pa4\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"./Page\";\nimport \"./SinglePage.css\";\nimport { formatDate } from \"../services\";\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    customer: { name, ust, discount, address, city, postCode },\n    articles = [],\n    send_default_price = 5.0\n  }\n}) => {\n  const articles_net_price = articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      const totalPriceWithDiscount = totalPrice - totalPrice * (discount / 100);\n      const net = totalPriceWithDiscount / (1 + ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div className=\"invoice-header\">\n        <div className=\"invoice-header-customer-address\"></div>\n        <div className=\"invoice-header-company-address\"></div>\n      </div>\n      <div className=\"invoice-body\">\n        <div className=\"invoice-body-top\">\n          <div className=\"invoice-subject\">\n            <h2>Rechnung</h2>\n            <p>Wir erlauben uns in Rechnung zu stellen:</p>\n            <div className=\"invoice-body-subject-key-values\">\n              <div className=\"invoice-body-subject-keys\">\n                <div className=\"invoice-body-order-date\">\n                  <p>\n                    <b>Bestelldatum:</b>\n                  </p>\n                </div>\n                <div className=\"invoice-body-send-date\">\n                  <p>\n                    <b>Versand am:</b>\n                  </p>\n                </div>\n                <div className=\"invoice-body-send-to\">\n                  <p>\n                    <b>Versand an:</b>\n                  </p>\n                </div>\n              </div>\n              <div className=\"invoice-body-subject-values\">\n                <div className=\"invoice-body-order-date\">\n                  <p>\n                    <b>{formatDate(orderDate)}</b>\n                  </p>\n                </div>\n                <div className=\"invoice-body-send-date\">\n                  <p>\n                    <b>{formatDate(shippingDate)}</b>\n                  </p>\n                </div>\n                <div className=\"invoice-body-send-to\">\n                  <p>\n                    <b>\n                      {name} • {}\n                    </b>\n                  </p>\n                  <p>\n                    <b>\n                      {address} • {postCode} {city}\n                    </b>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"invoice-body-invoice-date\">\n              <p>\n                Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n              </p>\n            </div>\n            <div className=\"invoice-body-invoice-nr\">\n              <p>\n                Rechnungsnummer: <b>{invoiceNumber}</b>\n              </p>\n            </div>\n            <div className=\"invoice-body-invoice-hint\">\n              <p>(Bitte bei Zahlungen angeben)</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"invoice-body-article-wrapper\">\n          {articles.map(({ amount, price, name, isbn }) => {\n            const multiple = parseInt(amount) > 1;\n            const totalPrice = price * amount;\n            const totalPriceWithDiscount =\n              totalPrice - totalPrice * (discount / 100);\n            const net = totalPriceWithDiscount / (1 + ust / 100);\n            return (\n              <div className=\"invoice-body-article\">\n                <div className=\"invoice-body-article-left\">\n                  <div className=\"invoice-body-article-description\">\n                    <div>\n                      <b>\n                        {amount} Exemplar\n                        {multiple && \"e\"}\n                      </b>\n                    </div>\n                    <div className=\"invoice-body-article-title\">\n                      <b>„{name}“</b>\n                    </div>\n                    <div className=\"invoice-body-article-title\">{isbn}</div>\n                  </div>\n                  <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                    multiple ? \"je\" : \"\"\n                  } ${price} €${\n                    multiple ? ` = ${totalPrice.toFixed(2)}€` : \"\"\n                  }${\n                    discount > 0\n                      ? `, abzüglich ${discount} % Rabatt = ${totalPriceWithDiscount.toFixed(\n                          2\n                        )} €`\n                      : \"\"\n                  } (beinhaltet ${ust} % MwST = ${(\n                    totalPriceWithDiscount - net\n                  ).toFixed(2)})`}</div>\n                </div>\n                <div className=\"invoice-body-article-price\">\n                  <b>{net.toFixed(2)}€</b>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"invoice-body-price-calculation\">\n          <div>\n            <p>Netto</p>\n            <p>\n              <b>{articles_net_price.toFixed(2)}€</b>\n            </p>\n          </div>\n          <div>\n            <p>Versandpauschale</p>\n            <p>\n              <b>{send_default_price.toFixed(2)}€</b>\n            </p>\n          </div>\n          <div>\n            <p>{`+${ust}% Mehrwertsteuer`}</p>\n            <p>\n              <b>\n                {(\n                  ((articles_net_price + send_default_price) *\n                    parseFloat(ust)) /\n                  100\n                ).toFixed(2)}\n                €\n              </b>\n            </p>\n          </div>\n        </div>\n        <div className=\"invoice-body-price\">\n          <p>Rechnungsbetrag</p>\n          <p>\n            <b>\n              {(\n                (articles_net_price + send_default_price) *\n                (1 + parseFloat(ust) / 100)\n              ).toFixed(2)}\n              €\n            </b>\n          </p>\n        </div>\n        <div>\n          <p>\n            Zahlen Sie bitte den Rechnungsbetrag bis zum 16. März 2020 unter\n            Angabe der Rechnungsnummer auf unten stehendes Konto. <br />\n            <br /> Die gelieferte Ware bleibt bis zur vollständigen Bezahlung\n            Eigentum des Test Verlages. <br />\n            Vielen Dank für Ihre Bestellung.\n            <br />\n            <br /> Mit herzlichen Grüßen, Test Verlag.\n            <br /> Werneuchen, den 24. Februar 2020\n          </p>\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\n\nimport InvoiceForm from \"./InvoiceForm\";\nimport PrintButton from \"./PrintButton\";\nimport SinglePage from \"./SinglePage\";\n\nexport default ({ invoice, setInvoice }) => {\n  return (\n    <div className=\"invoice-page\">\n      <div className=\"invoice-form-wrapper\">\n        <InvoiceForm invoice={invoice} setInvoice={setInvoice} />\n      </div>\n      {invoice.customer && (\n        <div className=\"invoice-page-wrapper\">\n          <PrintButton id={\"singlePage\"} label={\"Rechnung Drucken\"} />\n          <SinglePage id={\"singlePage\"} invoice={invoice} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport { invoice as invoiceSceleton, invoice } from \"../sceletons\";\nimport { formatDate } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n  const [invoiceSelected, setInvoiceSelected] = useState();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice invoice={invoiceSelected} setInvoice={setInvoiceSelected} />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({ ...invoiceSceleton, id: invoices.length })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map(i => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map(a => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{i.totalPrice}€</Table.Cell>\n              <Table.Cell>\n                <Button icon onClick={() => setInvoiceSelected(i)}>\n                  <Icon name=\"eye\"></Icon>\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport { Tab, Container } from \"semantic-ui-react\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nconst invoiceSceleton = {\n  articles: []\n};\n\nconst App = () => {\n  const [invoice, setInvoice] = useState(invoiceSceleton);\n\n  console.log(invoice);\n  return (\n    <div className=\"invoice-app-container\">\n      <Container>\n        <Tab\n          panes={[\n            {\n              menuItem: \"Rechnungen\",\n              render: () => (\n                <div className=\"\">\n                  <Invoices />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Kunden\",\n              render: () => (\n                <div className=\"\">\n                  <Customers />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Artikel\",\n              render: () => (\n                <div className=\"\">\n                  <Articles />\n                </div>\n              )\n            }\n          ]}\n        />\n      </Container>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}