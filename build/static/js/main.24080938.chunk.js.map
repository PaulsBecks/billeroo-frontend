{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","hooks/useCompany.js","hooks/useInvoices.js","hooks/useArticles.js","hooks/useAuthors.js","components/Customers.js","components/Article.js","components/Articles/Articles.js","services/formatDate.js","services/calculateTotalPrice.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePage.js","components/Invoice.js","components/Invoices.js","components/DropZone.js","components/Company.js","components/Author/Author.js","components/Authors/Authors.js","migration/authors.js","migration/useMigrationWrapper.js","hooks/useMigration.js","migration/index.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","authors","addition","address","postCode","city","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","firstAddress","phone","secondAddress","firstEmail","secondEmail","taxNumber","taxOffice","bank","iban","bic","logo","contact","books","useCompany","companySceleton","useInvoices","useArticles","useAuthors","customers","Table","celled","Header","Row","HeaderCell","Body","map","c","Cell","Article","article","setArticle","articlePrice","setArticlePrice","authorSearch","setAuthorSearch","filteredAuthors","useMemo","filter","a","includes","handleArticleChange","e","parseFloat","isNaN","toFixed","Form","Group","width","Field","id","control","Input","label","placeholder","onChange","type","icon","onBlur","target","Label","onClick","author","setArticles","invoiceArticle","setInvoiceArticle","invoices","filteredInvoices","reduce","list","i","customer","className","Button","articleSceleton","length","primary","Modal","onClose","open","Content","Actions","content","negative","labelPosition","_articles","invoice","pos","undefined","deleteArticle","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","setInvoice","setCustomers","customerSceleton","setCustomer","newCustomer","setNewCustomer","customerSearch","setCustomerSearch","articleAmount","setArticleAmount","articleSearch","setArticleSearch","newArticle","setNewArticle","setInvoices","setPorto","updateInvoice","toggleNewArticle","filteredCustomers","toLowerCase","filteredArticles","handleCustomerChange","updateArticleAmount","amountChange","addArticleToInvoice","toggleNewCustomer","updateInvoiceDate","Container","Card","fluid","Accordion","Title","index","Icon","active","class","fc","Detail","selected","v","DatePicker","dateFormat","TextArea","updateInvoiceArticles","mul","totalPrice","total","x","calculateTotalPrice","_invoices","PrintButton","fileName","style","height","px","mm","start","end","input","document","getElementById","inputHeightMm","offsetHeight","Math","floor","a4HeightPx","numPages","a4HeightMm","range","Array","join","split","val","comp","inputHeightPx","html2canvas","scale","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","Page","children","singleMode","SinglePage","company","articles_net_price","src","multiple","parseInt","totalPriceWithDiscount","net","ustNr","invoiceSelected","setInvoiceSelected","Invoice","invoiceSceleton","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","getRootProps","getInputProps","isDragAccept","isDragReject","event","stopPropagation","Company","setCompany","updateCompany","updateFirstAddress","updateSecondAddress","Segment","files","file","reader","FileReader","onload","result","readAsDataURL","postcode","Author","setAuthor","percent","authorPrice","setAuthorPrice","handleAuthorChange","Authors","setAuthors","authorSceleton","_authors","deleteAuthor","useAddAuthorsToArticles","migrate","version","currentVersion","setCurrentVersion","useMigrationWrapper","useMigration","render","Tab","panes","menuItem","Invoices","Customers"],"mappings":"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","file":"static/js/main.24080938.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  name: \"\",\n  empty: true,\n  price: \"\",\n  isbn: \"\",\n  amount: 1,\n  authors: [],\n};\n","export default {\n  name: \"\",\n  addition: \"\",\n  address: \"\",\n  postCode: \"\",\n  city: \"\",\n  discount: 0,\n  ust: 7\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5.00\",\n  finalText: \"\",\n  articles: []\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  firstAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\",\n  },\n  secondAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\",\n  },\n  firstEmail: \"\",\n  secondEmail: \"\",\n  taxNumber: \"\",\n  taxOffice: \"\",\n  bank: \"\",\n  iban: \"\",\n  bic: \"\",\n  logo: \"\",\n  finalText: \"\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  books: [],\n};\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\n\nexport default function useCompany() {\n  return useLocalStorage(\"company\", companySceleton);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useInvoices() {\n  return useLocalStorage(\"invoices\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useArticles() {\n  return useLocalStorage(\"articles\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useAuthors() {\n  return useLocalStorage(\"authors\", []);\n}\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [customers, setCustomer] = useLocalStorage(\"customers\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Adresse</Table.HeaderCell>\n          <Table.HeaderCell>PLZ</Table.HeaderCell>\n          <Table.HeaderCell>Stadt</Table.HeaderCell>\n          <Table.HeaderCell>Rabatt</Table.HeaderCell>\n          <Table.HeaderCell>MwST</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {customers.map(c => (\n          <Table.Row>\n            <Table.Cell>{c.name}</Table.Cell>\n            <Table.Cell>{c.address}</Table.Cell>\n            <Table.Cell>{c.postCode}</Table.Cell>\n            <Table.Cell>{c.city}</Table.Cell>\n            <Table.Cell>{c.discount}</Table.Cell>\n            <Table.Cell>{c.ust}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\n\nimport { Form, Input, Button, Label } from \"semantic-ui-react\";\nimport { useAuthors } from \"../hooks\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n  const [authorSearch, setAuthorSearch] = useState(\"\");\n  const [authors] = useAuthors();\n\n  const filteredAuthors = useMemo(() => {\n    return authors.filter((a) => a && a.name.includes(authorSearch));\n  }, [authors, authorSearch]);\n\n  function addAuthorToArticle(author) {\n    setArticle({ ...article, authors: [...article.authors, author] });\n  }\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setArticlePrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={(e) => {\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n      <div>\n        <label>\n          <b>Autoren</b>\n        </label>\n        <div>\n          {article.authors.map((a) => (\n            <Label>{a.name}</Label>\n          ))}\n        </div>\n        <Input\n          name=\"author\"\n          placeholder=\"Suche...\"\n          value={authorSearch}\n          onChange={(e, { value }) => setAuthorSearch(value)}\n        />\n        {authorSearch != \"\" && (\n          <div>\n            {filteredAuthors.map((a) => (\n              <Label onClick={() => addAuthorToArticle(a)}>{a.name}</Label>\n            ))}\n          </div>\n        )}\n      </div>\n    </Form>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport { useArticles, useInvoices } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Icon, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\n\nexport default () => {\n  const [articles, setArticles] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const [invoices] = useInvoices();\n  const filteredInvoices = useMemo(() => {\n    if (!invoiceArticle) {\n      return null;\n    }\n    return invoices.reduce((list, i) => {\n      for (let a in i.articles) {\n        const article = i.articles[a];\n        if (article.id == invoiceArticle.id) {\n          return [\n            ...list,\n            {\n              customer: i.customer,\n              invoiceNumber: i.invoiceNumber,\n              article,\n            },\n          ];\n        }\n      }\n      return list;\n    }, []);\n  });\n  const updateArticle = () => {\n    let _articles = [...articles];\n    _articles[article.id] = article;\n    setArticles(_articles);\n    setArticle();\n  };\n\n  const deleteArticle = (pos) => {\n    const _articles = [...articles];\n    _articles[pos] = undefined;\n    setArticles(_articles);\n  };\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articles.length })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Edit Article</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateArticle}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {filteredInvoices.map((invoice) => (\n                  <Table.Row>\n                    <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                    <Table.Cell>{invoice.customer.name}</Table.Cell>\n                    <Table.Cell>{invoice.article.amount}</Table.Cell>\n                    <Table.Cell>{invoice.article.price}</Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Menge</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>{a.amount}</Table.Cell>\n                  <Table.Cell>{a.price}</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button onClick={() => setArticle(a)} icon=\"edit\"></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                    ></Button>\n                    <Button\n                      onClick={() => deleteArticle(i)}\n                      icon=\"delete\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","export default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return `${day < 10 ? \"0\" + day : day}.${\n    month < 10 ? \"0\" + month : month\n  }.${date.getFullYear()}`;\n}\n","export default invoice =>\n  invoice.articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React, { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"../../hooks\";\nimport {\n  Accordion,\n  Container,\n  Form,\n  Icon,\n  Input,\n  Card,\n  Modal,\n  Label,\n  Button,\n  TextArea,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport { calculateTotalPrice } from \"../../services\";\nimport Article from \"../Article\";\n\nexport default ({ invoice, setInvoice }) => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState({\n    ...customerSceleton,\n    id: customers.length,\n  });\n  const [newCustomer, setNewCustomer] = useState(undefined);\n  const [customerSearch, setCustomerSearch] = useState(\"\");\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articles.length,\n  });\n  const [articleAmount, setArticleAmount] = useState(1);\n  const [articleSearch, setArticleSearch] = useState(\"\");\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n  const [porto, setPorto] = useState(invoice.porto);\n\n  const updateInvoice = (e, { name, value }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setPorto(value);\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const filteredCustomers = useMemo(\n    () =>\n      customers.filter((c) =>\n        c.name.toLowerCase().includes(customerSearch.toLowerCase())\n      ),\n    [customers, customerSearch]\n  );\n\n  const filteredArticles = useMemo(\n    () =>\n      articles.filter((a) =>\n        a.name.toLowerCase().includes(articleSearch.toLowerCase())\n      ),\n    [articles, articleSearch]\n  );\n\n  const addNewCustomer = () => {\n    setCustomers([...customers, customer]);\n    setInvoice({ ...invoice, customer });\n    toggleNewCustomer();\n  };\n\n  const removeCustomer = () => {\n    setInvoice({ ...invoice, customer: undefined });\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const updateArticleAmount = (id, amountChange) => {\n    let _articles = [...articles];\n    const article = _articles[id];\n    _articles[id] = {\n      ...article,\n      amount: parseFloat(article.amount) + amountChange,\n    };\n    setArticles(_articles);\n  };\n\n  const addArticleToInvoice = (article) => {\n    setInvoice({\n      ...invoice,\n      articles: [...invoice.articles, { ...article, amount: articleAmount }],\n    });\n    setArticle();\n    setArticleAmount(1);\n  };\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    addArticleToInvoice(article);\n    toggleNewArticle();\n  };\n\n  const removeArticle = (pos) => {\n    setInvoice({\n      ...invoice,\n      articles: invoice.articles.filter((a, i) => i !== pos),\n    });\n  };\n\n  const toggleNewCustomer = () => {\n    setNewCustomer(!newCustomer);\n  };\n\n  const saveInvoice = () => {\n    const updateInvoiceArticles = (invoice, mul = 1) => {\n      if (invoice) {\n        for (let a in invoice.articles) {\n          updateArticleAmount(\n            invoice.articles[a].id,\n            mul * invoice.articles[a].amount\n          );\n        }\n      }\n    };\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    updateInvoiceArticles(invoices[invoice.id]);\n    _invoices[invoice.id] = invoice;\n    updateInvoiceArticles(_invoices[invoice.id], -1);\n    setInvoices(_invoices);\n    setInvoice();\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  return (\n    <div className=\"invoice-form\">\n      <Container>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Rechnungsdaten</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Accordion>\n              <Accordion.Title index={0}>\n                <Icon name=\"dropdown\" />\n                Kunde\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                {invoice.customer ? (\n                  <div class=\"invoice-form-label-container\">\n                    <Label>\n                      {invoice.customer.name}\n                      <Icon name=\"delete\" onClick={removeCustomer} />\n                    </Label>\n                  </div>\n                ) : (\n                  <div>\n                    <Input\n                      placeholder=\"Suche...\"\n                      onChange={(e, { value }) => setCustomerSearch(value)}\n                      value={customerSearch}\n                    />\n                    {customerSearch == \"\" ? (\n                      <Button onClick={toggleNewCustomer}>Neuer Kunde</Button>\n                    ) : (\n                      <div className=\"invoice-form-label-container\">\n                        {filteredCustomers.map((fc) => (\n                          <Label\n                            onClick={() =>\n                              setInvoice({ ...invoice, customer: fc })\n                            }\n                          >\n                            {fc.name}\n                          </Label>\n                        ))}\n                        {filteredCustomers.length == 0 && (\n                          <p>No Customers found.</p>\n                        )}\n                      </div>\n                    )}\n\n                    <Modal open={newCustomer} onClose={toggleNewCustomer}>\n                      <Modal.Header>Neuer Kunde</Modal.Header>\n                      <Modal.Content>\n                        <Form>\n                          <Form.Group width=\"equal\">\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Name\"\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              onChange={handleCustomerChange}\n                              value={customer.name}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Zusatz\"\n                              placeholder=\"Zusatz\"\n                              name=\"addition\"\n                              onChange={handleCustomerChange}\n                              value={customer.addition}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Anschrift\"\n                              placeholder=\"Musterschstraße 3\"\n                              name=\"address\"\n                              onChange={handleCustomerChange}\n                              value={customer.address}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"PLZ\"\n                              placeholder=\"PLZ\"\n                              name=\"postCode\"\n                              onChange={handleCustomerChange}\n                              value={customer.postCode}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Stadt\"\n                              placeholder=\"Stadt\"\n                              name=\"city\"\n                              onChange={handleCustomerChange}\n                              value={customer.city}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"MwST\"\n                              placeholder=\"7\"\n                              name=\"ust\"\n                              icon=\"percent\"\n                              onChange={handleCustomerChange}\n                              value={customer.ust}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Rabat\"\n                              placeholder=\"0\"\n                              icon=\"percent\"\n                              name=\"discount\"\n                              onChange={handleCustomerChange}\n                              value={customer.discount}\n                            />\n                          </Form.Group>\n                        </Form>\n                      </Modal.Content>\n                      <Modal.Actions>\n                        <Button\n                          onClick={toggleNewCustomer}\n                          content=\"Abbrechen\"\n                          negative\n                          icon=\"close\"\n                          labelPosition=\"right\"\n                        ></Button>\n                        <Button\n                          onClick={addNewCustomer}\n                          content=\"Anlegen\"\n                          primary\n                          icon=\"check\"\n                          labelPosition=\"right\"\n                        ></Button>\n                      </Modal.Actions>\n                    </Modal>\n                  </div>\n                )}\n              </Accordion.Content>\n              <Accordion.Title index={1}>\n                <Icon name=\"dropdown\" />\n                Artikel\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <div className=\"invoice-form-label-container\">\n                  {invoice.articles.map((a, i) => {\n                    return (\n                      <Label>\n                        {a.name}\n                        <Label.Detail>{a.articleAmount}</Label.Detail>\n                        <Icon\n                          name=\"delete\"\n                          onClick={() => removeArticle(i)}\n                        ></Icon>\n                      </Label>\n                    );\n                  })}\n                </div>\n                <div>\n                  <Input\n                    name=\"amount\"\n                    type=\"number\"\n                    label=\"Menge\"\n                    value={articleAmount}\n                    onChange={(e, { value }) => setArticleAmount(value)}\n                  />\n\n                  <Input\n                    name=\"article\"\n                    placeholder=\"Suche...\"\n                    value={articleSearch}\n                    onChange={(e, { value }) => setArticleSearch(value)}\n                  />\n                  {articleSearch == \"\" ? (\n                    <Button onClick={toggleNewArticle}>Neuer Artikel</Button>\n                  ) : (\n                    <div className=\"invoice-form-label-container\">\n                      {filteredArticles.map((a) => (\n                        <Label onClick={() => addArticleToInvoice(a)}>\n                          {a.name}\n                        </Label>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle}>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      primary\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </Accordion.Content>\n              <Accordion.Title>\n                <Icon name=\"dropdown\" />\n                Allgemein\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <Form>\n                  <Form.Field\n                    label=\"Rechnungsdatum\"\n                    name=\"invoiceDate\"\n                    selected={new Date(invoice.invoiceDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Bestelldatum\"\n                    name=\"orderDate\"\n                    selected={new Date(invoice.orderDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Versanddatum\"\n                    name=\"shippingDate\"\n                    selected={new Date(invoice.shippingDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Porto\"\n                    name=\"shippingDate\"\n                    value={porto}\n                    name=\"porto\"\n                    onChange={(e, { value }) => setPorto(value)}\n                    control={Input}\n                    onBlur={(e) =>\n                      updateInvoice(e, {\n                        name: e.target.name,\n                        value: e.target.value,\n                      })\n                    }\n                    icon=\"euro\"\n                  />\n                  <Form.Field\n                    label=\"Rechnungsnummer\"\n                    name=\"invoiceNumber\"\n                    value={invoice.invoiceNumber}\n                    onChange={updateInvoice}\n                    control={Input}\n                  />\n                  <Form.TextArea\n                    label=\"Freitext\"\n                    value={invoice.finalText}\n                    onChange={updateInvoice}\n                    name=\"finalText\"\n                  />\n                </Form>\n              </Accordion.Content>\n            </Accordion>\n          </Card.Content>\n        </Card>\n        <Button\n          onClick={() => setInvoice()}\n          content=\"Abbrechen\"\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n        ></Button>\n        {invoice.customer && (\n          <Button\n            onClick={saveInvoice}\n            content=\"Speichern\"\n            primary\n            icon=\"check\"\n            labelPosition=\"right\"\n          ></Button>\n        )}\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function(val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <div className=\"tc mb4 mt2\">\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div id=\"myMm\" style={{ height: \"1mm\" }} />\n\n    <div\n      className=\"pa2 ba bw1 b--black bg-yellow black-90 br2 dib pointer dim shadow-1\"\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input, { scale: 1 }).then(canvas => {\n          const imgData = canvas.toDataURL(\"image/png\", 1);\n          let pdf;\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            pdf = new jsPDF();\n          }\n\n          pdf.addImage(imgData, \"PNG\", 0, 0);\n          pdf.save(`${fileName}.pdf`);\n        });\n\n        ////////////////////////////////////////////////////////\n        // System to manually handle page breaks\n        // Wasn't able to get it working !\n        // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\n        // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\n        ////////////////////////////////////////////////////////\n        // range(0, numPages).forEach((page) => {\n        //   console.log(`Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page*a4HeightPx}`);\n        //   html2canvas(input, {height: a4HeightPx, y: page*a4HeightPx})\n        //     .then((canvas) => {\n        //       const imgData = canvas.toDataURL('image/png');\n        //       console.log(imgData)\n        //       if (page > 0) {\n        //         pdf.addPage();\n        //       }\n        //       pdf.addImage(imgData, 'PNG', 0, 0);\n        //     });\n        //   ;\n        // });\n\n        // setTimeout(() => {\n        //   pdf.save(`${id}.pdf`);\n        // }, 5000);\n      }}\n    >\n      {label}\n    </div>\n  </div>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center pa4\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate } from \"../../services\";\nimport { useCompany } from \"../../hooks\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    finalText,\n    customer: { name, ust, discount, address, city, postCode, addition },\n    articles = [],\n  },\n}) => {\n  const [company] = useCompany();\n  const articles_net_price = articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      const totalPriceWithDiscount = totalPrice - totalPrice * (discount / 100);\n      const net = totalPriceWithDiscount / (1 + ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <img className=\"invoice-header-company-logo\" src={company.logo} />\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <div className=\"invoice-header-customer-company\">\n                {company.name} • {company.firstAddress.address} •{\" \"}\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </div>\n              <div className=\"invoice-header-customer-info\">\n                <p>\n                  <b>{name}</b>\n                </p>\n                <p className=\"invoice-header-customer-info-name\">\n                  <b>{addition}</b>\n                </p>\n                <p>\n                  <b>{address}</b>\n                </p>\n                <p>\n                  <b>\n                    {postCode} {city}\n                  </b>\n                </p>\n              </div>\n            </div>\n            <div className=\"invoice-header-company-info\">\n              <p>{company.name}</p>\n              <p>{company.executive}</p>\n              <br />\n              <p>{company.firstAddress.name}</p>\n              <p>{company.firstAddress.address}</p>\n              <p>\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </p>\n              <p>Telefon {company.firstAddress.phone}</p>\n              <br />\n              <p>{company.firstEmail}</p>\n              <p>{company.secondEmail}</p>\n              <br />\n              <p>Steuernummer {company.taxNumber}</p>\n              <p>{company.taxOffice}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <h4>Rechnung</h4>\n              <p>Wir erlauben uns in Rechnung zu stellen:</p>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versand am:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>\n                        {name} • {addition}\n                      </b>\n                    </p>\n                    <p>\n                      <b>\n                        {address} • {postCode} {city}\n                      </b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-top-right\">\n              <div className=\"invoice-body-invoice-date\">\n                <p>\n                  Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-nr\">\n                <p>\n                  Rechnungsnummer: <b>{invoiceNumber}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlungen angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-article-wrapper\">\n            {articles.map(({ amount, price, name, isbn }) => {\n              const multiple = parseInt(amount) > 1;\n              const totalPrice = price * amount;\n              const totalPriceWithDiscount =\n                totalPrice - totalPrice * (discount / 100);\n              const net = totalPriceWithDiscount / (1 + ust / 100);\n              return (\n                <div className=\"invoice-body-article\">\n                  <div className=\"invoice-body-article-left\">\n                    <div className=\"invoice-body-article-description\">\n                      <div>\n                        <b>\n                          {amount} Exemplar\n                          {multiple && \"e\"}\n                        </b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">\n                        <b>„{name}“</b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">{isbn}</div>\n                    </div>\n                    <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                      multiple ? \"je\" : \"\"\n                    } ${price} €${\n                      multiple ? ` = ${totalPrice.toFixed(2)}€` : \"\"\n                    }${\n                      discount > 0\n                        ? `, abzüglich ${discount} % Rabatt = ${totalPriceWithDiscount.toFixed(\n                            2\n                          )} €`\n                        : \"\"\n                    } (beinhaltet ${ust} % MwST = ${(\n                      totalPriceWithDiscount - net\n                    ).toFixed(2)})`}</div>\n                  </div>\n                  <div className=\"invoice-body-article-price\">\n                    <b>{articles.length > 1 && `${net.toFixed(2)} €`}</b>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"invoice-body-price-calculation\">\n            <div>\n              <p>Netto</p>\n              <p>\n                <b>{articles_net_price.toFixed(2)} €</b>\n              </p>\n            </div>\n            <div>\n              <p>Versandkosten</p>\n              <p>\n                <b>{porto} €</b>\n              </p>\n            </div>\n            <div>\n              <p>{`+${ust}% Mehrwertsteuer`}</p>\n              <p>\n                <b>\n                  {(\n                    ((articles_net_price + parseFloat(porto)) *\n                      parseFloat(ust)) /\n                    100\n                  ).toFixed(2)}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n          </div>\n          <div className=\"invoice-body-price\">\n            <p>Rechnungsbetrag</p>\n            <p>\n              <b>\n                {(\n                  (articles_net_price + parseFloat(porto)) *\n                  (1 + parseFloat(ust) / 100)\n                ).toFixed(2)}{\" \"}\n                €\n              </b>\n            </p>\n          </div>\n          <div>\n            <p className=\"invoice-body-final-text\">{finalText}</p>\n          </div>\n        </div>\n        <div className=\"invoice-footer\">\n          <div className=\"invoice-footer-executive\">\n            <b>Geschäftsführung</b> {company.executive}\n          </div>\n          <div className=\"invoice-footer-bank-account\">\n            <b>Bankverbindung</b> {company.bank} • IBAN {company.iban} • BIC{\" \"}\n            {company.bic}\n          </div>\n          <div className=\"invoice-footer-tax\">\n            <b>Steuernummer</b> {company.taxNumber} | <b>USt-IdNr.</b>{\" \"}\n            {company.ustNr}\n          </div>\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\n\nimport InvoiceForm from \"./InvoiceForm\";\nimport PrintButton from \"./PrintButton\";\nimport SinglePage from \"./SinglePage/SinglePage\";\n\nexport default ({ invoice, setInvoice }) => {\n  return (\n    <div className=\"invoice-page\">\n      <div className=\"invoice-form-wrapper\">\n        <InvoiceForm invoice={invoice} setInvoice={setInvoice} />\n      </div>\n      {invoice.customer && (\n        <div className=\"invoice-page-wrapper\">\n          <PrintButton\n            id={\"singlePage\"}\n            label={\"Rechnung Drucken\"}\n            fileName={invoice.invoiceNumber}\n          />\n          <SinglePage id={\"singlePage\"} invoice={invoice} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocalStorage, useCompany, useInvoices } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport { invoice as invoiceSceleton, invoice } from \"../sceletons\";\nimport { formatDate } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice invoice={invoiceSelected} setInvoice={setInvoiceSelected} />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoices.length,\n            finalText: company.finalText,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map((i) => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map((a) => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{i.totalPrice.toFixed(2)}€</Table.Cell>\n              <Table.Cell>\n                <Button icon onClick={() => setInvoiceSelected(i)}>\n                  <Icon name=\"eye\"></Icon>\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\"\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ accept: \"image/*\" });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }),\n    [isDragActive, isDragReject]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: event => event.stopPropagation()\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React from \"react\";\nimport { Form, Input, Segment, Button, TextArea } from \"semantic-ui-react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { company as companySceleton } from \"../sceletons\";\nimport DropZone from \"./DropZone\";\n\nexport default function Company() {\n  const [company, setCompany] = useLocalStorage(\"company\", companySceleton);\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const updateFirstAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      firstAddress: { ...company.firstAddress, [name]: value },\n    });\n  };\n\n  const updateSecondAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      secondAddress: { ...company.secondAddress, [name]: value },\n    });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n        <Segment>\n          <h4>Logo</h4>\n          {company.logo != \"\" ? (\n            <div>\n              <img src={company.logo} />\n              <Button\n                negative\n                onClick={() => setCompany({ ...company, logo: \"\" })}\n              >\n                Löschen\n              </Button>\n            </div>\n          ) : (\n            <DropZone onDrop={onDropHandler} />\n          )}\n        </Segment>\n        <Form.Field\n          label=\"Firmenführung\"\n          control={Input}\n          name=\"executive\"\n          onChange={updateCompany}\n          value={company.executive}\n        />\n        <Segment>\n          <h4>Erste Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Segment>\n          <h4>Zweite Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Form.Field\n          label=\"1. Email\"\n          control={Input}\n          name=\"firstEmail\"\n          onChange={updateCompany}\n          value={company.firstEmail}\n        />\n        <Form.Field\n          label=\"2. Email\"\n          control={Input}\n          name=\"secondEmail\"\n          onChange={updateCompany}\n          value={company.secondEmail}\n        />\n        <Form.Field\n          label=\"Steuernummer\"\n          control={Input}\n          name=\"taxNumber\"\n          onChange={updateCompany}\n          value={company.taxNumber}\n        />\n        <Form.Field\n          label=\"Finanzamt\"\n          control={Input}\n          name=\"taxOffice\"\n          onChange={updateCompany}\n          value={company.taxOffice}\n        />\n        <Form.Field\n          label=\"Ust-Nr.\"\n          control={Input}\n          name=\"ustNr\"\n          onChange={updateCompany}\n          value={company.ustNr}\n        />\n        <Segment>\n          <h4>Bankinformationen</h4>\n          <Form.Field\n            label=\"Bank\"\n            control={Input}\n            name=\"bank\"\n            onChange={updateCompany}\n            value={company.bank}\n          />\n          <Form.Field\n            label=\"IBAN\"\n            control={Input}\n            name=\"iban\"\n            onChange={updateCompany}\n            value={company.iban}\n          />\n          <Form.Field\n            label=\"BIC\"\n            control={Input}\n            name=\"bic\"\n            onChange={updateCompany}\n            value={company.bic}\n          />\n        </Segment>\n        <Form.Field>\n          <Form.TextArea\n            label=\"Standard Freitext\"\n            value={company.finalText}\n            onChange={updateCompany}\n            name=\"finalText\"\n          />\n        </Form.Field>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\n\nexport default function Author({ author, setAuthor }) {\n  const [authorPrice, setAuthorPrice] = useState(author.percent);\n\n  const handleAuthorChange = (e, { name, value }) => {\n    if (name === \"percent\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setAuthorPrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setAuthorPrice(value);\n    }\n    setAuthor({ ...author, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleAuthorChange}\n          value={author.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Kontakt\"\n          placeholder=\"Tel, Email, ...\"\n          onChange={handleAuthorChange}\n          name=\"contact\"\n          value={author.contact}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Prozent\"\n          placeholder=\"Prozent\"\n          name=\"percent\"\n          icon=\"percent\"\n          onChange={(e, { value }) => setAuthorPrice(value)}\n          onBlur={(e) => {\n            handleAuthorChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={authorPrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\n\nexport default function Authors() {\n  const [authors, setAuthors] = useAuthors();\n  const [author, setAuthor] = useState();\n\n  function deleteAuthor(id) {\n    const _authors = [...authors];\n    _authors[id] = undefined;\n    setAuthors(_authors);\n  }\n\n  function updateAuthors(id) {\n    const _authors = [...authors];\n    _authors[author.id] = author;\n    setAuthors(_authors);\n    setAuthor();\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ authorSceleton, id: authors.length })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateAuthors}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button onClick={() => setAuthor(a)} icon=\"eye\"></Button>\n                    <Button\n                      onClick={() => deleteAuthor(i)}\n                      icon=\"delete\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import useMigrationWrapper from \"./useMigrationWrapper\";\nimport { useArticles } from \"../hooks\";\n\nconst VERSION = 2;\n\nfunction useAddAuthorsToArticles() {\n  const [articles, setArticles] = useArticles();\n\n  setArticles(articles.map((a) => ({ ...a, authors: [] })));\n}\n\nexport default () => useMigrationWrapper(useAddAuthorsToArticles, VERSION);\n","import { useLocalStorage } from \"../hooks\";\n\nexport default function useMigrationWrapper(migrate, version) {\n  const [currentVersion, setCurrentVersion] = useLocalStorage(\"version\", \"1\");\n  if (parseInt(currentVersion) < version) {\n    migrate();\n  }\n  setCurrentVersion(version);\n}\n","import migration from \"../migration\";\nimport { useMemo } from \"react\";\n\nexport default function useMigration() {\n  useMemo(() => {\n    migration();\n  });\n}\n","import authors from \"./authors\";\n\nexport default function migration() {\n  authors();\n}\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport { Tab, Container } from \"semantic-ui-react\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Company from \"./components/Company\";\nimport Authors from \"./components/Authors/Authors\";\nimport useMigration from \"./hooks/useMigration\";\nconst invoiceSceleton = {\n  articles: [],\n};\n\nconst App = () => {\n  useMigration();\n\n  return (\n    <div className=\"invoice-app-container\">\n      <Container>\n        <Tab\n          panes={[\n            {\n              menuItem: \"Rechnungen\",\n              render: () => (\n                <div className=\"\">\n                  <Invoices />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Kunden\",\n              render: () => (\n                <div className=\"\">\n                  <Customers />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Artikel\",\n              render: () => (\n                <div className=\"\">\n                  <Articles />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Autoren\",\n              render: () => (\n                <div className=\"\">\n                  <Authors />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Firma\",\n              render: () => (\n                <div className=\"\">\n                  <Company />\n                </div>\n              ),\n            },\n          ]}\n        />\n      </Container>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}