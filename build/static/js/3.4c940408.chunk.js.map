{"version":3,"sources":["components/Articles/Articles.js","components/Articles/index.js"],"names":["useArticles","articles","removeArticle","updateArticle","articlesLength","useState","article","setArticle","invoiceArticle","setInvoiceArticle","invoiceStats","useArticleStats","useGA","className","Button","onClick","articleSceleton","id","primary","Modal","onClose","open","Header","Content","Article","Actions","content","negative","icon","labelPosition","positive","Table","Row","HeaderCell","Body","invoices","map","invoice","Cell","invoiceNumber","customerName","payed","formatPrice","parsePrice","price","paymentDate","formatDate","active","totalSold","celled","a","i","name","isbn","parseInt","amount","totalSend","authors","secondary"],"mappings":"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","file":"static/js/3.4c940408.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useArticles, useArticleStats, useGA } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\nimport { formatDate, parsePrice, formatPrice } from \"../../services\";\n\nexport default () => {\n  const [\n    articles,\n    ,\n    removeArticle,\n    updateArticle,\n    articlesLength,\n  ] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const invoiceStats = useArticleStats();\n  useGA();\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articlesLength })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Artikel</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={() => {\n                updateArticle(article);\n                setArticle();\n              }}\n              content=\"Speichern\"\n              positive\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                  <Table.HeaderCell>Zahlungsdatum</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {invoiceStats[invoiceArticle.id] &&\n                  invoiceStats[invoiceArticle.id].invoices.map((invoice) => (\n                    <Table.Row>\n                      <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                      <Table.Cell>{invoice.customerName}</Table.Cell>\n                      <Table.Cell>{invoice.payed}</Table.Cell>\n                      <Table.Cell>\n                        {formatPrice(\n                          invoice.payed * parsePrice(invoiceArticle.price)\n                        )}{\" \"}\n                        €\n                      </Table.Cell>\n                      <Table.Cell>\n                        {invoice.paymentDate\n                          ? formatDate(invoice.paymentDate)\n                          : \"Ausstehend\"}\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                {invoiceStats[invoiceArticle.id] && (\n                  <Table.Row active>\n                    <Table.Cell />\n                    <Table.Cell />\n                    <Table.Cell>\n                      {invoiceStats[invoiceArticle.id].totalSold}\n                    </Table.Cell>\n                    <Table.Cell>\n                      {formatPrice(\n                        invoiceStats[invoiceArticle.id].totalSold *\n                          parsePrice(invoiceArticle.price)\n                      )}{\" \"}\n                      €\n                    </Table.Cell>\n                    <Table.Cell />\n                  </Table.Row>\n                )}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Lagerbestand</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>\n                    {invoiceStats[a.id]\n                      ? parseInt(a.amount + \"\") - invoiceStats[a.id].totalSend\n                      : a.amount}\n                  </Table.Cell>\n                  <Table.Cell>{a.price} €</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setArticle(a)}\n                      primary\n                      icon=\"edit\"\n                    ></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                      secondary\n                    ></Button>\n                    <Button\n                      onClick={() => removeArticle(i)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","export { default } from \"./Articles\";\n"],"sourceRoot":""}