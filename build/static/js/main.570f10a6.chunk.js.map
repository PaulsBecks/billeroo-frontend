{"version":3,"sources":["hooks/useLocalStorage.js","components/Customers.js","components/Articles.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","services/formatDate.js","components/Article.js","components/InvoiceForm.js","services/calculateTotalPrice.js","components/PrintButton.js","components/Page.js","components/SinglePage.js","components/Invoice.js","components/Invoices.js","components/DropZone.js","components/Company.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","customers","Table","celled","Header","Row","HeaderCell","Body","map","c","Cell","name","address","postCode","city","discount","ust","articles","a","isbn","amount","price","empty","addition","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","executive","firstAddress","phone","secondAddress","firstEmail","secondEmail","taxNumber","taxOffice","bank","iban","bic","logo","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","Article","article","setArticle","articlePrice","setArticlePrice","handleArticleChange","e","parseFloat","isNaN","toFixed","Form","Group","width","Field","id","control","Input","label","placeholder","onChange","type","icon","onBlur","target","invoice","setInvoice","setCustomers","customerSceleton","customer","setCustomer","undefined","newCustomer","setNewCustomer","customerSearch","setCustomerSearch","setArticles","articleSceleton","articleAmount","setArticleAmount","articleSearch","setArticleSearch","newArticle","setNewArticle","invoices","setInvoices","setPorto","updateInvoice","toggleNewArticle","filteredCustomers","useMemo","filter","toLowerCase","includes","filteredArticles","handleCustomerChange","addArticleToInvoice","toggleNewCustomer","updateInvoiceDate","className","Container","Card","fluid","Content","Accordion","Title","index","Icon","active","class","Label","onClick","Button","fc","length","Modal","open","onClose","Actions","content","negative","labelPosition","primary","i","Detail","pos","selected","v","DatePicker","dateFormat","TextArea","totalPrice","reduce","total","x","calculateTotalPrice","_invoices","PrintButton","fileName","style","height","px","mm","start","end","input","document","getElementById","inputHeightMm","offsetHeight","Math","floor","a4HeightPx","numPages","a4HeightMm","range","Array","join","split","val","comp","inputHeightPx","html2canvas","scale","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","Page","children","singleMode","SinglePage","companySceleton","company","articles_net_price","src","multiple","parseInt","totalPriceWithDiscount","net","ustNr","invoiceSelected","setInvoiceSelected","Invoice","invoiceSceleton","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","getRootProps","getInputProps","isDragAccept","isDragReject","event","stopPropagation","Company","setCompany","updateCompany","updateFirstAddress","updateSecondAddress","Segment","postcode","files","file","reader","FileReader","onload","result","readAsDataURL","render","Tab","panes","menuItem","Invoices","Customers","Articles"],"mappings":"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","file":"static/js/main.570f10a6.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [customers, setCustomer] = useLocalStorage(\"customers\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Adresse</Table.HeaderCell>\n          <Table.HeaderCell>PLZ</Table.HeaderCell>\n          <Table.HeaderCell>Stadt</Table.HeaderCell>\n          <Table.HeaderCell>Rabatt</Table.HeaderCell>\n          <Table.HeaderCell>MwST</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {customers.map(c => (\n          <Table.Row>\n            <Table.Cell>{c.name}</Table.Cell>\n            <Table.Cell>{c.address}</Table.Cell>\n            <Table.Cell>{c.postCode}</Table.Cell>\n            <Table.Cell>{c.city}</Table.Cell>\n            <Table.Cell>{c.discount}</Table.Cell>\n            <Table.Cell>{c.ust}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>ISBN</Table.HeaderCell>\n          <Table.HeaderCell>Menge</Table.HeaderCell>\n          <Table.HeaderCell>Preis</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {articles.map(a => (\n          <Table.Row>\n            <Table.Cell>{a.name}</Table.Cell>\n            <Table.Cell>{a.isbn}</Table.Cell>\n            <Table.Cell>{a.amount}</Table.Cell>\n            <Table.Cell>{a.price}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","export default { name: \"\", empty: true, price: \"\", isbn: \"\", amount: 1 };\n","export default {\n  name: \"\",\n  addition: \"\",\n  address: \"\",\n  postCode: \"\",\n  city: \"\",\n  discount: 0,\n  ust: 7\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5.00\",\n  finalText: \"\",\n  articles: []\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  firstAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\"\n  },\n  secondAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\"\n  },\n  firstEmail: \"\",\n  secondEmail: \"\",\n  taxNumber: \"\",\n  taxOffice: \"\",\n  bank: \"\",\n  iban: \"\",\n  bic: \"\",\n  logo: \"\"\n};\n","export default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return `${day < 10 ? \"0\" + day : day}.${\n    month < 10 ? \"0\" + month : month\n  }.${date.getFullYear()}`;\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n\n  const handleArticleChange = (e, { name, value }) => {\n    console.log(name, value);\n    if (name === \"price\") {\n      value = parseFloat(value);\n      console.log(value);\n      if (isNaN(value)) {\n        setArticlePrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={e => {\n            console.log(\"blur\");\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport {\n  Accordion,\n  Container,\n  Form,\n  Icon,\n  Input,\n  Card,\n  Modal,\n  Label,\n  Button,\n  TextArea\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton\n} from \"../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport { calculateTotalPrice } from \"../services\";\nimport Article from \"./Article\";\n\nexport default ({ invoice, setInvoice }) => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState(customerSceleton);\n  const [newCustomer, setNewCustomer] = useState(undefined);\n  const [customerSearch, setCustomerSearch] = useState(\"\");\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [article, setArticle] = useState(articleSceleton);\n  const [articleAmount, setArticleAmount] = useState(1);\n  const [articleSearch, setArticleSearch] = useState(\"\");\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n  const [porto, setPorto] = useState(invoice.porto);\n\n  const updateInvoice = (e, { name, value }) => {\n    console.log(e, name, value);\n    if (name === \"porto\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setPorto(value);\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const filteredCustomers = useMemo(\n    () =>\n      customers.filter(c =>\n        c.name.toLowerCase().includes(customerSearch.toLowerCase())\n      ),\n    [customers, customerSearch]\n  );\n\n  const filteredArticles = useMemo(\n    () =>\n      articles.filter(a =>\n        a.name.toLowerCase().includes(articleSearch.toLowerCase())\n      ),\n    [articles, articleSearch]\n  );\n\n  const addNewCustomer = () => {\n    setCustomers([...customers, customer]);\n    setInvoice({ ...invoice, customer });\n    toggleNewCustomer();\n  };\n\n  const removeCustomer = () => {\n    setInvoice({ ...invoice, customer: undefined });\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const addArticleToInvoice = article => {\n    setInvoice({\n      ...invoice,\n      articles: [...invoice.articles, { ...article, amount: articleAmount }]\n    });\n    setArticleAmount(1);\n  };\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    addArticleToInvoice(article);\n    toggleNewArticle();\n  };\n\n  const removeArticle = pos => {\n    setInvoice({\n      ...invoice,\n      articles: invoice.articles.filter((a, i) => i !== pos)\n    });\n  };\n\n  const toggleNewCustomer = () => {\n    setNewCustomer(!newCustomer);\n  };\n\n  const saveInvoice = () => {\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    _invoices[invoice.id] = invoice;\n    setInvoices(_invoices);\n    setInvoice();\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  return (\n    <div className=\"invoice-form\">\n      <Container>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Rechnungsdaten</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Accordion>\n              <Accordion.Title index={0}>\n                <Icon name=\"dropdown\" />\n                Kunde\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                {invoice.customer ? (\n                  <div class=\"invoice-form-label-container\">\n                    <Label>\n                      {invoice.customer.name}\n                      <Icon name=\"delete\" onClick={removeCustomer} />\n                    </Label>\n                  </div>\n                ) : (\n                  <div>\n                    <Input\n                      placeholder=\"Suche...\"\n                      onChange={(e, { value }) => setCustomerSearch(value)}\n                      value={customerSearch}\n                    />\n                    {customerSearch == \"\" ? (\n                      <Button onClick={toggleNewCustomer}>Neuer Kunde</Button>\n                    ) : (\n                      <div className=\"invoice-form-label-container\">\n                        {filteredCustomers.map(fc => (\n                          <Label\n                            onClick={() =>\n                              setInvoice({ ...invoice, customer: fc })\n                            }\n                          >\n                            {fc.name}\n                          </Label>\n                        ))}\n                        {filteredCustomers.length == 0 && (\n                          <p>No Customers found.</p>\n                        )}\n                      </div>\n                    )}\n\n                    <Modal open={newCustomer} onClose={toggleNewCustomer}>\n                      <Modal.Header>Neuer Kunde</Modal.Header>\n                      <Modal.Content>\n                        <Form>\n                          <Form.Group width=\"equal\">\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Name\"\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              onChange={handleCustomerChange}\n                              value={customer.name}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Zusatz\"\n                              placeholder=\"Zusatz\"\n                              name=\"addition\"\n                              onChange={handleCustomerChange}\n                              value={customer.addition}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Anschrift\"\n                              placeholder=\"Musterschstraße 3\"\n                              name=\"address\"\n                              onChange={handleCustomerChange}\n                              value={customer.address}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"PLZ\"\n                              placeholder=\"PLZ\"\n                              name=\"postCode\"\n                              onChange={handleCustomerChange}\n                              value={customer.postCode}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Stadt\"\n                              placeholder=\"Stadt\"\n                              name=\"city\"\n                              onChange={handleCustomerChange}\n                              value={customer.city}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"MwST\"\n                              placeholder=\"7\"\n                              name=\"ust\"\n                              icon=\"percent\"\n                              onChange={handleCustomerChange}\n                              value={customer.ust}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Rabat\"\n                              placeholder=\"0\"\n                              icon=\"percent\"\n                              name=\"discount\"\n                              onChange={handleCustomerChange}\n                              value={customer.discount}\n                            />\n                          </Form.Group>\n                        </Form>\n                      </Modal.Content>\n                      <Modal.Actions>\n                        <Button\n                          onClick={toggleNewCustomer}\n                          content=\"Abbrechen\"\n                          negative\n                          icon=\"close\"\n                          labelPosition=\"right\"\n                        ></Button>\n                        <Button\n                          onClick={addNewCustomer}\n                          content=\"Anlegen\"\n                          primary\n                          icon=\"check\"\n                          labelPosition=\"right\"\n                        ></Button>\n                      </Modal.Actions>\n                    </Modal>\n                  </div>\n                )}\n              </Accordion.Content>\n              <Accordion.Title index={1}>\n                <Icon name=\"dropdown\" />\n                Artikel\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <div className=\"invoice-form-label-container\">\n                  {invoice.articles.map((a, i) => {\n                    return (\n                      <Label>\n                        {a.name}\n                        <Label.Detail>{a.articleAmount}</Label.Detail>\n                        <Icon\n                          name=\"delete\"\n                          onClick={() => removeArticle(i)}\n                        ></Icon>\n                      </Label>\n                    );\n                  })}\n                </div>\n                <div>\n                  <Input\n                    name=\"amount\"\n                    type=\"number\"\n                    label=\"Menge\"\n                    value={articleAmount}\n                    onChange={(e, { value }) => setArticleAmount(value)}\n                  />\n\n                  <Input\n                    name=\"article\"\n                    placeholder=\"Suche...\"\n                    value={articleSearch}\n                    onChange={(e, { value }) => setArticleSearch(value)}\n                  />\n                  {articleSearch == \"\" ? (\n                    <Button onClick={toggleNewArticle}>Neuer Artikel</Button>\n                  ) : (\n                    <div className=\"invoice-form-label-container\">\n                      {filteredArticles.map(a => (\n                        <Label onClick={() => addArticleToInvoice(a)}>\n                          {a.name}\n                        </Label>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle}>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      primary\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </Accordion.Content>\n              <Accordion.Title>\n                <Icon name=\"dropdown\" />\n                Allgemein\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <Form>\n                  <Form.Field\n                    label=\"Rechnungsdatum\"\n                    name=\"invoiceDate\"\n                    selected={new Date(invoice.invoiceDate)}\n                    onChange={v => updateInvoiceDate(v, \"invoiceDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Bestelldatum\"\n                    name=\"orderDate\"\n                    selected={new Date(invoice.orderDate)}\n                    onChange={v => updateInvoiceDate(v, \"orderDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Versanddatum\"\n                    name=\"shippingDate\"\n                    selected={new Date(invoice.shippingDate)}\n                    onChange={v => updateInvoiceDate(v, \"shippingDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Porto\"\n                    name=\"shippingDate\"\n                    value={porto}\n                    name=\"porto\"\n                    onChange={(e, { value }) => setPorto(value)}\n                    control={Input}\n                    onBlur={e =>\n                      updateInvoice(e, {\n                        name: e.target.name,\n                        value: e.target.value\n                      })\n                    }\n                    icon=\"euro\"\n                  />\n                  <Form.Field\n                    label=\"Rechnungsnummer\"\n                    name=\"invoiceNumber\"\n                    value={invoice.invoiceNumber}\n                    onChange={updateInvoice}\n                    control={Input}\n                  />\n                  <TextArea\n                    value={invoice.finalText}\n                    onChange={updateInvoice}\n                    name=\"finalText\"\n                  />\n                </Form>\n              </Accordion.Content>\n            </Accordion>\n          </Card.Content>\n        </Card>\n        <Button\n          onClick={() => setInvoice()}\n          content=\"Abbrechen\"\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n        ></Button>\n        {invoice.customer && (\n          <Button\n            onClick={saveInvoice}\n            content=\"Speichern\"\n            primary\n            icon=\"check\"\n            labelPosition=\"right\"\n          ></Button>\n        )}\n      </Container>\n    </div>\n  );\n};\n","export default invoice =>\n  invoice.articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function(val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <div className=\"tc mb4 mt2\">\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div id=\"myMm\" style={{ height: \"1mm\" }} />\n\n    <div\n      className=\"pa2 ba bw1 b--black bg-yellow black-90 br2 dib pointer dim shadow-1\"\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input, { scale: 1 }).then(canvas => {\n          const imgData = canvas.toDataURL(\"image/png\", 1);\n          let pdf;\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            pdf = new jsPDF();\n          }\n\n          pdf.addImage(imgData, \"PNG\", 0, 0);\n          pdf.save(`${fileName}.pdf`);\n        });\n\n        ////////////////////////////////////////////////////////\n        // System to manually handle page breaks\n        // Wasn't able to get it working !\n        // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\n        // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\n        ////////////////////////////////////////////////////////\n        // range(0, numPages).forEach((page) => {\n        //   console.log(`Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page*a4HeightPx}`);\n        //   html2canvas(input, {height: a4HeightPx, y: page*a4HeightPx})\n        //     .then((canvas) => {\n        //       const imgData = canvas.toDataURL('image/png');\n        //       console.log(imgData)\n        //       if (page > 0) {\n        //         pdf.addPage();\n        //       }\n        //       pdf.addImage(imgData, 'PNG', 0, 0);\n        //     });\n        //   ;\n        // });\n\n        // setTimeout(() => {\n        //   pdf.save(`${id}.pdf`);\n        // }, 5000);\n      }}\n    >\n      {label}\n    </div>\n  </div>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center pa4\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"./Page\";\nimport \"./SinglePage.css\";\nimport { formatDate } from \"../services\";\nimport { useLocalStorage } from \"../hooks\";\nimport { company as companySceleton, invoice } from \"../sceletons\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    finalText,\n    customer: { name, ust, discount, address, city, postCode, addition },\n    articles = []\n  }\n}) => {\n  const [company] = useLocalStorage(\"company\", companySceleton);\n  const articles_net_price = articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      const totalPriceWithDiscount = totalPrice - totalPrice * (discount / 100);\n      const net = totalPriceWithDiscount / (1 + ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <img className=\"invoice-header-company-logo\" src={company.logo} />\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <div className=\"invoice-header-customer-company\">\n                {company.name} • {company.firstAddress.address} •{\" \"}\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </div>\n              <div className=\"invoice-header-customer-info\">\n                <p>\n                  <b>{name}</b>\n                </p>\n                <p className=\"invoice-header-customer-info-name\">\n                  <b>{addition}</b>\n                </p>\n                <p>\n                  <b>{address}</b>\n                </p>\n                <p>\n                  <b>\n                    {postCode} {city}\n                  </b>\n                </p>\n              </div>\n            </div>\n            <div className=\"invoice-header-company-info\">\n              <p>{company.name}</p>\n              <p>{company.executive}</p>\n              <br />\n              <p>{company.firstAddress.name}</p>\n              <p>{company.firstAddress.address}</p>\n              <p>\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </p>\n              <p>Telefon {company.firstAddress.phone}</p>\n              <br />\n              <p>{company.firstEmail}</p>\n              <p>{company.secondEmail}</p>\n              <br />\n              <p>Steuernummer {company.taxNumber}</p>\n              <p>{company.taxOffice}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <h4>Rechnung</h4>\n              <p>Wir erlauben uns in Rechnung zu stellen:</p>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versand am:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>\n                        {name} • {addition}\n                      </b>\n                    </p>\n                    <p>\n                      <b>\n                        {address} • {postCode} {city}\n                      </b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"invoice-body-invoice-date\">\n                <p>\n                  Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-nr\">\n                <p>\n                  Rechnungsnummer: <b>{invoiceNumber}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlungen angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-article-wrapper\">\n            {articles.map(({ amount, price, name, isbn }) => {\n              const multiple = parseInt(amount) > 1;\n              const totalPrice = price * amount;\n              const totalPriceWithDiscount =\n                totalPrice - totalPrice * (discount / 100);\n              const net = totalPriceWithDiscount / (1 + ust / 100);\n              return (\n                <div className=\"invoice-body-article\">\n                  <div className=\"invoice-body-article-left\">\n                    <div className=\"invoice-body-article-description\">\n                      <div>\n                        <b>\n                          {amount} Exemplar\n                          {multiple && \"e\"}\n                        </b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">\n                        <b>„{name}“</b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">{isbn}</div>\n                    </div>\n                    <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                      multiple ? \"je\" : \"\"\n                    } ${price} €${\n                      multiple ? ` = ${totalPrice.toFixed(2)}€` : \"\"\n                    }${\n                      discount > 0\n                        ? `, abzüglich ${discount} % Rabatt = ${totalPriceWithDiscount.toFixed(\n                            2\n                          )} €`\n                        : \"\"\n                    } (beinhaltet ${ust} % MwST = ${(\n                      totalPriceWithDiscount - net\n                    ).toFixed(2)})`}</div>\n                  </div>\n                  <div className=\"invoice-body-article-price\">\n                    <b>{net.toFixed(2)}€</b>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"invoice-body-price-calculation\">\n            <div>\n              <p>Netto</p>\n              <p>\n                <b>{articles_net_price.toFixed(2)}€</b>\n              </p>\n            </div>\n            <div>\n              <p>Versandpauschale</p>\n              <p>\n                <b>{porto}€</b>\n              </p>\n            </div>\n            <div>\n              <p>{`+${ust}% Mehrwertsteuer`}</p>\n              <p>\n                <b>\n                  {(\n                    ((articles_net_price + parseFloat(porto)) *\n                      parseFloat(ust)) /\n                    100\n                  ).toFixed(2)}\n                  €\n                </b>\n              </p>\n            </div>\n          </div>\n          <div className=\"invoice-body-price\">\n            <p>Rechnungsbetrag</p>\n            <p>\n              <b>\n                {(\n                  (articles_net_price + parseFloat(porto)) *\n                  (1 + parseFloat(ust) / 100)\n                ).toFixed(2)}\n                €\n              </b>\n            </p>\n          </div>\n          <div>\n            <p className=\"invoice-body-final-text\">{finalText}</p>\n          </div>\n        </div>\n        <div className=\"invoice-footer\">\n          <div className=\"invoice-footer-executive\">\n            <b>Geschäftsführung</b> {company.executive}\n          </div>\n          <div className=\"invoice-footer-bank-account\">\n            <b>Bankverbindung</b> {company.bank} • IBAN {company.iban} • BIC{\" \"}\n            {company.bic}\n          </div>\n          <div className=\"invoice-footer-tax\">\n            <b>Steuernummer</b> {company.taxNumber} | <b>USt-IdNr.</b>{\" \"}\n            {company.ustNr}\n          </div>\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\n\nimport InvoiceForm from \"./InvoiceForm\";\nimport PrintButton from \"./PrintButton\";\nimport SinglePage from \"./SinglePage\";\n\nexport default ({ invoice, setInvoice }) => {\n  return (\n    <div className=\"invoice-page\">\n      <div className=\"invoice-form-wrapper\">\n        <InvoiceForm invoice={invoice} setInvoice={setInvoice} />\n      </div>\n      {invoice.customer && (\n        <div className=\"invoice-page-wrapper\">\n          <PrintButton\n            id={\"singlePage\"}\n            label={\"Rechnung Drucken\"}\n            fileName={invoice.invoiceNumber}\n          />\n          <SinglePage id={\"singlePage\"} invoice={invoice} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport { invoice as invoiceSceleton, invoice } from \"../sceletons\";\nimport { formatDate } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n  const [invoiceSelected, setInvoiceSelected] = useState();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice invoice={invoiceSelected} setInvoice={setInvoiceSelected} />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({ ...invoiceSceleton, id: invoices.length })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map(i => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map(a => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{i.totalPrice.toFixed(2)}€</Table.Cell>\n              <Table.Cell>\n                <Button icon onClick={() => setInvoiceSelected(i)}>\n                  <Icon name=\"eye\"></Icon>\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\"\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ accept: \"image/*\" });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }),\n    [isDragActive, isDragReject]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: event => event.stopPropagation()\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { company as companySceleton } from \"../sceletons\";\nimport DropZone from \"./DropZone\";\n\nexport default function Company() {\n  const [company, setCompany] = useLocalStorage(\"company\", companySceleton);\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const updateFirstAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      firstAddress: { ...company.firstAddress, [name]: value }\n    });\n  };\n\n  const updateSecondAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      secondAddress: { ...company.secondAddress, [name]: value }\n    });\n  };\n\n  const onDropHandler = files => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n        <Form.Field\n          label=\"Firmenführung\"\n          control={Input}\n          name=\"executive\"\n          onChange={updateCompany}\n          value={company.executive}\n        />\n        <Segment>\n          <h4>Erste Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Segment>\n          <h4>Zweite Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Form.Field\n          label=\"1. Email\"\n          control={Input}\n          name=\"firstEmail\"\n          onChange={updateCompany}\n          value={company.firstEmail}\n        />\n        <Form.Field\n          label=\"2. Email\"\n          control={Input}\n          name=\"secondEmail\"\n          onChange={updateCompany}\n          value={company.secondEmail}\n        />\n        <Form.Field\n          label=\"Steuernummer\"\n          control={Input}\n          name=\"taxNumber\"\n          onChange={updateCompany}\n          value={company.taxNumber}\n        />\n        <Form.Field\n          label=\"Finanzamt\"\n          control={Input}\n          name=\"taxOffice\"\n          onChange={updateCompany}\n          value={company.taxOffice}\n        />\n        <Form.Field\n          label=\"Ust-Nr.\"\n          control={Input}\n          name=\"ustNr\"\n          onChange={updateCompany}\n          value={company.ustNr}\n        />\n        <Segment>\n          <h4>Bankinformationen</h4>\n          <Form.Field\n            label=\"Bank\"\n            control={Input}\n            name=\"bank\"\n            onChange={updateCompany}\n            value={company.bank}\n          />\n          <Form.Field\n            label=\"IBAN\"\n            control={Input}\n            name=\"iban\"\n            onChange={updateCompany}\n            value={company.iban}\n          />\n          <Form.Field\n            label=\"BIC\"\n            control={Input}\n            name=\"bic\"\n            onChange={updateCompany}\n            value={company.bic}\n          />\n        </Segment>\n      </Form>\n      <Segment>\n        <h4>Logo</h4>\n        {company.logo != \"\" ? (\n          <div>\n            <img src={company.logo} />\n            <Button\n              negative\n              onClick={() => setCompany({ ...company, logo: \"\" })}\n            >\n              Löschen\n            </Button>\n          </div>\n        ) : (\n          <DropZone onDrop={onDropHandler} />\n        )}\n      </Segment>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport { Tab, Container } from \"semantic-ui-react\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Company from \"./components/Company\";\nconst invoiceSceleton = {\n  articles: []\n};\n\nconst App = () => {\n  const [invoice, setInvoice] = useState(invoiceSceleton);\n\n  console.log(invoice);\n  return (\n    <div className=\"invoice-app-container\">\n      <Container>\n        <Tab\n          panes={[\n            {\n              menuItem: \"Rechnungen\",\n              render: () => (\n                <div className=\"\">\n                  <Invoices />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Kunden\",\n              render: () => (\n                <div className=\"\">\n                  <Customers />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Artikel\",\n              render: () => (\n                <div className=\"\">\n                  <Articles />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Firma\",\n              render: () => (\n                <div className=\"\">\n                  <Company />\n                </div>\n              )\n            }\n          ]}\n        />\n      </Container>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}