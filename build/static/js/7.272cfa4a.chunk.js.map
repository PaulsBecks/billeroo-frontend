{"version":3,"sources":["components/Authors/Authors.js"],"names":["Authors","useAuthors","authors","deleteAuthor","updateAuthor","authorsLength","useState","author","setAuthor","useGA","onClick","authorSceleton","id","primary","onClose","open","Header","Content","Actions","content","negative","icon","labelPosition","celled","Row","HeaderCell","Body","map","a","i","key","Cell","name","contact","percent"],"mappings":"2PAMe,SAASA,IAAW,IAAD,EAC+BC,cAD/B,mBACzBC,EADyB,KACdC,EADc,KACAC,EADA,KACcC,EADd,OAEJC,qBAFI,mBAEzBC,EAFyB,KAEjBC,EAFiB,KAKhC,OAFAC,cAGE,6BACE,kBAAC,IAAD,CACEC,QAAS,kBAAMF,EAAU,eAAKG,IAAN,CAAsBC,GAAIP,MAClDQ,SAAO,GAFT,eAMCN,GACC,kBAAC,IAAD,CAAOO,QAAS,kBAAMN,KAAaO,MAAM,GACvC,kBAAC,IAAMC,OAAP,eACA,kBAAC,IAAMC,QAAP,KACE,kBAAC,IAAD,CAAQV,OAAQA,EAAQC,UAAWA,KAErC,kBAAC,IAAMU,QAAP,KACE,kBAAC,IAAD,CACER,QAAS,kBAAMF,KACfW,QAAQ,YACRC,UAAQ,EACRC,KAAK,QACLC,cAAc,UAEhB,kBAAC,IAAD,CACEZ,QAAS,WACPN,EAAaG,GACbC,KAEFW,QAAQ,YACRN,SAAO,EACPQ,KAAK,QACLC,cAAc,YAKtB,kBAAC,IAAD,CAAOC,QAAM,GACX,kBAAC,IAAMP,OAAP,KACE,kBAAC,IAAMQ,IAAP,KACE,kBAAC,IAAMC,WAAP,WACA,kBAAC,IAAMA,WAAP,aACA,kBAAC,IAAMA,WAAP,gBACA,kBAAC,IAAMA,WAAP,gBACA,kBAAC,IAAMA,WAAP,QAIJ,kBAAC,IAAMC,KAAP,KACGxB,EAAQyB,KACP,SAACC,EAAGC,GAAJ,OACED,GACE,kBAAC,IAAMJ,IAAP,CAAWM,IAAKF,EAAEhB,IAChB,kBAAC,IAAMmB,KAAP,KAAaH,EAAEhB,IACf,kBAAC,IAAMmB,KAAP,KAAaH,EAAEI,MACf,kBAAC,IAAMD,KAAP,KAAaH,EAAEK,SACf,kBAAC,IAAMF,KAAP,KAAaH,EAAEM,QAAf,MACA,kBAAC,IAAMH,KAAP,KACE,kBAAC,IAAD,CACErB,QAAS,kBAAMF,EAAUoB,IACzBP,KAAK,OACLR,SAAO,IAET,kBAAC,IAAD,CACEH,QAAS,kBAAMP,EAAayB,EAAEhB,KAC9BQ,UAAQ,EACRC,KAAK","file":"static/js/7.272cfa4a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors, useGA } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\n\nexport default function Authors() {\n  const [authors, , deleteAuthor, updateAuthor, authorsLength] = useAuthors();\n  const [author, setAuthor] = useState();\n  useGA();\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ ...authorSceleton, id: authorsLength })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={() => {\n                updateAuthor(author);\n                setAuthor();\n              }}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row key={a.id}>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setAuthor(a)}\n                      icon=\"edit\"\n                      primary\n                    ></Button>\n                    <Button\n                      onClick={() => deleteAuthor(a.id)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n"],"sourceRoot":""}