{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","hooks/useCompany.js","hooks/useInvoices.js","hooks/useArticles.js","hooks/useAuthors.js","hooks/useCustomers.js","components/Customers.js","components/Article.js","services/formatDate.js","services/calculateTotalPrice.js","components/Articles/Articles.js","components/CustomerForm/CustomerForm.js","components/DropZone.js","components/CompanyForm.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePage.js","components/Invoice.js","components/Invoices.js","components/Company.js","components/Author/Author.js","components/Authors/Authors.js","migration/authors.js","migration/useMigrationWrapper.js","hooks/useMigration.js","migration/index.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","authors","invoiceAddress","shippingAddress","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","logo","aboveClientInvoiceAddress","footerText","invoiceText","subjectAndBelow","contactInformation","contact","books","useCompany","companySceleton","useInvoices","useArticles","useAuthors","useCustomers","customers","Table","celled","Header","Row","HeaderCell","Body","map","c","Cell","address","postCode","city","Article","article","setArticle","articlePrice","setArticlePrice","authorSearch","setAuthorSearch","filteredAuthors","useMemo","filter","a","includes","handleArticleChange","e","parseFloat","isNaN","toFixed","Form","Group","width","Field","id","control","Input","label","placeholder","onChange","type","icon","onBlur","target","Label","onClick","author","formatDate","dateString","date","day","getDate","month","getMonth","dangerouslySetInnerHTML","__html","getFullYear","setArticles","invoiceArticle","setInvoiceArticle","invoices","filteredInvoices","reduce","list","i","className","Button","articleSceleton","length","primary","Modal","onClose","open","Content","Actions","content","negative","labelPosition","_articles","invoice","customer","paymentDate","pos","undefined","deleteArticle","CustomerForm","setCustomer","RichTextEditor","createValueFromString","setInvoiceAddress","setShippingAddress","useEffect","handleCustomerChange","updateRichtext","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","isDragAccept","isDragReject","style","getRootProps","getInputProps","event","stopPropagation","CompanyForm","company","setCompany","setFooterText","setSubjectAndBelow","setInvoiceText","setContactInformation","setAboveClientInvoiceAddress","updateRichText","updateCompany","Segment","src","alt","files","file","reader","FileReader","onload","result","readAsDataURL","setInvoice","setInvoices","setCustomers","selectedArticles","setSelectedArticles","toBePayed","setToBePayed","toBeSend","setToBeSend","newArticle","setNewArticle","setPorto","articleId","updateInvoice","checked","toggleNewArticle","updateArticleAmount","amountChange","addNewArticle","updateInvoiceDate","customerOptions","text","concat","articlesOptions","customerSceleton","Container","Card","fluid","Tab","panes","menuItem","render","Dropdown","search","selection","options","widths","selected","v","DatePicker","dateFormat","Checkbox","payed","toggle","updateInvoiceArticles","mul","totalPrice","total","x","calculateTotalPrice","_invoices","_customers","PrintButton","fileName","height","px","mm","start","end","input","document","getElementById","inputHeightMm","offsetHeight","Math","floor","a4HeightPx","numPages","a4HeightMm","range","Array","join","split","val","comp","inputHeightPx","html2canvas","scale","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","Page","children","singleMode","SinglePage","articles_net_price","companyColor","multiple","parseInt","totalPriceWithDiscount","net","invoiceSelected","setInvoiceSelected","Invoice","invoiceSceleton","Icon","Company","Author","setAuthor","percent","authorPrice","setAuthorPrice","handleAuthorChange","Authors","setAuthors","authorSceleton","_authors","deleteAuthor","useAddAuthorsToArticles","migrate","version","currentVersion","setCurrentVersion","useMigrationWrapper","useMigration","Invoices","Customers"],"mappings":"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","file":"static/js/main.3f21bb35.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  name: \"\",\n  empty: true,\n  price: \"\",\n  isbn: \"\",\n  amount: 1,\n  authors: [],\n};\n","export default {\n  name: \"Max Mustermann\",\n  invoiceAddress:\n    \"<p>brandenburg-buch.de<br/>\\\n  Klemm & Klemm Kultur & Buch GbR<br/>\\\n  Speyerstraße 2<br/>\\\n  15366 Neuenhagen</p>\",\n  shippingAddress:\n    \"<p>brandenburg-buch.de • Klemm & Klemm Kultur & Buch GbR<br/>\\\n  Speyerstraße 2 • 15366 Neuenhagen</p>\",\n  discount: 0,\n  ust: 7,\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5.00\",\n  finalText: \"\",\n  articles: []\n};\n","import RichTextEditor from \"react-rte\";\n\nexport default {\n  name: \"\",\n  executive: \"\",\n  logo: \"\",\n  aboveClientInvoiceAddress:\n    \"<p>Verlag GbR • Musterstraße 12 • 10405 Musterstadt</p>\",\n  footerText:\n    \"<p><b>Geschäftsführung</b> Max Mustermann<br/>\\\n  <b>Bankverbindung</b> Postbank • IBAN DE 00 0000 0000 0000 00 • BIC ABCDEFGHIJKL<br/>\\\n  <b>Steuernummer</b> 000/000/00000 | <b>USt-IdNr.</b> DE000000000</p>\",\n  invoiceText:\n    \"<p>Zahlen Sie bitte den Rechnungsbetrag bis zum <Datum> unter Angabe der Rechnungsnummer\\\nauf unten stehendes Konto.<br/>\\\nDie gelieferte Ware bleibt bis zur vollständigen Bezahlung Eigentum des Verlages.<br/>\\\nVielen Dank für Ihre Bestellung.</p>\\\n<p>Mit herzlichen Grüßen.<br/>\\\nMusterstadt, den <Datum></p>\",\n  subjectAndBelow:\n    \"<h3>Rechnung</h3>\\\n  <p><br></p>\\\n  <p>wir erlauben uns, in Rechnung zu stellen:</p>\",\n  contactInformation:\n    \"<p>Buch- und Zeitschriftenverlag GbR<br>\\\n  Max Mustermann</p>\\\n  <p>Hauptsitz<br>\\\n  Musterstraße 12<br>\\\n  10405 Musterstadt<br>\\\n  Telefon 000 / 00 00 00</p>\\\n  <p>Büro Musterstadt<br>\\\n  Musterstraße 19<br>\\\n  10409 Musterstadt<br>\\\n  Telefon 030 / 00 00 00 00</p>\\\n  <p>info@muster-email.de<br>\\\n  www.musterdomain.de</p>\\\n  <p>Steuernummer 000/000/00000<br>\\\n  Finanzamt Musterstadt</p>\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  books: [],\n};\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\n\nexport default function useCompany() {\n  return useLocalStorage(\"company\", companySceleton);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useInvoices() {\n  return useLocalStorage(\"invoices\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useArticles() {\n  return useLocalStorage(\"articles\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useAuthors() {\n  return useLocalStorage(\"authors\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useCustomers() {\n  return useLocalStorage(\"customers\", []);\n}\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [customers] = useLocalStorage(\"customers\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Adresse</Table.HeaderCell>\n          <Table.HeaderCell>PLZ</Table.HeaderCell>\n          <Table.HeaderCell>Stadt</Table.HeaderCell>\n          <Table.HeaderCell>Rabatt</Table.HeaderCell>\n          <Table.HeaderCell>MwST</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {customers.map((c) => (\n          <Table.Row>\n            <Table.Cell>{c.name}</Table.Cell>\n            <Table.Cell>{c.address}</Table.Cell>\n            <Table.Cell>{c.postCode}</Table.Cell>\n            <Table.Cell>{c.city}</Table.Cell>\n            <Table.Cell>{c.discount}</Table.Cell>\n            <Table.Cell>{c.ust}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\n\nimport { Form, Input, Label } from \"semantic-ui-react\";\nimport { useAuthors } from \"../hooks\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n  const [authorSearch, setAuthorSearch] = useState(\"\");\n  const [authors] = useAuthors();\n\n  const filteredAuthors = useMemo(() => {\n    return authors.filter((a) => a && a.name.includes(authorSearch));\n  }, [authors, authorSearch]);\n\n  function addAuthorToArticle(author) {\n    setArticle({ ...article, authors: [...article.authors, author] });\n  }\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setArticlePrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={(e) => {\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n      <div>\n        <label>\n          <b>Autoren</b>\n        </label>\n        <div>\n          {article.authors.map((a) => (\n            <Label>{a.name}</Label>\n          ))}\n        </div>\n        <Input\n          name=\"author\"\n          placeholder=\"Suche...\"\n          value={authorSearch}\n          onChange={(e, { value }) => setAuthorSearch(value)}\n        />\n        {authorSearch !== \"\" && (\n          <div>\n            {filteredAuthors.map((a) => (\n              <Label onClick={() => addAuthorToArticle(a)}>{a.name}</Label>\n            ))}\n          </div>\n        )}\n      </div>\n    </Form>\n  );\n}\n","import React from \"react\";\n\nexport default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: `${day < 10 ? \"0\" + day : day}.&#8202;${\n          month < 10 ? \"0\" + month : month\n        }.&#8202;${date.getFullYear()}`,\n      }}\n    />\n  );\n}\n","export default (invoice) =>\n  invoice.articles\n    .map(({ price, toBePayed }) => {\n      const totalPrice = price * toBePayed;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React, { useState, useMemo } from \"react\";\nimport { useArticles, useInvoices } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\nimport { formatDate } from \"../../services\";\n\nexport default () => {\n  const [articles, setArticles] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const [invoices] = useInvoices();\n  const filteredInvoices = useMemo(() => {\n    if (!invoiceArticle) {\n      return null;\n    }\n    return invoices.reduce((list, i) => {\n      for (let a in i.articles) {\n        const article = i.articles[a];\n        if (article.id === invoiceArticle.id) {\n          return [\n            ...list,\n            {\n              ...i,\n              article,\n            },\n          ];\n        }\n      }\n      return list;\n    }, []);\n  }, [invoices, invoiceArticle]);\n  const updateArticle = () => {\n    let _articles = [...articles];\n    _articles[article.id] = article;\n    setArticles(_articles);\n    setArticle();\n  };\n\n  const deleteArticle = (pos) => {\n    const _articles = [...articles];\n    _articles[pos] = undefined;\n    setArticles(_articles);\n  };\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articles.length })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Edit Article</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateArticle}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                  <Table.HeaderCell>Zahlungsdatum</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {filteredInvoices.map((invoice) => (\n                  <Table.Row>\n                    <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                    <Table.Cell>{invoice.customer.name}</Table.Cell>\n                    <Table.Cell>{invoice.article.amount}</Table.Cell>\n                    <Table.Cell>{invoice.article.price}</Table.Cell>\n                    <Table.Cell>{formatDate(invoice.paymentDate)}</Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Menge</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>{a.amount}</Table.Cell>\n                  <Table.Cell>{a.price}</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button onClick={() => setArticle(a)} icon=\"edit\"></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                    ></Button>\n                    <Button\n                      onClick={() => deleteArticle(i)}\n                      icon=\"delete\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input } from \"semantic-ui-react\";\nimport RichTextEditor from \"react-rte\";\n\nexport default function CustomerForm({ customer, setCustomer }) {\n  const [invoiceAddress, setInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n  );\n\n  const [shippingAddress, setShippingAddress] = useState(\n    RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n  );\n\n  useEffect(() => {\n    setInvoiceAddress(\n      RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n    );\n    setShippingAddress(\n      RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n    );\n  }, [customer]);\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const updateRichtext = (name, value) => {\n    setCustomer({ ...customer, [name]: value.toString(\"html\") });\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"Name\"\n          value={customer.name}\n          name=\"name\"\n          onChange={handleCustomerChange}\n        />\n      </Form.Group>\n      <Form.Field\n        control={RichTextEditor}\n        label={\"Rechnungsadresse\"}\n        onChange={setInvoiceAddress}\n        value={invoiceAddress}\n        onBlur={() => {\n          updateRichtext(\"invoiceAddress\", invoiceAddress);\n        }}\n      />\n      <Form.Field\n        control={RichTextEditor}\n        label={\"Lieferadress\"}\n        onChange={setShippingAddress}\n        value={shippingAddress}\n        onBlur={() => {\n          updateRichtext(\"shippingAddress\", shippingAddress);\n        }}\n      />\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"MwST\"\n          placeholder=\"7\"\n          name=\"ust\"\n          icon=\"percent\"\n          onChange={handleCustomerChange}\n          value={customer.ust}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Rabat\"\n          placeholder=\"0\"\n          icon=\"percent\"\n          name=\"discount\"\n          onChange={handleCustomerChange}\n          value={customer.discount}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const { isDragActive, isDragAccept, isDragReject } = useDropzone({\n    accept: \"image/*\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: (event) => event.stopPropagation(),\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport DropZone from \"./DropZone\";\nimport RichTextEditor from \"react-rte\";\n\nexport default function CompanyForm({ company, setCompany }) {\n  const [footerText, setFooterText] = useState(\n    RichTextEditor.createValueFromString(company.footerText, \"html\")\n  );\n  const [subjectAndBelow, setSubjectAndBelow] = useState(\n    RichTextEditor.createValueFromString(company.subjectAndBelow, \"html\")\n  );\n  const [invoiceText, setInvoiceText] = useState(\n    RichTextEditor.createValueFromString(company.invoiceText, \"html\")\n  );\n  const [contactInformation, setContactInformation] = useState(\n    RichTextEditor.createValueFromString(company.contactInformation, \"html\")\n  );\n  const [aboveClientInvoiceAddress, setAboveClientInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(\n      company.aboveClientInvoiceAddress,\n      \"html\"\n    )\n  );\n\n  const updateRichText = (name, value) => {\n    setCompany({ ...company, [name]: value.toString(\"html\") });\n  };\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n  return (\n    <Form>\n      <Form.Field\n        label=\"Firmename\"\n        control={Input}\n        name=\"name\"\n        onChange={updateCompany}\n        value={company.name}\n      />\n      <Segment>\n        <h4>Logo</h4>\n        {company.logo !== \"\" ? (\n          <div>\n            <img src={company.logo} alt=\"company logo\" />\n            <Button\n              negative\n              onClick={() => setCompany({ ...company, logo: \"\" })}\n            >\n              Löschen\n            </Button>\n          </div>\n        ) : (\n          <DropZone onDrop={onDropHandler} />\n        )}\n      </Segment>\n      <Form.Field\n        label=\"Firmenführung\"\n        control={Input}\n        name=\"executive\"\n        onChange={updateCompany}\n        value={company.executive}\n      />\n      <Form.Field\n        control={RichTextEditor}\n        value={aboveClientInvoiceAddress}\n        onChange={setAboveClientInvoiceAddress}\n        onBlur={() => {\n          updateRichText(\n            \"aboveClientInvoiceAddress\",\n            aboveClientInvoiceAddress\n          );\n        }}\n        label=\"Absender\"\n        name=\"aboveClientInvoiceAddress\"\n      />\n      <Form.Field\n        control={RichTextEditor}\n        value={contactInformation}\n        onChange={setContactInformation}\n        onBlur={() => {\n          updateRichText(\"contactInformation\", contactInformation);\n        }}\n        label=\"Kontakt Informationen\"\n        name=\"contactInformation\"\n      />\n      <Form.Field\n        control={RichTextEditor}\n        value={subjectAndBelow}\n        onChange={setSubjectAndBelow}\n        onBlur={() => {\n          updateRichText(\"subjectAndBelow\", subjectAndBelow);\n        }}\n        label=\"Betreff und Begrüßung\"\n        name=\"subjectAndBelow\"\n      />\n      <Form.Field\n        control={RichTextEditor}\n        value={invoiceText}\n        onChange={setInvoiceText}\n        onBlur={() => {\n          updateRichText(\"invoiceText\", invoiceText);\n        }}\n        label=\"Rechnungstext\"\n        name=\"invoiceText\"\n      />\n      <Form.Field\n        control={RichTextEditor}\n        value={footerText}\n        onChange={(value) => {\n          setFooterText(value);\n        }}\n        onBlur={() => {\n          updateRichText(\"footerText\", footerText);\n        }}\n        label=\"Fußzeile\"\n        name=\"footerText\"\n      />\n      <Form.Field\n        label=\"Farbe\"\n        control={Input}\n        placeholder=\"z.B. #ffffff oder rgb(120,0,0)\"\n        name=\"companyColor\"\n        onChange={updateCompany}\n        value={company.color}\n      />\n    </Form>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport {\n  useLocalStorage,\n  useInvoices,\n  useCompany,\n  useCustomers,\n} from \"../../hooks\";\nimport {\n  Accordion,\n  Container,\n  Form,\n  Icon,\n  Input,\n  Card,\n  Modal,\n  Label,\n  Button,\n  Checkbox,\n  Dropdown,\n  Tab,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport { calculateTotalPrice } from \"../../services\";\nimport Article from \"../Article\";\nimport CustomerForm from \"../CustomerForm/CustomerForm\";\nimport CompanyForm from \"../CompanyForm\";\n\nexport default ({ invoice, setInvoice, setInvoices }) => {\n  const [customers, setCustomers] = useCustomers();\n  const [company, setCompany] = useCompany();\n  const [customer, setCustomer] = useState(\n    customers[invoice.customer.id] || invoice.customer\n  );\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [selectedArticles, setSelectedArticles] = useState(invoice.articles);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articles.length,\n  });\n  const [toBePayed, setToBePayed] = useState(1);\n  const [toBeSend, setToBeSend] = useState(1);\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [invoices] = useInvoices();\n  const [porto, setPorto] = useState(invoice.porto);\n\n  useEffect(() => {\n    setInvoice({\n      ...invoice,\n      customer,\n      articles: selectedArticles.map((a) => ({\n        ...articles[a.articleId],\n        ...a,\n      })),\n      company,\n    });\n  }, [customer, selectedArticles, company]);\n\n  const updateInvoice = (e, { name, value, checked }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setPorto(value);\n    }\n    if (name === \"payed\") {\n      value = checked;\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const updateArticleAmount = (id, amountChange) => {\n    let _articles = [...articles];\n    const article = _articles[id];\n    _articles[id] = {\n      ...article,\n      amount: parseFloat(article.amount) + amountChange,\n    };\n    setArticles(_articles);\n  };\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    toggleNewArticle();\n  };\n\n  const saveInvoice = () => {\n    const updateInvoiceArticles = (invoice, mul = 1) => {\n      if (invoice) {\n        for (let a in invoice.articles) {\n          updateArticleAmount(\n            invoice.articles[a].id,\n            mul * invoice.articles[a].amount\n          );\n        }\n      }\n    };\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    updateInvoiceArticles(invoices[invoice.id]);\n    _invoices[invoice.id] = invoice;\n    updateInvoiceArticles(_invoices[invoice.id], -1);\n    setInvoices(_invoices);\n    setInvoice();\n    const _customers = [...customers];\n    _customers[customer.id] = customer;\n    setCustomers(_customers);\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  const customerOptions = useMemo(() => {\n    let list = [\n      {\n        key: customers.length,\n        value: customers.length,\n        text: `Neuer Kunde`,\n      },\n    ];\n    return list.concat(\n      customers.map((c) => ({\n        key: c.id,\n        text: c.name,\n        value: c.id,\n      }))\n    );\n  }, [customers, customer]);\n\n  const articlesOptions = useMemo(() => {\n    const list = [{ key: articles.length, value: articles.length, text: \"\" }];\n    return list.concat(\n      articles.map((a) => ({\n        key: a.id,\n        value: a.id,\n        text: a.name,\n      }))\n    );\n  }, [articles]);\n\n  const handleCustomerChange = (e, { value }) => {\n    if (value < customers.length) setCustomer(customers[value]);\n    else setCustomer({ ...customerSceleton, id: customers.length });\n  };\n\n  const handleArticleChange = (id, name, value) => {\n    if (id >= selectedArticles.length) {\n      if (value >= articles.length) {\n        return;\n      }\n      setSelectedArticles([\n        ...selectedArticles,\n        { toBeSend, toBePayed, articleId: value },\n      ]);\n      setToBeSend(1);\n      setToBePayed(1);\n    } else {\n      if (name === \"articleId\" && value >= articles.length) {\n        setSelectedArticles(selectedArticles.filter((a, i) => i !== id));\n        return;\n      }\n      const _articles = [...selectedArticles];\n      _articles[id][name] = value;\n      setSelectedArticles(_articles);\n    }\n  };\n\n  return (\n    <div className=\"invoice-form\">\n      <Container>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Rechnungsdaten</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Tab\n              panes={[\n                {\n                  menuItem: \"Kunde\",\n                  render: () => (\n                    <div className=\"\">\n                      <Form>\n                        <Form.Field\n                          label=\"Kunden\"\n                          control={Dropdown}\n                          search\n                          selection\n                          options={customerOptions}\n                          value={customer.id}\n                          onChange={handleCustomerChange}\n                        />\n                      </Form>\n                      <CustomerForm\n                        customer={customer}\n                        setCustomer={setCustomer}\n                      />\n                    </div>\n                  ),\n                },\n                {\n                  menuItem: \"Artikel\",\n                  render: () => (\n                    <div>\n                      <div>\n                        <Form>\n                          {selectedArticles.map((a, i) => (\n                            <div>\n                              <Form.Group widths=\"equal\">\n                                <Form.Input\n                                  fluid\n                                  name=\"toBeSend\"\n                                  type=\"number\"\n                                  label=\"Zu Senden\"\n                                  value={a.toBeSend}\n                                  onChange={(e, { value, name }) =>\n                                    handleArticleChange(i, name, value)\n                                  }\n                                />\n                                <Form.Input\n                                  fluid\n                                  name=\"toBePayed\"\n                                  type=\"number\"\n                                  label=\"Zu Bezahlen\"\n                                  value={a.toBePayed}\n                                  onChange={(e, { value, name }) =>\n                                    handleArticleChange(i, name, value)\n                                  }\n                                />\n\n                                <Form.Field\n                                  control={Dropdown}\n                                  fluid\n                                  label=\"Artikel\"\n                                  name=\"articleId\"\n                                  search\n                                  selection\n                                  options={articlesOptions}\n                                  value={a.articleId}\n                                  onChange={(e, { value, name }) =>\n                                    handleArticleChange(i, name, value)\n                                  }\n                                />\n                              </Form.Group>\n                            </div>\n                          ))}\n                          <Form.Group widths=\"equal\">\n                            <Form.Input\n                              fluid\n                              name=\"amount\"\n                              type=\"number\"\n                              label=\"Erhalten\"\n                              value={toBeSend}\n                              onChange={(e, { value }) => setToBeSend(value)}\n                            />\n                            <Form.Input\n                              fluid\n                              name=\"amountPayed\"\n                              type=\"number\"\n                              label=\"Zu Bezahlen\"\n                              value={toBePayed}\n                              onChange={(e, { value }) => setToBePayed(value)}\n                            />\n\n                            <Form.Field\n                              control={Dropdown}\n                              fluid\n                              label=\"Artikel\"\n                              name=\"articleId\"\n                              search\n                              selection\n                              options={articlesOptions}\n                              value={article.id}\n                              onChange={(e, { value }) =>\n                                handleArticleChange(\n                                  selectedArticles.length,\n                                  \"articleId\",\n                                  value\n                                )\n                              }\n                            />\n                          </Form.Group>\n                        </Form>\n                        <Button onClick={toggleNewArticle}>\n                          Neuen Artikel Anlegen\n                        </Button>\n                      </div>\n                      <Modal open={newArticle} onClose={toggleNewArticle}>\n                        <Modal.Header>Neuer Artikel</Modal.Header>\n                        <Modal.Content>\n                          <Article article={article} setArticle={setArticle} />\n                        </Modal.Content>\n                        <Modal.Actions>\n                          <Button\n                            onClick={toggleNewArticle}\n                            content=\"Abbrechen\"\n                            negative\n                            icon=\"close\"\n                            labelPosition=\"right\"\n                          ></Button>\n                          <Button\n                            onClick={addNewArticle}\n                            content=\"Anlegen\"\n                            primary\n                            icon=\"check\"\n                            labelPosition=\"right\"\n                          ></Button>\n                        </Modal.Actions>\n                      </Modal>\n                    </div>\n                  ),\n                },\n                {\n                  menuItem: \"Allgemein\",\n                  render: () => (\n                    <div>\n                      <Form>\n                        <Form.Field\n                          label=\"Rechnungsdatum\"\n                          name=\"invoiceDate\"\n                          selected={new Date(invoice.invoiceDate)}\n                          onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                          control={DatePicker}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                        <Form.Field\n                          label=\"Bestelldatum\"\n                          name=\"orderDate\"\n                          selected={new Date(invoice.orderDate)}\n                          onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                          control={DatePicker}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                        <Form.Field\n                          label=\"Versanddatum\"\n                          name=\"shippingDate\"\n                          selected={new Date(invoice.shippingDate)}\n                          onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                          control={DatePicker}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                        <Form.Field\n                          label=\"Porto\"\n                          value={porto}\n                          name=\"porto\"\n                          onChange={(e, { value }) => setPorto(value)}\n                          control={Input}\n                          onBlur={(e) =>\n                            updateInvoice(e, {\n                              name: e.target.name,\n                              value: e.target.value,\n                            })\n                          }\n                          icon=\"euro\"\n                        />\n                        <Form.Field\n                          label=\"Rechnungsnummer\"\n                          name=\"invoiceNumber\"\n                          value={invoice.invoiceNumber}\n                          onChange={updateInvoice}\n                          control={Input}\n                        />\n                        <Form.Field>\n                          <label>Bezahlt</label>\n                          <Checkbox\n                            onChange={(e, { name, checked }) => {\n                              if (checked) {\n                                setInvoice({\n                                  ...invoice,\n                                  [name]: checked,\n                                  paymentDate: new Date(),\n                                });\n                              } else {\n                                setInvoice({\n                                  ...invoice,\n                                  [name]: checked,\n                                  paymentDate: undefined,\n                                });\n                              }\n                            }}\n                            name=\"payed\"\n                            checked={invoice.payed}\n                            toggle\n                          />\n                        </Form.Field>\n                        {invoice.payed && (\n                          <Form.Field\n                            label=\"Zahlungseingangsdatum\"\n                            name=\"paymentDate\"\n                            selected={new Date(invoice.paymentDate)}\n                            onChange={(v) =>\n                              updateInvoiceDate(v, \"paymentDate\")\n                            }\n                            control={DatePicker}\n                            dateFormat=\"dd/MM/yyyy\"\n                          />\n                        )}\n                      </Form>\n                    </div>\n                  ),\n                },\n                {\n                  menuItem: \"Firma\",\n                  render: () => (\n                    <CompanyForm company={company} setCompany={setCompany} />\n                  ),\n                },\n              ]}\n            ></Tab>\n          </Card.Content>\n        </Card>\n        <Button\n          onClick={() => setInvoice()}\n          content=\"Abbrechen\"\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n        ></Button>\n        {invoice.customer && (\n          <Button\n            onClick={saveInvoice}\n            content=\"Speichern\"\n            primary\n            icon=\"check\"\n            labelPosition=\"right\"\n          ></Button>\n        )}\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { Button } from \"semantic-ui-react\";\n\nconst pxToMm = (px) => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = (mm) => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function (val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <div className=\"tc mb4 mt2\">\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div id=\"myMm\" style={{ height: \"1mm\" }} />\n\n    <Button\n      primary\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight,\n        });\n\n        html2canvas(input, { scale: 2 }).then((canvas) => {\n          const imgData = canvas.toDataURL(\"image/png\", 1);\n          console.log(imgData);\n          let pdf;\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            pdf = new jsPDF();\n          }\n\n          pdf.addImage(imgData, \"PNG\", 0, 0, 210, 297);\n          pdf.save(`${fileName}.pdf`);\n        });\n\n        ////////////////////////////////////////////////////////\n        // System to manually handle page breaks\n        // Wasn't able to get it working !\n        // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\n        // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\n        ////////////////////////////////////////////////////////\n        // range(0, numPages).forEach((page) => {\n        //   console.log(`Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page*a4HeightPx}`);\n        //   html2canvas(input, {height: a4HeightPx, y: page*a4HeightPx})\n        //     .then((canvas) => {\n        //       const imgData = canvas.toDataURL('image/png');\n        //       console.log(imgData)\n        //       if (page > 0) {\n        //         pdf.addPage();\n        //       }\n        //       pdf.addImage(imgData, 'PNG', 0, 0);\n        //     });\n        //   ;\n        // });\n\n        // setTimeout(() => {\n        //   pdf.save(`${id}.pdf`);\n        // }, 5000);\n      }}\n    >\n      Rechnung Drucken\n    </Button>\n  </div>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate } from \"../../services\";\nimport { useCompany } from \"../../hooks\";\nimport { Button } from \"semantic-ui-react\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    customer,\n    articles = [],\n    company,\n  },\n  invoice,\n  setInvoice,\n}) => {\n  const articles_net_price = articles\n    .map(({ price, toBePayed }) => {\n      const totalPrice = price * toBePayed;\n      const totalPriceWithDiscount =\n        totalPrice - totalPrice * (customer.discount / 100);\n      const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  const updateInvoice = ({ target: { name, value } }) => {\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div\n        className=\"invoice-folding-line\"\n        style={\n          company.companyColor ? { borderColor: company.companyColor } : {}\n        }\n      />\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <img\n            className=\"invoice-header-company-logo\"\n            src={company.logo}\n            alt=\"company logo\"\n          />\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <div\n                className=\"invoice-header-customer-company\"\n                dangerouslySetInnerHTML={{\n                  __html: company.aboveClientInvoiceAddress,\n                }}\n              ></div>\n              {customer ? (\n                <div\n                  className=\"invoice-header-customer-info\"\n                  dangerouslySetInnerHTML={{ __html: customer.invoiceAddress }}\n                ></div>\n              ) : (\n                <Button>Kunde hinzufügen</Button>\n              )}\n            </div>\n            <div\n              className=\"invoice-header-company-info\"\n              dangerouslySetInnerHTML={{ __html: company.contactInformation }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <div\n                className=\"invoice-subject-and-below\"\n                dangerouslySetInnerHTML={{ __html: company.subjectAndBelow }}\n              />\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versanddatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </div>\n                  {customer && (\n                    <div\n                      className=\"invoice-body-send-to\"\n                      dangerouslySetInnerHTML={{\n                        __html: customer.shippingAddress,\n                      }}\n                    ></div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-top-right\">\n              <div className=\"invoice-body-invoice-date\">\n                <p>\n                  Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-nr\">\n                <p>\n                  Rechnungsnummer: <b>{invoiceNumber}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlung angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-bottom\">\n            <div className=\"invoice-body-article-wrapper\">\n              {articles.map(({ toBePayed, toBeSend, price, name, isbn }) => {\n                const multiple = parseInt(toBePayed) > 1;\n                const totalPrice = price * toBePayed;\n                const totalPriceWithDiscount =\n                  totalPrice - totalPrice * (customer.discount / 100);\n                const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n                return (\n                  <div className=\"invoice-body-article\">\n                    <div className=\"invoice-body-article-left\">\n                      <div className=\"invoice-body-article-description\">\n                        <div>\n                          <b>\n                            {toBePayed !== toBeSend && toBeSend + \"/\"}\n                            {toBePayed} Exemplar\n                            {multiple && \"e\"}\n                          </b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          <b>„{name}“</b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">{isbn}</div>\n                      </div>\n                      <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                        multiple ? \"je\" : \"\"\n                      } ${price} €${\n                        multiple ? ` = ${totalPrice.toFixed(2)}€` : \"\"\n                      }${\n                        customer.discount > 0\n                          ? `, abzüglich ${\n                              customer.discount\n                            } % Rabatt = ${totalPriceWithDiscount.toFixed(2)} €`\n                          : \"\"\n                      } (beinhaltet ${customer.ust} % MwST = ${(\n                        totalPriceWithDiscount - net\n                      ).toFixed(2)})`}</div>\n                    </div>\n                    <div className=\"invoice-body-article-price\">\n                      <b>{articles.length > 1 && `${net.toFixed(2)} €`}</b>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"invoice-body-price-calculation\">\n              <div>\n                <p>Netto</p>\n                <p>\n                  <b>{articles_net_price.toFixed(2)} €</b>\n                </p>\n              </div>\n              <div>\n                <p>Versandkosten</p>\n                <p>\n                  <b>{porto} €</b>\n                </p>\n              </div>\n              <div>\n                <p>{`+${customer.ust}% Mehrwertsteuer`}</p>\n                <p>\n                  <b>\n                    {(\n                      ((articles_net_price + parseFloat(porto)) *\n                        parseFloat(customer.ust)) /\n                      100\n                    ).toFixed(2)}{\" \"}\n                    €\n                  </b>\n                </p>\n              </div>\n            </div>\n            <div className=\"invoice-body-price\">\n              <p>Rechnungsbetrag</p>\n              <p>\n                <b>\n                  {(\n                    (articles_net_price + parseFloat(porto)) *\n                    (1 + parseFloat(customer.ust) / 100)\n                  ).toFixed(2)}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n            <div>\n              <p\n                className=\"invoice-body-final-text\"\n                dangerouslySetInnerHTML={{ __html: company.invoiceText }}\n              ></p>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"invoice-footer\"\n          style={\n            company.companyColor ? { borderColor: company.companyColor } : {}\n          }\n          dangerouslySetInnerHTML={{ __html: company.footerText }}\n        ></div>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\n\nimport InvoiceForm from \"./InvoiceForm\";\nimport PrintButton from \"./PrintButton\";\nimport SinglePage from \"./SinglePage/SinglePage\";\n\nexport default ({ invoice, setInvoice, setInvoices }) => {\n  return (\n    <div className=\"invoice-page\">\n      <div className=\"invoice-form-wrapper\">\n        <InvoiceForm\n          invoice={invoice}\n          setInvoice={setInvoice}\n          setInvoices={setInvoices}\n        />\n      </div>\n      <div className=\"invoice-page-wrapper\">\n        <PrintButton\n          id={\"singlePage\"}\n          label={\"Rechnung Drucken\"}\n          fileName={invoice.invoiceNumber}\n        />\n        <SinglePage\n          id={\"singlePage\"}\n          invoice={invoice}\n          setInvoice={setInvoice}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useCompany, useInvoices, useCustomers } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../sceletons\";\nimport { formatDate } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n  const [customers] = useCustomers();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice\n        invoice={invoiceSelected}\n        setInvoice={setInvoiceSelected}\n        setInvoices={setInvoices}\n      />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoices.length,\n            customer: {\n              ...customerSceleton,\n              id: customers.length,\n            },\n            company,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell>Zahlungseingang</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map((i) => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map((a) => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{i.totalPrice.toFixed(2)}€</Table.Cell>\n              <Table.Cell>\n                {i.paymentDate ? formatDate(i.paymentDate) : \"Ausstehend\"}\n              </Table.Cell>\n              <Table.Cell>\n                <Button icon onClick={() => setInvoiceSelected(i)}>\n                  <Icon name=\"eye\"></Icon>\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useCompany } from \"../hooks\";\nimport CompanyForm from \"./CompanyForm\";\n\nexport default function Company() {\n  const [company, setCompany] = useCompany();\n\n  return (\n    <div>\n      <CompanyForm {...{ company, setCompany }} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\n\nexport default function Author({ author, setAuthor }) {\n  const [authorPrice, setAuthorPrice] = useState(author.percent);\n\n  const handleAuthorChange = (e, { name, value }) => {\n    if (name === \"percent\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setAuthorPrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setAuthorPrice(value);\n    }\n    setAuthor({ ...author, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleAuthorChange}\n          value={author.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Kontakt\"\n          placeholder=\"Tel, Email, ...\"\n          onChange={handleAuthorChange}\n          name=\"contact\"\n          value={author.contact}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Prozent\"\n          placeholder=\"Prozent\"\n          name=\"percent\"\n          icon=\"percent\"\n          onChange={(e, { value }) => setAuthorPrice(value)}\n          onBlur={(e) => {\n            handleAuthorChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={authorPrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\n\nexport default function Authors() {\n  const [authors, setAuthors] = useAuthors();\n  const [author, setAuthor] = useState();\n\n  function deleteAuthor(id) {\n    const _authors = [...authors];\n    _authors[id] = undefined;\n    setAuthors(_authors);\n  }\n\n  function updateAuthors(id) {\n    const _authors = [...authors];\n    _authors[author.id] = author;\n    setAuthors(_authors);\n    setAuthor();\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ authorSceleton, id: authors.length })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateAuthors}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button onClick={() => setAuthor(a)} icon=\"eye\"></Button>\n                    <Button\n                      onClick={() => deleteAuthor(i)}\n                      icon=\"delete\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import useMigrationWrapper from \"./useMigrationWrapper\";\nimport { useArticles } from \"../hooks\";\n\nconst VERSION = 2;\n\nfunction useAddAuthorsToArticles() {\n  const [articles, setArticles] = useArticles();\n\n  setArticles(articles.map((a) => ({ ...a, authors: [] })));\n}\n\nexport default () => useMigrationWrapper(useAddAuthorsToArticles, VERSION);\n","import { useLocalStorage } from \"../hooks\";\n\nexport default function useMigrationWrapper(migrate, version) {\n  const [currentVersion, setCurrentVersion] = useLocalStorage(\"version\", \"1\");\n  if (parseInt(currentVersion) < version) {\n    migrate();\n  }\n  setCurrentVersion(version);\n}\n","import migration from \"../migration\";\n\nexport default function useMigration() {\n  migration();\n}\n","import authors from \"./authors\";\n\nexport default function migration() {\n  authors();\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport { Tab, Container } from \"semantic-ui-react\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Company from \"./components/Company\";\nimport Authors from \"./components/Authors/Authors\";\nimport useMigration from \"./hooks/useMigration\";\n\nconst App = () => {\n  useMigration();\n\n  return (\n    <div className=\"invoice-app-container\">\n      <Tab\n        panes={[\n          {\n            menuItem: \"Rechnungen\",\n            render: () => (\n              <div className=\"\">\n                <Invoices />\n              </div>\n            ),\n          },\n          {\n            menuItem: \"Kunden\",\n            render: () => (\n              <div className=\"\">\n                <Customers />\n              </div>\n            ),\n          },\n          {\n            menuItem: \"Artikel\",\n            render: () => (\n              <div className=\"\">\n                <Articles />\n              </div>\n            ),\n          },\n          {\n            menuItem: \"Autoren\",\n            render: () => (\n              <div className=\"\">\n                <Authors />\n              </div>\n            ),\n          },\n          {\n            menuItem: \"Firma\",\n            render: () => (\n              <div className=\"\">\n                <Company />\n              </div>\n            ),\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}