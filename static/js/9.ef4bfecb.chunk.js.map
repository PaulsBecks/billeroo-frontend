{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","../node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","components/DeleteAckModal/DeleteAckModal.js","components/DeleteAckModal/index.js","services/backend/emailInvoice.js","services/sendInvoice.js","components/SendEmailInvoiceModal/SendEmailInvoiceModal.js","../../src/index.ts","components/Invoices/Invoices.js","components/Invoices/index.js"],"names":["HeaderSubheader","props","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","create","createShorthandFactory","HeaderContent","Header","attached","block","color","disabled","dividing","floated","icon","image","inverted","size","sub","subheader","textAlign","useKeyOnly","useValueAndKey","useKeyOrValueAndKey","useTextAlignProp","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","DelteAckModal","onDelete","type","useState","open","setOpen","Modal","basic","trigger","Button","negative","onClick","onClose","Actions","name","url","config","backendURL","emailInvoice","data","a","postData","sendInvoice","id","options","createInvoice","pdf","output","SendEmailInvoiceModal","invoice","setInvoice","onSend","to","fileName","invoiceNumber","form","setForm","isSending","setIsSending","RichTextEditor","createValueFromString","customer","shippingAddress","text","setText","Form","Input","label","value","placeholder","onChange","e","Field","control","Editor","labelPosition","primary","toString","loading","observeElementInViewport","target","inHandler","outHandler","opts","Error","Object","assign","viewport","modTop","modRight","modBottom","modLeft","threshold","Array","isArray","thresholdArray","map","t","Math","floor","minThreshold","min","intersectionObserverOptions","root","Node","rootMargin","intersectionObserver","IntersectionObserver","entries","observer","entryForEl","filter","entry","unobserve","isInViewport","observe","isRefObject","x","isCallbackRef","f","call","useInvoices","invoices","removeInvoice","updateInvoice","isLoadingInvoices","loadMoreInvoices","invoiceDownloadSelected","setInvoiceDownloadSelected","invoiceEmailSelected","setInvoiceEmailSelected","n","parentRef","useRef","childRef","parentCbRef","useCallback","node","current","childCbRef","useEffect","setIsInViewport","restOpts","useIsInViewport","inViewPort","reloadDiv","useGA","history","useHistory","path","useRouteMatch","printInvoice","print","exact","push","Table","celled","Row","HeaderCell","Body","i","key","_id","Cell","formatDate","invoiceDate","formatPrice","totalPrice","style","marginBottom","Group","display","alignItems","margin","Checkbox","checked","Date","undefined","payed","toggle","paymentDate","selected","v","ReactDatePicker","dateFormat","transparent","marginLeft","secondary","borderLeft","marginRight","DeleteAckModal","ref","position","opacity","SinglePage","InvoiceNew","InvoiceDetail"],"mappings":"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","file":"static/js/9.ef4bfecb.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../Icon';\nimport Image from '../Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import React, { useState } from \"react\";\nimport { Modal, Button, Header, Icon } from \"semantic-ui-react\";\n\nexport default function DelteAckModal(props) {\n  const { onDelete, type } = props;\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Modal\n      {...props}\n      basic\n      size=\"small\"\n      trigger={<Button negative icon=\"trash\" onClick={() => setOpen(true)} />}\n      open={open}\n      onClose={() => setOpen(false)}\n    >\n      <Header icon=\"trash\" content={`${type} löschen`} />\n      <Modal.Content>\n        <p>Bist du dir sicher, dass du dieses Element löschen willst?</p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\n          <Icon name=\"remove\" /> Nein\n        </Button>\n        <Button\n          color=\"green\"\n          inverted\n          onClick={() => {\n            onDelete();\n            setOpen(false);\n          }}\n        >\n          <Icon name=\"checkmark\" /> Ja\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","export { default } from \"./DeleteAckModal\";\n","import config from \"../../config\";\nimport postData from \"./postData\";\n\nconst { backendURL } = config();\n\nconst url = backendURL + \"/email/invoice\";\n\nexport default async function emailInvoice(data) {\n  await postData(url, data);\n}\n","import createInvoice from \"./createInvoice\";\nimport emailInvoice from \"./backend/emailInvoice\";\nexport default async function sendInvoice(id, options) {\n  const pdf = await createInvoice(id);\n  var data = pdf.output(\"datauristring\");\n  emailInvoice({\n    data,\n    ...options,\n  });\n}\n","import React, { useState } from \"react\";\nimport { Modal, Form, Button } from \"semantic-ui-react\";\nimport Editor from \"../Editor/Editor\";\nimport RichTextEditor from \"react-rte\";\n\nexport default function SendEmailInvoiceModal({ invoice, setInvoice, onSend }) {\n  const [form, setForm] = useState({\n    to: \"\",\n    fileName: invoice.invoiceNumber,\n  });\n\n  const [isSending, setIsSending] = useState(false);\n\n  const [text, setText] = useState(\n    RichTextEditor.createValueFromString(\n      `<b>Versandadresse des Kunden</b><br/>` +\n        invoice.customer.shippingAddress,\n      \"html\"\n    )\n  );\n\n  return (\n    <Modal open={true} onClose={() => setInvoice()}>\n      <Modal.Header>Rechnungs-PDF per Email Verschicken</Modal.Header>\n      <Modal.Content>\n        <Form>\n          <Form.Input\n            label=\"An\"\n            name=\"to\"\n            value={form.to}\n            placeholder=\"max-mustermann@email.de\"\n            onChange={(e, { name, value }) =>\n              setForm({ ...form, [name]: value })\n            }\n          />\n          <Form.Input\n            label=\"Rechnungsdateiname\"\n            name=\"fileName\"\n            value={form.fileName}\n            onChange={(e, { name, value }) =>\n              setForm({ ...form, [name]: value })\n            }\n          />\n          <Form.Field\n            label=\"Emailtext\"\n            name=\"text\"\n            value={text}\n            control={Editor}\n            onChange={setText}\n          />\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n          content=\"Abbrechen\"\n          onClick={() => setInvoice()}\n        />\n        <Button\n          primary\n          icon=\"send\"\n          labelPosition=\"right\"\n          content=\"Senden\"\n          onClick={() => {\n            setIsSending(true);\n            onSend({ text: text.toString(\"html\"), ...form });\n          }}\n          loading={isSending}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { observeElementInViewport, Options } from 'observe-element-in-viewport'\nimport { MutableRefObject, useCallback, useEffect, useRef, useState } from 'react'\n\nexport type CallbackRef = (node: HTMLElement | null) => any\nexport type HookOptions = Partial<\n  Pick<Options, Exclude<keyof Options, 'viewport'>> & {\n    viewport: CallbackRef | MutableRefObject<HTMLElement | null>\n    target: CallbackRef | MutableRefObject<HTMLElement | null>\n  }\n>\n\nexport default function useIsInViewport(\n  options: HookOptions = {}\n): [boolean | null, CallbackRef, CallbackRef] {\n  const [isInViewport, setIsInViewport] = useState<boolean | null>(null)\n  const { target, viewport, ...restOpts } = options\n  const parentRef: MutableRefObject<HTMLElement | null> = useRef(null)\n  const childRef: MutableRefObject<HTMLElement | null> = useRef(null)\n\n  const parentCbRef: CallbackRef = useCallback(\n    node => {\n      parentRef.current = node\n      if (viewport) {\n        if (isCallbackRef(viewport)) {\n          viewport(node)\n        } else if (isRefObject(viewport)) {\n          viewport.current = node\n        }\n      }\n    },\n    [parentRef, viewport]\n  )\n\n  const childCbRef: CallbackRef = useCallback(\n    node => {\n      childRef.current = node\n      if (target) {\n        if (isCallbackRef(target)) {\n          target(node)\n        } else if (isRefObject(target)) {\n          target.current = node\n        }\n      }\n    },\n    [childRef, target]\n  )\n\n  useEffect(() => {\n    if (!childRef.current) {\n      return\n    }\n    return observeElementInViewport(\n      childRef.current,\n      () => setIsInViewport(true),\n      () => setIsInViewport(false),\n      {\n        ...restOpts,\n        viewport: parentRef.current\n      }\n    )\n  }, [childRef.current, restOpts, parentRef])\n\n  return [isInViewport, childCbRef, parentCbRef]\n}\n\nfunction isRefObject(x: any): boolean {\n  return typeof x === 'object' && 'current' in x\n}\n\nfunction isCallbackRef(f: any): f is CallbackRef {\n  return typeof f === 'function' && typeof f.call === 'function'\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useInvoices, useGA } from \"../../hooks\";\n\nimport { Button, Table, Checkbox, Form } from \"semantic-ui-react\";\nimport { formatDate, formatPrice, printInvoice } from \"../../services\";\nimport SinglePage from \"../SinglePage/SinglePage\";\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router\";\nimport InvoiceNew from \"../../pages/InvoiceNew/InvoiceNew\";\nimport InvoiceDetail from \"../../pages/InvoiceDetail/InvoiceDetail\";\nimport ReactDatePicker from \"react-datepicker\";\nimport sendInvoice from \"../../services/sendInvoice\";\nimport SendEmailInvoiceModal from \"../SendEmailInvoiceModal/SendEmailInvoiceModal\";\nimport DeleteAckModal from \"../DeleteAckModal\";\nimport useIsInViewport from \"use-is-in-viewport\";\n\nexport default () => {\n  const [\n    invoices,\n    ,\n    removeInvoice,\n    updateInvoice,\n    ,\n    ,\n    isLoadingInvoices,\n    loadMoreInvoices,\n  ] = useInvoices();\n  const [invoiceDownloadSelected, setInvoiceDownloadSelected] = useState();\n  const [invoiceEmailSelected, setInvoiceEmailSelected] = useState();\n  const [inViewPort, reloadDiv] = useIsInViewport({});\n\n  useEffect(() => {\n    if (inViewPort && !isLoadingInvoices) {\n      loadMoreInvoices();\n    }\n  }, [inViewPort, isLoadingInvoices, loadMoreInvoices]);\n  useGA();\n  const history = useHistory();\n  let { path } = useRouteMatch();\n\n  useEffect(() => {\n    if (invoiceDownloadSelected) {\n      async function print() {\n        await printInvoice(\"singlePage\", invoiceDownloadSelected.invoiceNumber);\n        setInvoiceDownloadSelected();\n      }\n      print();\n    }\n  }, [invoiceDownloadSelected]);\n\n  async function send(options) {\n    await sendInvoice(\"singlePage\", options);\n    setInvoiceEmailSelected();\n  }\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <div className=\"invoice-tab-container\">\n          <Button onClick={() => history.push(`${path}/new`)} primary>\n            Neue Rechnung\n          </Button>\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n                <Table.HeaderCell>Kunde</Table.HeaderCell>\n                <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n                <Table.HeaderCell>Zahlungseingang</Table.HeaderCell>\n                <Table.HeaderCell></Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {invoices.map((i) => {\n                return (\n                  <Table.Row key={i._id}>\n                    <Table.Cell>{i.invoiceNumber}</Table.Cell>\n                    <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n                    <Table.Cell>{i.customer.name}</Table.Cell>\n                    <Table.Cell>{formatPrice(i.totalPrice)} €</Table.Cell>\n                    <Table.Cell>\n                      <Form style={{ marginBottom: 0 }}>\n                        <Form.Group\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            margin: \"0\",\n                          }}\n                        >\n                          <Checkbox\n                            onChange={(e, { name, checked }) => {\n                              if (checked) {\n                                updateInvoice({\n                                  ...i,\n                                  [name]: checked,\n                                  paymentDate: new Date(),\n                                });\n                              } else {\n                                updateInvoice({\n                                  ...i,\n                                  [name]: checked,\n                                  paymentDate: undefined,\n                                });\n                              }\n                            }}\n                            name=\"payed\"\n                            checked={i.payed}\n                            toggle\n                          />\n                          {i.payed && i.paymentDate ? (\n                            <Form.Field\n                              selected={new Date(i.paymentDate)}\n                              onChange={(v) =>\n                                updateInvoice({ ...i, paymentDate: v })\n                              }\n                              control={ReactDatePicker}\n                              dateFormat=\"dd/MM/yyyy\"\n                              transparent\n                            />\n                          ) : (\n                            <span style={{ marginLeft: \"0.5em\" }}>\n                              Ausstehend\n                            </span>\n                          )}\n                        </Form.Group>\n                      </Form>\n                    </Table.Cell>\n                    <Table.Cell style={{}}>\n                      <Button\n                        primary\n                        icon=\"edit\"\n                        onClick={() => history.push(`${path}/${i._id}`)}\n                      ></Button>\n                      <Button.Group>\n                        <Button\n                          secondary\n                          icon=\"download\"\n                          onClick={() => setInvoiceDownloadSelected(i)}\n                        ></Button>\n                        <Button\n                          style={{\n                            borderLeft: \"1px solid white\",\n                            marginRight: \"2px\",\n                          }}\n                          secondary\n                          icon=\"mail\"\n                          onClick={() => setInvoiceEmailSelected(i)}\n                        ></Button>\n                      </Button.Group>{\" \"}\n                      <DeleteAckModal\n                        onDelete={() => removeInvoice(i._id)}\n                        type=\"Rechnung\"\n                      />\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n          </Table>\n          <div ref={reloadDiv} />\n          <div style={{ position: \"absolute\", opacity: \"0.0\" }}>\n            {(invoiceDownloadSelected || invoiceEmailSelected) && (\n              <SinglePage\n                id=\"singlePage\"\n                invoice={invoiceDownloadSelected || invoiceEmailSelected}\n              />\n            )}\n          </div>\n          {invoiceEmailSelected && (\n            <SendEmailInvoiceModal\n              invoice={invoiceEmailSelected}\n              setInvoice={setInvoiceEmailSelected}\n              onSend={send}\n            />\n          )}\n        </div>\n      </Route>\n      <Route exact path={`${path}/new`}>\n        <InvoiceNew updateInvoice={updateInvoice} />\n      </Route>\n      <Route path={`${path}/:invoiceId`}>\n        <InvoiceDetail updateInvoice={updateInvoice} />\n      </Route>\n    </Switch>\n  );\n};\n","export { default } from \"./Invoices\";\n"],"sourceRoot":""}