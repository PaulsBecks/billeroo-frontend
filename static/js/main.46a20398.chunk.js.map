{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","hooks/useCompany.js","hooks/useInvoices.js","hooks/useArticles.js","hooks/useAuthors.js","components/Customers.js","components/Article.js","services/formatDate.js","services/calculateTotalPrice.js","components/Articles/Articles.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePage.js","components/Invoice.js","components/Invoices.js","components/DropZone.js","components/Company.js","components/Author/Author.js","components/Authors/Authors.js","migration/authors.js","migration/useMigrationWrapper.js","hooks/useMigration.js","migration/index.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","authors","addition","address","postCode","city","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","firstAddress","phone","secondAddress","firstEmail","secondEmail","taxNumber","taxOffice","bank","iban","bic","logo","contact","books","useCompany","companySceleton","useInvoices","useArticles","useAuthors","customers","Table","celled","Header","Row","HeaderCell","Body","map","c","Cell","Article","article","setArticle","articlePrice","setArticlePrice","authorSearch","setAuthorSearch","filteredAuthors","useMemo","filter","a","includes","handleArticleChange","e","parseFloat","isNaN","toFixed","Form","Group","width","Field","id","control","Input","label","placeholder","onChange","type","icon","onBlur","target","Label","onClick","author","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","setArticles","invoiceArticle","setInvoiceArticle","invoices","filteredInvoices","reduce","list","i","className","Button","articleSceleton","length","primary","Modal","onClose","open","Content","Actions","content","negative","labelPosition","_articles","invoice","customer","paymentDate","pos","undefined","deleteArticle","setInvoice","setInvoices","setCustomers","customerSceleton","setCustomer","newCustomer","setNewCustomer","customerSearch","setCustomerSearch","articleAmount","setArticleAmount","articleSearch","setArticleSearch","newArticle","setNewArticle","setPorto","updateInvoice","checked","toggleNewArticle","filteredCustomers","toLowerCase","filteredArticles","handleCustomerChange","updateArticleAmount","amountChange","addArticleToInvoice","toggleNewCustomer","updateInvoiceDate","Container","Card","fluid","Accordion","Title","index","Icon","active","fc","Detail","selected","v","DatePicker","dateFormat","TextArea","Checkbox","payed","toggle","updateInvoiceArticles","mul","totalPrice","total","x","calculateTotalPrice","_invoices","PrintButton","fileName","style","height","px","mm","start","end","input","document","getElementById","inputHeightMm","offsetHeight","Math","floor","a4HeightPx","numPages","a4HeightMm","range","Array","join","split","val","comp","inputHeightPx","html2canvas","scale","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","Page","children","singleMode","SinglePage","company","articles_net_price","companyColor","borderColor","src","alt","multiple","parseInt","totalPriceWithDiscount","net","ustNr","invoiceSelected","setInvoiceSelected","Invoice","invoiceSceleton","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","isDragAccept","isDragReject","getRootProps","getInputProps","event","stopPropagation","Company","setCompany","updateCompany","updateFirstAddress","updateSecondAddress","Segment","files","file","reader","FileReader","onload","result","readAsDataURL","postcode","Author","setAuthor","percent","authorPrice","setAuthorPrice","handleAuthorChange","Authors","setAuthors","authorSceleton","_authors","deleteAuthor","useAddAuthorsToArticles","migrate","version","currentVersion","setCurrentVersion","useMigrationWrapper","useMigration","render","Tab","panes","menuItem","Invoices","Customers"],"mappings":"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","file":"static/js/main.46a20398.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  name: \"\",\n  empty: true,\n  price: \"\",\n  isbn: \"\",\n  amount: 1,\n  authors: [],\n};\n","export default {\n  name: \"\",\n  addition: \"\",\n  address: \"\",\n  postCode: \"\",\n  city: \"\",\n  discount: 0,\n  ust: 7\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5.00\",\n  finalText: \"\",\n  articles: []\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  firstAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\",\n  },\n  secondAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\",\n  },\n  firstEmail: \"\",\n  secondEmail: \"\",\n  taxNumber: \"\",\n  taxOffice: \"\",\n  bank: \"\",\n  iban: \"\",\n  bic: \"\",\n  logo: \"\",\n  finalText: \"\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  books: [],\n};\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\n\nexport default function useCompany() {\n  return useLocalStorage(\"company\", companySceleton);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useInvoices() {\n  return useLocalStorage(\"invoices\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useArticles() {\n  return useLocalStorage(\"articles\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useAuthors() {\n  return useLocalStorage(\"authors\", []);\n}\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [customers] = useLocalStorage(\"customers\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Adresse</Table.HeaderCell>\n          <Table.HeaderCell>PLZ</Table.HeaderCell>\n          <Table.HeaderCell>Stadt</Table.HeaderCell>\n          <Table.HeaderCell>Rabatt</Table.HeaderCell>\n          <Table.HeaderCell>MwST</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {customers.map((c) => (\n          <Table.Row>\n            <Table.Cell>{c.name}</Table.Cell>\n            <Table.Cell>{c.address}</Table.Cell>\n            <Table.Cell>{c.postCode}</Table.Cell>\n            <Table.Cell>{c.city}</Table.Cell>\n            <Table.Cell>{c.discount}</Table.Cell>\n            <Table.Cell>{c.ust}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\n\nimport { Form, Input, Label } from \"semantic-ui-react\";\nimport { useAuthors } from \"../hooks\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n  const [authorSearch, setAuthorSearch] = useState(\"\");\n  const [authors] = useAuthors();\n\n  const filteredAuthors = useMemo(() => {\n    return authors.filter((a) => a && a.name.includes(authorSearch));\n  }, [authors, authorSearch]);\n\n  function addAuthorToArticle(author) {\n    setArticle({ ...article, authors: [...article.authors, author] });\n  }\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setArticlePrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={(e) => {\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n      <div>\n        <label>\n          <b>Autoren</b>\n        </label>\n        <div>\n          {article.authors.map((a) => (\n            <Label>{a.name}</Label>\n          ))}\n        </div>\n        <Input\n          name=\"author\"\n          placeholder=\"Suche...\"\n          value={authorSearch}\n          onChange={(e, { value }) => setAuthorSearch(value)}\n        />\n        {authorSearch !== \"\" && (\n          <div>\n            {filteredAuthors.map((a) => (\n              <Label onClick={() => addAuthorToArticle(a)}>{a.name}</Label>\n            ))}\n          </div>\n        )}\n      </div>\n    </Form>\n  );\n}\n","export default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return `${day < 10 ? \"0\" + day : day}.${\n    month < 10 ? \"0\" + month : month\n  }.${date.getFullYear()}`;\n}\n","export default invoice =>\n  invoice.articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React, { useState, useMemo } from \"react\";\nimport { useArticles, useInvoices } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\nimport { formatDate } from \"../../services\";\n\nexport default () => {\n  const [articles, setArticles] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const [invoices] = useInvoices();\n  const filteredInvoices = useMemo(() => {\n    if (!invoiceArticle) {\n      return null;\n    }\n    return invoices.reduce((list, i) => {\n      for (let a in i.articles) {\n        const article = i.articles[a];\n        if (article.id === invoiceArticle.id) {\n          return [\n            ...list,\n            {\n              ...i,\n              article,\n            },\n          ];\n        }\n      }\n      return list;\n    }, []);\n  }, [invoices, invoiceArticle]);\n  const updateArticle = () => {\n    let _articles = [...articles];\n    _articles[article.id] = article;\n    setArticles(_articles);\n    setArticle();\n  };\n\n  const deleteArticle = (pos) => {\n    const _articles = [...articles];\n    _articles[pos] = undefined;\n    setArticles(_articles);\n  };\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articles.length })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Edit Article</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateArticle}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                  <Table.HeaderCell>Zahlungsdatum</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {filteredInvoices.map((invoice) => (\n                  <Table.Row>\n                    <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                    <Table.Cell>{invoice.customer.name}</Table.Cell>\n                    <Table.Cell>{invoice.article.amount}</Table.Cell>\n                    <Table.Cell>{invoice.article.price}</Table.Cell>\n                    <Table.Cell>{formatDate(invoice.paymentDate)}</Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Menge</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>{a.amount}</Table.Cell>\n                  <Table.Cell>{a.price}</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button onClick={() => setArticle(a)} icon=\"edit\"></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                    ></Button>\n                    <Button\n                      onClick={() => deleteArticle(i)}\n                      icon=\"delete\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"../../hooks\";\nimport {\n  Accordion,\n  Container,\n  Form,\n  Icon,\n  Input,\n  Card,\n  Modal,\n  Label,\n  Button,\n  Checkbox,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport { calculateTotalPrice } from \"../../services\";\nimport Article from \"../Article\";\n\nexport default ({ invoice, setInvoice, setInvoices }) => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState({\n    ...customerSceleton,\n    id: customers.length,\n  });\n  const [newCustomer, setNewCustomer] = useState(undefined);\n  const [customerSearch, setCustomerSearch] = useState(\"\");\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articles.length,\n  });\n  const [articleAmount, setArticleAmount] = useState(1);\n  const [articleSearch, setArticleSearch] = useState(\"\");\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [invoices] = useLocalStorage(\"invoices\", []);\n  const [porto, setPorto] = useState(invoice.porto);\n\n  const updateInvoice = (e, { name, value, checked }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setPorto(value);\n    }\n    if (name === \"payed\") {\n      value = checked;\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const filteredCustomers = useMemo(\n    () =>\n      customers.filter((c) =>\n        c.name.toLowerCase().includes(customerSearch.toLowerCase())\n      ),\n    [customers, customerSearch]\n  );\n\n  const filteredArticles = useMemo(\n    () =>\n      articles.filter((a) =>\n        a.name.toLowerCase().includes(articleSearch.toLowerCase())\n      ),\n    [articles, articleSearch]\n  );\n\n  const addNewCustomer = () => {\n    setCustomers([...customers, customer]);\n    setInvoice({ ...invoice, customer });\n    toggleNewCustomer();\n  };\n\n  const removeCustomer = () => {\n    setInvoice({ ...invoice, customer: undefined });\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const updateArticleAmount = (id, amountChange) => {\n    let _articles = [...articles];\n    const article = _articles[id];\n    _articles[id] = {\n      ...article,\n      amount: parseFloat(article.amount) + amountChange,\n    };\n    setArticles(_articles);\n  };\n\n  const addArticleToInvoice = (article) => {\n    setInvoice({\n      ...invoice,\n      articles: [...invoice.articles, { ...article, amount: articleAmount }],\n    });\n    setArticle();\n    setArticleAmount(1);\n  };\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    addArticleToInvoice(article);\n    toggleNewArticle();\n  };\n\n  const removeArticle = (pos) => {\n    setInvoice({\n      ...invoice,\n      articles: invoice.articles.filter((a, i) => i !== pos),\n    });\n  };\n\n  const toggleNewCustomer = () => {\n    setNewCustomer(!newCustomer);\n  };\n\n  const saveInvoice = () => {\n    const updateInvoiceArticles = (invoice, mul = 1) => {\n      if (invoice) {\n        for (let a in invoice.articles) {\n          updateArticleAmount(\n            invoice.articles[a].id,\n            mul * invoice.articles[a].amount\n          );\n        }\n      }\n    };\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    updateInvoiceArticles(invoices[invoice.id]);\n    _invoices[invoice.id] = invoice;\n    updateInvoiceArticles(_invoices[invoice.id], -1);\n    setInvoices(_invoices);\n    setInvoice();\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  console.log(invoice);\n\n  return (\n    <div className=\"invoice-form\">\n      <Container>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Rechnungsdaten</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Accordion>\n              <Accordion.Title index={0}>\n                <Icon name=\"dropdown\" />\n                Kunde\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                {invoice.customer ? (\n                  <div className=\"invoice-form-label-container\">\n                    <Label>\n                      {invoice.customer.name}\n                      <Icon name=\"delete\" onClick={removeCustomer} />\n                    </Label>\n                  </div>\n                ) : (\n                  <div>\n                    <Input\n                      placeholder=\"Suche...\"\n                      onChange={(e, { value }) => setCustomerSearch(value)}\n                      value={customerSearch}\n                    />\n                    {customerSearch === \"\" ? (\n                      <Button onClick={toggleNewCustomer}>Neuer Kunde</Button>\n                    ) : (\n                      <div className=\"invoice-form-label-container\">\n                        {filteredCustomers.map((fc) => (\n                          <Label\n                            onClick={() =>\n                              setInvoice({ ...invoice, customer: fc })\n                            }\n                          >\n                            {fc.name}\n                          </Label>\n                        ))}\n                        {filteredCustomers.length === 0 && (\n                          <p>No Customers found.</p>\n                        )}\n                      </div>\n                    )}\n\n                    <Modal open={newCustomer} onClose={toggleNewCustomer}>\n                      <Modal.Header>Neuer Kunde</Modal.Header>\n                      <Modal.Content>\n                        <Form>\n                          <Form.Group width=\"equal\">\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Name\"\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              onChange={handleCustomerChange}\n                              value={customer.name}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Zusatz\"\n                              placeholder=\"Zusatz\"\n                              name=\"addition\"\n                              onChange={handleCustomerChange}\n                              value={customer.addition}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Anschrift\"\n                              placeholder=\"Musterschstraße 3\"\n                              name=\"address\"\n                              onChange={handleCustomerChange}\n                              value={customer.address}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"PLZ\"\n                              placeholder=\"PLZ\"\n                              name=\"postCode\"\n                              onChange={handleCustomerChange}\n                              value={customer.postCode}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Stadt\"\n                              placeholder=\"Stadt\"\n                              name=\"city\"\n                              onChange={handleCustomerChange}\n                              value={customer.city}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"MwST\"\n                              placeholder=\"7\"\n                              name=\"ust\"\n                              icon=\"percent\"\n                              onChange={handleCustomerChange}\n                              value={customer.ust}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Rabat\"\n                              placeholder=\"0\"\n                              icon=\"percent\"\n                              name=\"discount\"\n                              onChange={handleCustomerChange}\n                              value={customer.discount}\n                            />\n                          </Form.Group>\n                        </Form>\n                      </Modal.Content>\n                      <Modal.Actions>\n                        <Button\n                          onClick={toggleNewCustomer}\n                          content=\"Abbrechen\"\n                          negative\n                          icon=\"close\"\n                          labelPosition=\"right\"\n                        ></Button>\n                        <Button\n                          onClick={addNewCustomer}\n                          content=\"Anlegen\"\n                          primary\n                          icon=\"check\"\n                          labelPosition=\"right\"\n                        ></Button>\n                      </Modal.Actions>\n                    </Modal>\n                  </div>\n                )}\n              </Accordion.Content>\n              <Accordion.Title index={1}>\n                <Icon name=\"dropdown\" />\n                Artikel\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <div className=\"invoice-form-label-container\">\n                  {invoice.articles.map((a, i) => {\n                    return (\n                      <Label>\n                        {a.name}\n                        <Label.Detail>{a.articleAmount}</Label.Detail>\n                        <Icon\n                          name=\"delete\"\n                          onClick={() => removeArticle(i)}\n                        ></Icon>\n                      </Label>\n                    );\n                  })}\n                </div>\n                <div>\n                  <Input\n                    name=\"amount\"\n                    type=\"number\"\n                    label=\"Menge\"\n                    value={articleAmount}\n                    onChange={(e, { value }) => setArticleAmount(value)}\n                  />\n\n                  <Input\n                    name=\"article\"\n                    placeholder=\"Suche...\"\n                    value={articleSearch}\n                    onChange={(e, { value }) => setArticleSearch(value)}\n                  />\n                  {articleSearch === \"\" ? (\n                    <Button onClick={toggleNewArticle}>Neuer Artikel</Button>\n                  ) : (\n                    <div className=\"invoice-form-label-container\">\n                      {filteredArticles.map((a) => (\n                        <Label onClick={() => addArticleToInvoice(a)}>\n                          {a.name}\n                        </Label>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle}>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      primary\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </Accordion.Content>\n              <Accordion.Title>\n                <Icon name=\"dropdown\" />\n                Allgemein\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <Form>\n                  <Form.Field\n                    label=\"Rechnungsdatum\"\n                    name=\"invoiceDate\"\n                    selected={new Date(invoice.invoiceDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Bestelldatum\"\n                    name=\"orderDate\"\n                    selected={new Date(invoice.orderDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Versanddatum\"\n                    name=\"shippingDate\"\n                    selected={new Date(invoice.shippingDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Porto\"\n                    value={porto}\n                    name=\"porto\"\n                    onChange={(e, { value }) => setPorto(value)}\n                    control={Input}\n                    onBlur={(e) =>\n                      updateInvoice(e, {\n                        name: e.target.name,\n                        value: e.target.value,\n                      })\n                    }\n                    icon=\"euro\"\n                  />\n                  <Form.Field\n                    label=\"Rechnungsnummer\"\n                    name=\"invoiceNumber\"\n                    value={invoice.invoiceNumber}\n                    onChange={updateInvoice}\n                    control={Input}\n                  />\n                  <Form.TextArea\n                    label=\"Freitext\"\n                    value={invoice.finalText}\n                    onChange={updateInvoice}\n                    name=\"finalText\"\n                  />\n                  <Form.Field>\n                    <label>Bezahlt</label>\n                    <Checkbox\n                      onChange={(e, { name, checked }) => {\n                        if (checked) {\n                          setInvoice({\n                            ...invoice,\n                            [name]: checked,\n                            paymentDate: new Date(),\n                          });\n                        } else {\n                          setInvoice({\n                            ...invoice,\n                            [name]: checked,\n                            paymentDate: undefined,\n                          });\n                        }\n                      }}\n                      name=\"payed\"\n                      checked={invoice.payed}\n                      toggle\n                    />\n                  </Form.Field>\n                  {invoice.payed && (\n                    <Form.Field\n                      label=\"Zahlungseingangsdatum\"\n                      name=\"paymentDate\"\n                      selected={new Date(invoice.paymentDate)}\n                      onChange={(v) => updateInvoiceDate(v, \"paymentDate\")}\n                      control={DatePicker}\n                      dateFormat=\"dd/MM/yyyy\"\n                    />\n                  )}\n                </Form>\n              </Accordion.Content>\n            </Accordion>\n          </Card.Content>\n        </Card>\n        <Button\n          onClick={() => setInvoice()}\n          content=\"Abbrechen\"\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n        ></Button>\n        {invoice.customer && (\n          <Button\n            onClick={saveInvoice}\n            content=\"Speichern\"\n            primary\n            icon=\"check\"\n            labelPosition=\"right\"\n          ></Button>\n        )}\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function(val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <div className=\"tc mb4 mt2\">\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div id=\"myMm\" style={{ height: \"1mm\" }} />\n\n    <div\n      className=\"pa2 ba bw1 b--black bg-yellow black-90 br2 dib pointer dim shadow-1\"\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input, { scale: 1 }).then(canvas => {\n          const imgData = canvas.toDataURL(\"image/png\", 1);\n          let pdf;\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            pdf = new jsPDF();\n          }\n\n          pdf.addImage(imgData, \"PNG\", 0, 0);\n          pdf.save(`${fileName}.pdf`);\n        });\n\n        ////////////////////////////////////////////////////////\n        // System to manually handle page breaks\n        // Wasn't able to get it working !\n        // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\n        // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\n        ////////////////////////////////////////////////////////\n        // range(0, numPages).forEach((page) => {\n        //   console.log(`Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page*a4HeightPx}`);\n        //   html2canvas(input, {height: a4HeightPx, y: page*a4HeightPx})\n        //     .then((canvas) => {\n        //       const imgData = canvas.toDataURL('image/png');\n        //       console.log(imgData)\n        //       if (page > 0) {\n        //         pdf.addPage();\n        //       }\n        //       pdf.addImage(imgData, 'PNG', 0, 0);\n        //     });\n        //   ;\n        // });\n\n        // setTimeout(() => {\n        //   pdf.save(`${id}.pdf`);\n        // }, 5000);\n      }}\n    >\n      {label}\n    </div>\n  </div>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate } from \"../../services\";\nimport { useCompany } from \"../../hooks\";\nimport { Button } from \"semantic-ui-react\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    finalText,\n    customer,\n    articles = [],\n  },\n}) => {\n  const [company] = useCompany();\n  const articles_net_price = articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      const totalPriceWithDiscount =\n        totalPrice - totalPrice * (customer.discount / 100);\n      const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div\n        className=\"invoice-folding-line\"\n        style={\n          company.companyColor ? { borderColor: company.companyColor } : {}\n        }\n      />\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <img\n            className=\"invoice-header-company-logo\"\n            src={company.logo}\n            alt=\"company logo\"\n          />\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <div className=\"invoice-header-customer-company\">\n                {company.name} • {company.firstAddress.address} •{\" \"}\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </div>\n              {customer ? (\n                <div className=\"invoice-header-customer-info\">\n                  <p>\n                    <b>{customer.name}</b>\n                  </p>\n                  <p className=\"invoice-header-customer-info-name\">\n                    <b>{customer.addition}</b>\n                  </p>\n                  <p>\n                    <b>{customer.address}</b>\n                  </p>\n                  <p>\n                    <b>\n                      {customer.postCode} {customer.city}\n                    </b>\n                  </p>\n                </div>\n              ) : (\n                <Button>Kunde hinzufügen</Button>\n              )}\n            </div>\n            <div className=\"invoice-header-company-info\">\n              <p>{company.name}</p>\n              <p>{company.executive}</p>\n              <br />\n              <p>{company.firstAddress.name}</p>\n              <p>{company.firstAddress.address}</p>\n              <p>\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </p>\n              <p>Telefon {company.firstAddress.phone}</p>\n              <br />\n              <p>{company.secondAddress.name}</p>\n              <p>{company.secondAddress.address}</p>\n              <p>\n                {company.secondAddress.postCode} {company.secondAddress.city}\n              </p>\n              <p>Telefon {company.secondAddress.phone}</p>\n              <br />\n              <p>{company.firstEmail}</p>\n              <p>{company.secondEmail}</p>\n              <br />\n              <p>Steuernummer {company.taxNumber}</p>\n              <p>{company.taxOffice}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <h4>Rechnung</h4>\n              <p>Wir erlauben uns in Rechnung zu stellen:</p>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versand am:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>\n                        {customer.name} • {customer.addition}\n                      </b>\n                    </p>\n                    <p>\n                      <b>\n                        {customer.address} • {customer.postCode} {customer.city}\n                      </b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-top-right\">\n              <div className=\"invoice-body-invoice-date\">\n                <p>\n                  Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-nr\">\n                <p>\n                  Rechnungsnummer: <b>{invoiceNumber}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlungen angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-article-wrapper\">\n            {articles.map(({ amount, price, name, isbn }) => {\n              const multiple = parseInt(amount) > 1;\n              const totalPrice = price * amount;\n              const totalPriceWithDiscount =\n                totalPrice - totalPrice * (customer.discount / 100);\n              const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n              return (\n                <div className=\"invoice-body-article\">\n                  <div className=\"invoice-body-article-left\">\n                    <div className=\"invoice-body-article-description\">\n                      <div>\n                        <b>\n                          {amount} Exemplar\n                          {multiple && \"e\"}\n                        </b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">\n                        <b>„{name}“</b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">{isbn}</div>\n                    </div>\n                    <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                      multiple ? \"je\" : \"\"\n                    } ${price} €${\n                      multiple ? ` = ${totalPrice.toFixed(2)}€` : \"\"\n                    }${\n                      customer.discount > 0\n                        ? `, abzüglich ${\n                            customer.discount\n                          } % Rabatt = ${totalPriceWithDiscount.toFixed(2)} €`\n                        : \"\"\n                    } (beinhaltet ${customer.ust} % MwST = ${(\n                      totalPriceWithDiscount - net\n                    ).toFixed(2)})`}</div>\n                  </div>\n                  <div className=\"invoice-body-article-price\">\n                    <b>{articles.length > 1 && `${net.toFixed(2)} €`}</b>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"invoice-body-price-calculation\">\n            <div>\n              <p>Netto</p>\n              <p>\n                <b>{articles_net_price.toFixed(2)} €</b>\n              </p>\n            </div>\n            <div>\n              <p>Versandkosten</p>\n              <p>\n                <b>{porto} €</b>\n              </p>\n            </div>\n            <div>\n              <p>{`+${customer.ust}% Mehrwertsteuer`}</p>\n              <p>\n                <b>\n                  {(\n                    ((articles_net_price + parseFloat(porto)) *\n                      parseFloat(customer.ust)) /\n                    100\n                  ).toFixed(2)}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n          </div>\n          <div className=\"invoice-body-price\">\n            <p>Rechnungsbetrag</p>\n            <p>\n              <b>\n                {(\n                  (articles_net_price + parseFloat(porto)) *\n                  (1 + parseFloat(customer.ust) / 100)\n                ).toFixed(2)}{\" \"}\n                €\n              </b>\n            </p>\n          </div>\n          <div>\n            <p className=\"invoice-body-final-text\">{finalText}</p>\n          </div>\n        </div>\n        <div\n          className=\"invoice-footer\"\n          style={\n            company.companyColor ? { borderColor: company.companyColor } : {}\n          }\n        >\n          <div className=\"invoice-footer-executive\">\n            <b>Geschäftsführung</b> {company.executive}\n          </div>\n          <div className=\"invoice-footer-bank-account\">\n            <b>Bankverbindung</b> {company.bank} • IBAN {company.iban} • BIC{\" \"}\n            {company.bic}\n          </div>\n          <div className=\"invoice-footer-tax\">\n            <b>Steuernummer</b> {company.taxNumber} | <b>USt-IdNr.</b>{\" \"}\n            {company.ustNr}\n          </div>\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\n\nimport InvoiceForm from \"./InvoiceForm\";\nimport PrintButton from \"./PrintButton\";\nimport SinglePage from \"./SinglePage/SinglePage\";\n\nexport default ({ invoice, setInvoice, setInvoices }) => {\n  return (\n    <div className=\"invoice-page\">\n      <div className=\"invoice-form-wrapper\">\n        <InvoiceForm\n          invoice={invoice}\n          setInvoice={setInvoice}\n          setInvoices={setInvoices}\n        />\n      </div>\n      {invoice.customer && (\n        <div className=\"invoice-page-wrapper\">\n          <PrintButton\n            id={\"singlePage\"}\n            label={\"Rechnung Drucken\"}\n            fileName={invoice.invoiceNumber}\n          />\n          <SinglePage id={\"singlePage\"} invoice={invoice} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useCompany, useInvoices } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport { invoice as invoiceSceleton } from \"../sceletons\";\nimport { formatDate } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice\n        invoice={invoiceSelected}\n        setInvoice={setInvoiceSelected}\n        setInvoices={setInvoices}\n      />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoices.length,\n            finalText: company.finalText,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell>Zahlungseingang</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map((i) => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map((a) => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{i.totalPrice.toFixed(2)}€</Table.Cell>\n              <Table.Cell>\n                {i.paymentDate ? formatDate(i.paymentDate) : \"Ausstehend\"}\n              </Table.Cell>\n              <Table.Cell>\n                <Button icon onClick={() => setInvoiceSelected(i)}>\n                  <Icon name=\"eye\"></Icon>\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const { isDragActive, isDragAccept, isDragReject } = useDropzone({\n    accept: \"image/*\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: (event) => event.stopPropagation(),\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { company as companySceleton } from \"../sceletons\";\nimport DropZone from \"./DropZone\";\n\nexport default function Company() {\n  const [company, setCompany] = useLocalStorage(\"company\", companySceleton);\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const updateFirstAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      firstAddress: { ...company.firstAddress, [name]: value },\n    });\n  };\n\n  const updateSecondAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      secondAddress: { ...company.secondAddress, [name]: value },\n    });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n        <Segment>\n          <h4>Logo</h4>\n          {company.logo !== \"\" ? (\n            <div>\n              <img src={company.logo} alt=\"company logo\" />\n              <Button\n                negative\n                onClick={() => setCompany({ ...company, logo: \"\" })}\n              >\n                Löschen\n              </Button>\n            </div>\n          ) : (\n            <DropZone onDrop={onDropHandler} />\n          )}\n        </Segment>\n        <Form.Field\n          label=\"Firmenführung\"\n          control={Input}\n          name=\"executive\"\n          onChange={updateCompany}\n          value={company.executive}\n        />\n        <Segment>\n          <h4>Erste Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Segment>\n          <h4>Zweite Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Form.Field\n          label=\"1. Email\"\n          control={Input}\n          name=\"firstEmail\"\n          onChange={updateCompany}\n          value={company.firstEmail}\n        />\n        <Form.Field\n          label=\"2. Email\"\n          control={Input}\n          name=\"secondEmail\"\n          onChange={updateCompany}\n          value={company.secondEmail}\n        />\n        <Form.Field\n          label=\"Steuernummer\"\n          control={Input}\n          name=\"taxNumber\"\n          onChange={updateCompany}\n          value={company.taxNumber}\n        />\n        <Form.Field\n          label=\"Finanzamt\"\n          control={Input}\n          name=\"taxOffice\"\n          onChange={updateCompany}\n          value={company.taxOffice}\n        />\n        <Form.Field\n          label=\"Ust-Nr.\"\n          control={Input}\n          name=\"ustNr\"\n          onChange={updateCompany}\n          value={company.ustNr}\n        />\n        <Segment>\n          <h4>Bankinformationen</h4>\n          <Form.Field\n            label=\"Bank\"\n            control={Input}\n            name=\"bank\"\n            onChange={updateCompany}\n            value={company.bank}\n          />\n          <Form.Field\n            label=\"IBAN\"\n            control={Input}\n            name=\"iban\"\n            onChange={updateCompany}\n            value={company.iban}\n          />\n          <Form.Field\n            label=\"BIC\"\n            control={Input}\n            name=\"bic\"\n            onChange={updateCompany}\n            value={company.bic}\n          />\n        </Segment>\n        <Form.Field>\n          <Form.TextArea\n            label=\"Standard Freitext\"\n            value={company.finalText}\n            onChange={updateCompany}\n            name=\"finalText\"\n          />\n        </Form.Field>\n        <Form.Field\n          label=\"Farbe\"\n          control={Input}\n          placeholder=\"z.B. #ffffff oder rgb(120,0,0)\"\n          name=\"companyColor\"\n          onChange={updateCompany}\n          value={company.color}\n        />\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\n\nexport default function Author({ author, setAuthor }) {\n  const [authorPrice, setAuthorPrice] = useState(author.percent);\n\n  const handleAuthorChange = (e, { name, value }) => {\n    if (name === \"percent\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setAuthorPrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setAuthorPrice(value);\n    }\n    setAuthor({ ...author, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleAuthorChange}\n          value={author.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Kontakt\"\n          placeholder=\"Tel, Email, ...\"\n          onChange={handleAuthorChange}\n          name=\"contact\"\n          value={author.contact}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Prozent\"\n          placeholder=\"Prozent\"\n          name=\"percent\"\n          icon=\"percent\"\n          onChange={(e, { value }) => setAuthorPrice(value)}\n          onBlur={(e) => {\n            handleAuthorChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={authorPrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\n\nexport default function Authors() {\n  const [authors, setAuthors] = useAuthors();\n  const [author, setAuthor] = useState();\n\n  function deleteAuthor(id) {\n    const _authors = [...authors];\n    _authors[id] = undefined;\n    setAuthors(_authors);\n  }\n\n  function updateAuthors(id) {\n    const _authors = [...authors];\n    _authors[author.id] = author;\n    setAuthors(_authors);\n    setAuthor();\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ authorSceleton, id: authors.length })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateAuthors}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button onClick={() => setAuthor(a)} icon=\"eye\"></Button>\n                    <Button\n                      onClick={() => deleteAuthor(i)}\n                      icon=\"delete\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import useMigrationWrapper from \"./useMigrationWrapper\";\nimport { useArticles } from \"../hooks\";\n\nconst VERSION = 2;\n\nfunction useAddAuthorsToArticles() {\n  const [articles, setArticles] = useArticles();\n\n  setArticles(articles.map((a) => ({ ...a, authors: [] })));\n}\n\nexport default () => useMigrationWrapper(useAddAuthorsToArticles, VERSION);\n","import { useLocalStorage } from \"../hooks\";\n\nexport default function useMigrationWrapper(migrate, version) {\n  const [currentVersion, setCurrentVersion] = useLocalStorage(\"version\", \"1\");\n  if (parseInt(currentVersion) < version) {\n    migrate();\n  }\n  setCurrentVersion(version);\n}\n","import migration from \"../migration\";\n\nexport default function useMigration() {\n  migration();\n}\n","import authors from \"./authors\";\n\nexport default function migration() {\n  authors();\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport { Tab, Container } from \"semantic-ui-react\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Company from \"./components/Company\";\nimport Authors from \"./components/Authors/Authors\";\nimport useMigration from \"./hooks/useMigration\";\n\nconst App = () => {\n  useMigration();\n\n  return (\n    <div className=\"invoice-app-container\">\n      <Container>\n        <Tab\n          panes={[\n            {\n              menuItem: \"Rechnungen\",\n              render: () => (\n                <div className=\"\">\n                  <Invoices />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Kunden\",\n              render: () => (\n                <div className=\"\">\n                  <Customers />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Artikel\",\n              render: () => (\n                <div className=\"\">\n                  <Articles />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Autoren\",\n              render: () => (\n                <div className=\"\">\n                  <Authors />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Firma\",\n              render: () => (\n                <div className=\"\">\n                  <Company />\n                </div>\n              ),\n            },\n          ]}\n        />\n      </Container>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}