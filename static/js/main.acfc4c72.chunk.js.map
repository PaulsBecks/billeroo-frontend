{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","config/production.js","config/index.js","services/backend/postData.js","services/backend/getData.js","hooks/useCompany.js","hooks/useInvoices.js","hooks/useArticles.js","hooks/useAuthors.js","hooks/useCustomers.js","hooks/useGA.js","components/Editor/Editor.js","components/CustomerForm/CustomerForm.js","components/Customers.js","services/formatDate.js","services/parsePrice.js","services/formatPrice.js","components/Author/Author.js","components/Article.js","components/Articles/Articles.js","hooks/useInvoiceStats.js","components/DropZone.js","components/CompanyForm.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePageOverlay.js","components/SinglePage/SinglePage.js","components/Invoice/Invoice.js","services/calculateTotalPrice.js","components/Invoices.js","components/Authors/Authors.js","pages/Home/Home.js","services/backend/login.js","services/backend/register.js","services/localStorage/dataToLocalStorage.js","services/localStorage/dataFromLocalStorage.js","components/TopNavigationBar/TopNavigationBar.js","hooks/useUser.js","components/Footer/Footer.js","pages/Landing/index.js","pages/FAQ/FAQ.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","authors","invoiceAddress","shippingAddress","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","logo","aboveClientInvoiceAddress","footerText","invoiceText","subjectAndBelow","contactInformation","contact","percent","books","backendURL","production","url","config","postData","data","a","user","token","jwt","Axios","post","headers","Authorization","result","getData","get","useCompany","companySceleton","company","setCompany","useEffect","fetchData","useInvoices","invoices","setLocalStorageInvoices","addInvoice","useCallback","invoice","_invoices","removeInvoice","invoiceId","undefined","updateInvoice","id","filter","i","length","useArticles","setLocalStorageArticles","addArticle","article","_articles","removeArticle","articleId","updateArticle","getArticleById","useAuthors","setLocalStorageAuthors","addAuthor","author","_authors","removeAuthor","authorId","updateAuthor","getAuthorById","useCustomers","customers","setLocalStorageCustomers","addCustomer","customer","_customers","removeCustomer","customerId","updateCustomer","getCustomerById","c","useGA","history","useHistory","ReactGA","pageview","location","pathname","search","initialize","Editor","props","active","setActive","onFocus","onBlur","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","className","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","CustomerForm","setCustomer","RichTextEditor","createValueFromString","setInvoiceAddress","setShippingAddress","updateAddresses","handleCustomerChange","e","parseFloat","isNaN","updateRichtext","Form","Group","Field","control","Input","onChange","placeholder","icon","customersLength","Button","onClick","customerSceleton","primary","Modal","onClose","open","Header","Content","Actions","content","negative","labelPosition","Table","celled","Row","HeaderCell","Body","map","Cell","dangerouslySetInnerHTML","__html","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","parsePrice","replace","formatPrice","toFixed","Author","setAuthor","authorPrice","setAuthorPrice","handleAuthorChange","width","target","Article","setArticle","articlePrice","setArticlePrice","authorsLength","handleArticleChange","authorOptions","text","concat","type","Dropdown","selection","options","authorSceleton","Segment","articlesLength","invoiceArticle","setInvoiceArticle","invoiceStats","useMemo","reduce","stats","aId","totalSold","totalSend","parseInt","toBePayed","toBeSend","push","send","payed","customerName","useInvoiceStats","articleSceleton","positive","paymentDate","secondary","baseStyle","flex","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","isDragAccept","isDragReject","getRootProps","getInputProps","event","stopPropagation","CompanyForm","selected","setFooterText","setSubjectAndBelow","setInvoiceText","setContactInformation","setAboveClientInvoiceAddress","updateRichText","updateCompany","src","alt","files","file","reader","FileReader","onload","readAsDataURL","setInvoice","formSelected","wrapperClass","setFormSelected","addToArticles","selectedArticles","setSelectedArticles","setToBePayed","setToBeSend","newArticle","setNewArticle","setPorto","checked","toggleNewArticle","updateInvoiceDate","customerOptions","articlesOptions","slice","_selectedArticles","closeIcon","Card","fluid","widths","v","DatePicker","dateFormat","Checkbox","toggle","PrintButton","fileName","input","document","getElementById","html2canvas","scale","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","Page","children","singleMode","height","SinglePageOverlay","SinglePage","articles_net_price","totalPrice","total","x","companyColor","multiple","totalPriceWithDiscount","net","edit","onSave","newInvoice","Message","info","header","calculateTotalPrice","invoicesLength","invoiceSelected","setInvoiceSelected","invoiceSceleton","Authors","deleteAuthor","Home","login","status","message","register","response","dataToLocalStorage","dataFromLocalStorage","TopNavigationBar","email","password","loginValues","setLoginValues","modalIsOpen","setModalIsOpen","setUser","modalUse","setModalUse","setError","size","href","Icon","Footer","to","LandingPage","openNewInvoice","unstackable","FAQ","Accordion","defaultActiveIndex","panels","title","render","exact","path","Invoices","Customers"],"mappings":"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","file":"static/js/main.acfc4c72.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  name: \"\",\n  empty: true,\n  price: \"20,00\",\n  isbn: \"\",\n  amount: 1,\n  authors: [],\n};\n","export default {\n  name: \"Max Mustermann\",\n  invoiceAddress:\n    \"<p>musterdomain.de<br/>\\\n  Muster Firma GbR<br/>\\\n  Musterstraße 2<br/>\\\n  15366 Musterstadt</p>\",\n  shippingAddress:\n    \"<p>musterdomain.de • Muster Firma GbR<br/>\\\n  Musterstraße 2 • 15366 Musterstadt</p>\",\n  discount: 0,\n  ust: 7,\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5,00\",\n  finalText: \"\",\n  articles: [],\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  logo: \"\",\n  aboveClientInvoiceAddress:\n    \"<p>Verlag GbR • Musterstraße 12 • 10405 Musterstadt</p>\",\n  footerText:\n    \"<p><b>Geschäftsführung</b> Max Mustermann<br/>\\\n  <b>Bankverbindung</b> Postbank • IBAN DE 00 0000 0000 0000 00 • BIC ABCDEFGHIJKL<br/>\\\n  <b>Steuernummer</b> 000/000/00000 | <b>USt-IdNr.</b> DE000000000</p>\",\n  invoiceText:\n    \"<p>Zahlen Sie bitte den Rechnungsbetrag bis zum <Datum> unter Angabe der Rechnungsnummer\\\nauf unten stehendes Konto.<br/>\\\nDie gelieferte Ware bleibt bis zur vollständigen Bezahlung Eigentum des Verlages.<br/>\\\nVielen Dank für Ihre Bestellung.</p>\\\n<p>Mit herzlichen Grüßen.<br/>\\\nMusterstadt, den <Datum></p>\",\n  subjectAndBelow:\n    \"<h3>Rechnung</h3>\\\n  <p><br></p>\\\n  <p>wir erlauben uns, in Rechnung zu stellen:</p>\",\n  contactInformation:\n    \"<p>Buch- und Zeitschriftenverlag GbR<br>\\\n  Max Mustermann</p>\\\n  <p>Hauptsitz<br>\\\n  Musterstraße 12<br>\\\n  10405 Musterstadt<br>\\\n  Telefon 000 / 00 00 00</p>\\\n  <p>Büro Musterstadt<br>\\\n  Musterstraße 19<br>\\\n  10409 Musterstadt<br>\\\n  Telefon 030 / 00 00 00 00</p>\\\n  <p>info@muster-email.de<br>\\\n  www.musterdomain.de</p>\\\n  <p>Steuernummer 000/000/00000<br>\\\n  Finanzamt Musterstadt</p>\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  percent: \"7,00\",\n  books: [],\n};\n","export default {\n  backendURL: \"https://api.billeroo.de\",\n};\n","import local from \"./local\";\nimport production from \"./production\";\n\nexport default () => {\n  if (process.env.NODE_ENV == \"production\") {\n    return production;\n  }\n  return local;\n};\n","import config from \"../../config\";\nimport Axios from \"axios\";\n\nconst { backendURL } = config();\n\nconst url = backendURL + \"/data\";\n\nexport default async function postData(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\", \"{}\"));\n\n  if (!user.token) {\n    return;\n  }\n\n  const jwt = user.token;\n\n  const result = await Axios.post(url, data, {\n    headers: {\n      Authorization: \"Bearer \" + jwt,\n    },\n  });\n\n  return result.data;\n}\n","import config from \"../../config\";\nimport Axios from \"axios\";\nconst { backendURL } = config();\n\nconst url = backendURL + \"/data\";\n\nexport default async function getData() {\n  const user = JSON.parse(localStorage.getItem(\"user\"), \"{}\");\n  if (!user || !user.token) {\n    return;\n  }\n  const jwt = user.token;\n  const result = await Axios.get(url, {\n    headers: {\n      Authorization: \"Bearer \" + jwt,\n    },\n  });\n\n  return result.data;\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\nimport postData from \"../services/backend/postData\";\nimport { useEffect } from \"react\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useCompany() {\n  const [company, setCompany] = useLocalStorage(\"companies\", companySceleton);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.company) {\n        setCompany(data.company);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const updateCompany = (company) => {\n    setCompany(company);\n    postData({ company });\n  };\n\n  return [company, updateCompany];\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport postData from \"../services/backend/postData\";\nimport { useCallback, useEffect } from \"react\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useInvoices() {\n  const [invoices, setLocalStorageInvoices] = useLocalStorage(\"invoices\", []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.invoices) {\n        setLocalStorageInvoices(data.invoices);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addInvoice = useCallback(\n    (invoice) => {\n      const _invoices = [...invoices, invoice];\n      setLocalStorageInvoices(_invoices);\n      postData({ invoices: _invoices });\n    },\n    [invoices]\n  );\n\n  const removeInvoice = useCallback(\n    (invoiceId) => {\n      const _invoices = [...invoices];\n      _invoices[invoiceId] = undefined;\n      setLocalStorageInvoices(_invoices);\n      postData({ invoices: _invoices });\n    },\n    [invoices]\n  );\n\n  const updateInvoice = useCallback(\n    (invoice) => {\n      const _invoices = [...invoices];\n      _invoices[invoice.id] = invoice;\n      setLocalStorageInvoices(_invoices);\n      postData({ invoices: _invoices });\n    },\n    [invoices]\n  );\n\n  return [\n    invoices.filter((i) => i && typeof i === \"object\"),\n    addInvoice,\n    removeInvoice,\n    updateInvoice,\n    invoices.length,\n  ];\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport { useCallback, useEffect } from \"react\";\nimport postData from \"../services/backend/postData\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useArticles() {\n  const [articles, setLocalStorageArticles] = useLocalStorage(\"articles\", []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.articles) {\n        setLocalStorageArticles(data.articles);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addArticle = useCallback(\n    (article) => {\n      const _articles = [...articles, article];\n      setLocalStorageArticles(_articles);\n      postData({ articles: _articles });\n    },\n    [articles]\n  );\n\n  const removeArticle = useCallback(\n    (articleId) => {\n      const _articles = [...articles];\n      _articles[articleId] = undefined;\n      setLocalStorageArticles(_articles);\n      postData({ articles: _articles });\n    },\n    [articles]\n  );\n\n  const updateArticle = useCallback(\n    (article) => {\n      const _articles = [...articles];\n      _articles[article.id] = article;\n      setLocalStorageArticles(_articles);\n      postData({ articles: _articles });\n    },\n    [articles]\n  );\n\n  const getArticleById = useCallback(\n    (id) => {\n      return articles[id];\n    },\n    [articles]\n  );\n  return [\n    articles.filter((a) => a && typeof a === \"object\"),\n    addArticle,\n    removeArticle,\n    updateArticle,\n    articles.length,\n    getArticleById,\n  ];\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport { useCallback, useEffect } from \"react\";\nimport postData from \"../services/backend/postData\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useAuthors() {\n  const [authors, setLocalStorageAuthors] = useLocalStorage(\"authors\", []);\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.authors) {\n        setLocalStorageAuthors(data.authors);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addAuthor = useCallback(\n    (author) => {\n      const _authors = [...authors, author];\n      setLocalStorageAuthors(_authors);\n      postData({ authors: _authors });\n    },\n    [authors]\n  );\n\n  const removeAuthor = useCallback(\n    (authorId) => {\n      const _authors = [...authors];\n      _authors[authorId] = undefined;\n      setLocalStorageAuthors(_authors);\n      postData({ authors: _authors });\n    },\n    [authors]\n  );\n\n  const updateAuthor = useCallback(\n    (author) => {\n      const _authors = [...authors];\n      _authors[author.id] = author;\n      setLocalStorageAuthors(_authors);\n      postData({ authors: _authors });\n    },\n    [authors]\n  );\n\n  const getAuthorById = useCallback(\n    (id) => {\n      return authors[id];\n    },\n    [authors]\n  );\n\n  return [\n    authors.filter((a) => a && typeof a === \"object\"),\n    addAuthor,\n    removeAuthor,\n    updateAuthor,\n    authors.length,\n    getAuthorById,\n  ];\n}\n","import { useCallback, useEffect } from \"react\";\nimport postData from \"../services/backend/postData\";\nimport useLocalStorage from \"./useLocalStorage\";\nimport getData from \"../services/backend/getData\";\nexport default function useCustomers() {\n  const [customers, setLocalStorageCustomers] = useLocalStorage(\n    \"customers\",\n    []\n  );\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.customers) {\n        setLocalStorageCustomers(data.customers);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addCustomer = useCallback(\n    (customer) => {\n      const _customers = [...customers, customer];\n      setLocalStorageCustomers(_customers);\n      postData({ customers: _customers });\n    },\n    [customers]\n  );\n\n  const removeCustomer = useCallback(\n    (customerId) => {\n      const _customers = [...customers];\n      _customers[customerId] = undefined;\n      setLocalStorageCustomers(_customers);\n      postData({ customers: _customers });\n    },\n    [customers]\n  );\n\n  const updateCustomer = useCallback(\n    (customer) => {\n      const _customers = [...customers];\n      _customers[customer.id] = customer;\n      setLocalStorageCustomers(_customers);\n      postData({ customers: _customers });\n    },\n    [customers]\n  );\n\n  const getCustomerById = useCallback(\n    (id) => {\n      return customers[id];\n    },\n    [customers]\n  );\n  return [\n    customers.filter((c) => c && typeof c === \"object\"),\n    addCustomer,\n    removeCustomer,\n    updateCustomer,\n    customers.length,\n    getCustomerById,\n  ];\n}\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-148033321-3\");\nexport default function useGA() {\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(history);\n    ReactGA.pageview(history.location.pathname + history.location.search);\n  }, [history]);\n}\n","import React, { useState } from \"react\";\nimport RichTextEditor from \"react-rte\";\n\nimport \"./Editor.css\";\n\nexport default function Editor(props) {\n  const [active, setActive] = useState(false);\n  return (\n    <RichTextEditor\n      {...props}\n      onFocus={() => setActive(true)}\n      onBlur={() => {\n        if (props.onBlur && typeof props.onBlur === \"function\") {\n          props.onBlur();\n        }\n        setActive(false);\n      }}\n      toolbarConfig={{\n        display: active\n          ? [\n              \"INLINE_STYLE_BUTTONS\",\n              \"BLOCK_TYPE_BUTTONS\",\n              \"LINK_BUTTONS\",\n              \"BLOCK_TYPE_DROPDOWN\",\n              \"HISTORY_BUTTONS\",\n            ]\n          : [],\n        INLINE_STYLE_BUTTONS: [\n          { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\n          { label: \"Italic\", style: \"ITALIC\" },\n          { label: \"Underline\", style: \"UNDERLINE\" },\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n          { label: \"Normal\", style: \"unstyled\" },\n          { label: \"Heading Large\", style: \"header-one\" },\n          { label: \"Heading Medium\", style: \"header-two\" },\n          { label: \"Heading Small\", style: \"header-three\" },\n        ],\n        BLOCK_TYPE_BUTTONS: [\n          { label: \"UL\", style: \"unordered-list-item\" },\n          { label: \"OL\", style: \"ordered-list-item\" },\n        ],\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input } from \"semantic-ui-react\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"../Editor/Editor\";\n\nexport default function CustomerForm({ customer, setCustomer }) {\n  const [invoiceAddress, setInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n  );\n\n  const [shippingAddress, setShippingAddress] = useState(\n    RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n  );\n\n  const updateAddresses = (customer) => {\n    setInvoiceAddress(\n      RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n    );\n    setShippingAddress(\n      RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n    );\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n    updateAddresses(customer);\n  };\n\n  const updateRichtext = (name, value) => {\n    setCustomer({ ...customer, [name]: value.toString(\"html\") });\n    updateAddresses(customer);\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"Kundenname\"\n          value={customer.name}\n          name=\"name\"\n          onChange={handleCustomerChange}\n        />\n      </Form.Group>\n      <Form.Field\n        control={Editor}\n        label={\"Rechnungsadresse\"}\n        onChange={setInvoiceAddress}\n        value={invoiceAddress}\n        onBlur={() => {\n          updateRichtext(\"invoiceAddress\", invoiceAddress);\n        }}\n      />\n      <Form.Field\n        control={Editor}\n        label={\"Lieferadresse\"}\n        onChange={setShippingAddress}\n        value={shippingAddress}\n        onBlur={() => {\n          updateRichtext(\"shippingAddress\", shippingAddress);\n        }}\n      />\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"MwST\"\n          placeholder=\"7\"\n          name=\"ust\"\n          icon=\"percent\"\n          onChange={handleCustomerChange}\n          value={customer.ust}\n        />\n        <Form.Field\n          control={Input}\n          label=\"Kundenrabatt\"\n          placeholder=\"0\"\n          icon=\"percent\"\n          name=\"discount\"\n          onChange={handleCustomerChange}\n          value={customer.discount}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useCustomers, useGA } from \"../hooks\";\nimport { customer as customerSceleton } from \"../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport CustomerForm from \"./CustomerForm/CustomerForm\";\nexport default () => {\n  const [\n    customers,\n    addCustomer,\n    removeCustomer,\n    updateCustomer,\n    customersLength,\n  ] = useCustomers();\n  const [customer, setCustomer] = useState();\n  useGA();\n\n  const saveCustomer = () => {\n    if (customer.id >= customersLength) {\n      addCustomer(customer);\n    } else {\n      updateCustomer(customer);\n    }\n    setCustomer();\n  };\n\n  return (\n    <div>\n      <Button\n        onClick={() =>\n          setCustomer({ ...customerSceleton, id: customersLength })\n        }\n        primary\n      >\n        Neuer Kunde\n      </Button>\n      {customer && (\n        <Modal onClose={() => setCustomer()} open={true}>\n          <Modal.Header>Kunde</Modal.Header>\n          <Modal.Content>\n            <CustomerForm customer={customer} setCustomer={setCustomer} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setCustomer()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={saveCustomer}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsadresse</Table.HeaderCell>\n            <Table.HeaderCell>Lieferadresse</Table.HeaderCell>\n            <Table.HeaderCell>Rabatt</Table.HeaderCell>\n            <Table.HeaderCell>MwST</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {customers.map((c, i) => (\n            <Table.Row>\n              <Table.Cell>{c.name}</Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.invoiceAddress }} />\n              </Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.shippingAddress }} />\n              </Table.Cell>\n              <Table.Cell>{c.discount}</Table.Cell>\n              <Table.Cell>{c.ust}</Table.Cell>\n              <Table.Cell>\n                <Button\n                  onClick={() => setCustomer(c)}\n                  primary\n                  icon=\"edit\"\n                ></Button>\n                <Button\n                  onClick={() => removeCustomer(c.id)}\n                  negative\n                  icon=\"trash\"\n                ></Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: `${day < 10 ? \"0\" + day : day}.&#8202;${\n          month < 10 ? \"0\" + month : month\n        }.&#8202;${date.getFullYear()}`,\n      }}\n    />\n  );\n}\n","export default function parsePrice(price) {\n  return parseFloat((price + \"\").replace(\",\", \".\"));\n}\n","export default function formatPrice(price) {\n  return `${price.toFixed(2)}`.replace(\".\", \",\");\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\nimport { parsePrice, formatPrice } from \"../../services\";\n\nexport default function Author({ author, setAuthor }) {\n  const [authorPrice, setAuthorPrice] = useState(author.percent);\n\n  const handleAuthorChange = (e, { name, value }) => {\n    if (name === \"percent\") {\n      value = parsePrice(value);\n      if (isNaN(value)) {\n        setAuthorPrice(\"\");\n        return;\n      }\n      value = formatPrice(value);\n      setAuthorPrice(value);\n    }\n    setAuthor({ ...author, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleAuthorChange}\n          value={author.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Kontakt\"\n          placeholder=\"Tel, Email, ...\"\n          onChange={handleAuthorChange}\n          name=\"contact\"\n          value={author.contact}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Prozent\"\n          placeholder=\"Prozent\"\n          name=\"percent\"\n          icon=\"percent\"\n          onChange={(e, { value }) => setAuthorPrice(value)}\n          onBlur={(e) => {\n            handleAuthorChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={authorPrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input, Dropdown } from \"semantic-ui-react\";\nimport { useAuthors } from \"../hooks\";\nimport { author as authorSceleton } from \"../sceletons\";\nimport Author from \"./Author\";\nimport { Segment } from \"semantic-ui-react\";\nimport { formatPrice } from \"../services\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n  const [authors, , , , authorsLength, getAuthorById] = useAuthors();\n  const [author, setAuthor] = useState(article.authors[0]);\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setArticlePrice(\"0,00\");\n        return;\n      }\n      value = formatPrice(value);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  const authorOptions = [\n    { key: undefined, value: undefined, text: \"\" },\n    { key: authorsLength, value: authorsLength, text: \"Neuer Autor\" },\n  ].concat(\n    authors.map((a) => ({\n      key: a.id,\n      value: a.id,\n      text: a.name,\n    }))\n  );\n\n  const handleAuthorChange = (e, { value }) => {\n    let author;\n    if (value === undefined) {\n      author = undefined;\n    } else if (value < authorsLength) {\n      author = getAuthorById(value);\n    } else {\n      author = { ...authorSceleton, id: authorsLength };\n    }\n    setAuthor(author);\n    setArticle({ ...article, authors: author ? [author] : [] });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={(e) => {\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n      <Form.Field\n        label=\"Wählen Sie einen Autoren aus:\"\n        control={Dropdown}\n        search\n        selection\n        options={authorOptions}\n        value={author ? author.id : undefined}\n        onChange={handleAuthorChange}\n      />\n      {author && (\n        <Segment>\n          <Author author={author} setAuthor={setAuthor} />\n        </Segment>\n      )}\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useArticles, useInvoiceStats, useGA } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\nimport { formatDate, parsePrice, formatPrice } from \"../../services\";\n\nexport default () => {\n  const [\n    articles,\n    ,\n    removeArticle,\n    updateArticle,\n    articlesLength,\n  ] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const invoiceStats = useInvoiceStats();\n  useGA();\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articlesLength })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Artikel</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={() => {\n                updateArticle(article);\n                setArticle();\n              }}\n              content=\"Speichern\"\n              positive\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                  <Table.HeaderCell>Zahlungsdatum</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {invoiceStats[invoiceArticle.id] &&\n                  invoiceStats[invoiceArticle.id].invoices.map((invoice) => (\n                    <Table.Row>\n                      <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                      <Table.Cell>{invoice.customerName}</Table.Cell>\n                      <Table.Cell>{invoice.payed}</Table.Cell>\n                      <Table.Cell>\n                        {formatPrice(\n                          invoice.payed * parsePrice(invoiceArticle.price)\n                        )}{\" \"}\n                        €\n                      </Table.Cell>\n                      <Table.Cell>\n                        {invoice.paymentDate\n                          ? formatDate(invoice.paymentDate)\n                          : \"Ausstehend\"}\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                {invoiceStats[invoiceArticle.id] && (\n                  <Table.Row active>\n                    <Table.Cell />\n                    <Table.Cell />\n                    <Table.Cell>\n                      {invoiceStats[invoiceArticle.id].totalSold}\n                    </Table.Cell>\n                    <Table.Cell>\n                      {formatPrice(\n                        invoiceStats[invoiceArticle.id].totalSold *\n                          parsePrice(invoiceArticle.price)\n                      )}{\" \"}\n                      €\n                    </Table.Cell>\n                    <Table.Cell />\n                  </Table.Row>\n                )}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Lagerbestand</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>\n                    {invoiceStats[a.id]\n                      ? parseInt(a.amount + \"\") - invoiceStats[a.id].totalSend\n                      : a.amount}\n                  </Table.Cell>\n                  <Table.Cell>{a.price} €</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setArticle(a)}\n                      primary\n                      icon=\"edit\"\n                    ></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                      secondary\n                    ></Button>\n                    <Button\n                      onClick={() => removeArticle(i)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import useInvoices from \"./useInvoices\";\nimport { useMemo } from \"react\";\n\nexport default function useInvoiceStats() {\n  const [invoices] = useInvoices();\n  const invoicesStats = useMemo(() => {\n    return invoices.reduce((stats, i) => {\n      for (const aId in i.articles) {\n        const article = i.articles[aId];\n        if (!stats[article.articleId]) {\n          stats[article.articleId] = {\n            totalSold: 0,\n            invoices: [],\n            totalSend: 0,\n          };\n        }\n        stats[article.articleId].totalSold += parseInt(article.toBePayed + \"\");\n        stats[article.articleId].totalSend += parseInt(article.toBeSend + \"\");\n        stats[article.articleId].invoices.push({\n          id: i.id,\n          send: article.toBeSend,\n          payed: article.toBePayed,\n          invoiceNumber: i.invoiceNumber,\n          customerName: i.customer.name,\n        });\n      }\n      return stats;\n    }, {});\n  }, [invoices]);\n\n  return invoicesStats;\n}\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const { isDragActive, isDragAccept, isDragReject } = useDropzone({\n    accept: \"image/*\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: (event) => event.stopPropagation(),\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport DropZone from \"./DropZone\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"./Editor/Editor\";\n\nexport default function CompanyForm({ company, setCompany, selected }) {\n  const [footerText, setFooterText] = useState(\n    RichTextEditor.createValueFromString(company.footerText, \"html\")\n  );\n  const [subjectAndBelow, setSubjectAndBelow] = useState(\n    RichTextEditor.createValueFromString(company.subjectAndBelow, \"html\")\n  );\n  const [invoiceText, setInvoiceText] = useState(\n    RichTextEditor.createValueFromString(company.invoiceText, \"html\")\n  );\n  const [contactInformation, setContactInformation] = useState(\n    RichTextEditor.createValueFromString(company.contactInformation, \"html\")\n  );\n  const [aboveClientInvoiceAddress, setAboveClientInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(\n      company.aboveClientInvoiceAddress,\n      \"html\"\n    )\n  );\n\n  const updateRichText = (name, value) => {\n    setCompany({ ...company, [name]: value.toString(\"html\") });\n  };\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n  return (\n    <Form>\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n      )}\n      {selected === \"logo\" && (\n        <Segment>\n          <h4>Logo</h4>\n          {company.logo !== \"\" ? (\n            <div>\n              <img src={company.logo} alt=\"company logo\" />\n              <Button\n                negative\n                onClick={() => setCompany({ ...company, logo: \"\" })}\n              >\n                Löschen\n              </Button>\n            </div>\n          ) : (\n            <DropZone onDrop={onDropHandler} />\n          )}\n        </Segment>\n      )}\n      {selected === \"aboveClientInvoiceAddress\" && (\n        <Form.Field\n          control={Editor}\n          value={aboveClientInvoiceAddress}\n          onChange={setAboveClientInvoiceAddress}\n          onBlur={() => {\n            updateRichText(\n              \"aboveClientInvoiceAddress\",\n              aboveClientInvoiceAddress\n            );\n          }}\n          label=\"Absender\"\n          name=\"aboveClientInvoiceAddress\"\n        />\n      )}\n      {selected === \"contactInformation\" && (\n        <Form.Field\n          control={Editor}\n          value={contactInformation}\n          onChange={setContactInformation}\n          onBlur={() => {\n            updateRichText(\"contactInformation\", contactInformation);\n          }}\n          label=\"Kontakt Informationen\"\n          name=\"contactInformation\"\n        />\n      )}\n      {selected === \"subjectAndBelow\" && (\n        <Form.Field\n          control={Editor}\n          value={subjectAndBelow}\n          onChange={setSubjectAndBelow}\n          onBlur={() => {\n            updateRichText(\"subjectAndBelow\", subjectAndBelow);\n          }}\n          label=\"Betreff und Begrüßung\"\n          name=\"subjectAndBelow\"\n        />\n      )}\n      {selected === \"invoiceText\" && (\n        <Form.Field\n          control={Editor}\n          value={invoiceText}\n          onChange={setInvoiceText}\n          onBlur={() => {\n            updateRichText(\"invoiceText\", invoiceText);\n          }}\n          label=\"Rechnungstext\"\n          name=\"invoiceText\"\n        />\n      )}\n      {selected === \"footerText\" && (\n        <Form.Field\n          control={Editor}\n          value={footerText}\n          onChange={(value) => {\n            setFooterText(value);\n          }}\n          onBlur={() => {\n            updateRichText(\"footerText\", footerText);\n          }}\n          label=\"Fußzeile\"\n          name=\"footerText\"\n        />\n      )}\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Farbe\"\n          control={Input}\n          placeholder=\"z.B. #ffffff oder rgb(120,0,0)\"\n          name=\"companyColor\"\n          onChange={updateCompany}\n          value={company.color}\n        />\n      )}\n    </Form>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport { useCompany, useCustomers, useAuthors, useArticles } from \"../../hooks\";\nimport {\n  Form,\n  Input,\n  Card,\n  Modal,\n  Button,\n  Checkbox,\n  Dropdown,\n  Segment,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport Article from \"../Article\";\nimport CustomerForm from \"../CustomerForm/CustomerForm\";\nimport CompanyForm from \"../CompanyForm\";\nimport { formatPrice } from \"../../services\";\n\nexport default ({\n  invoice,\n  setInvoice,\n  formSelected = [],\n  wrapperClass,\n  setFormSelected,\n}) => {\n  const [customers, , , , customersLength, getCustomerById] = useCustomers();\n  const [company, setCompany] = useCompany();\n  const [customer, setCustomer] = useState(\n    getCustomerById(invoice.customer.id) || invoice.customer\n  );\n  const [\n    articles,\n    addToArticles,\n    ,\n    ,\n    articlesLength,\n    getArticleById,\n  ] = useArticles();\n  const [selectedArticles, setSelectedArticles] = useState(invoice.articles);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articlesLength,\n  });\n  const [toBePayed, setToBePayed] = useState(1);\n  const [toBeSend, setToBeSend] = useState(1);\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [porto, setPorto] = useState(invoice.porto);\n  const [, , , updateAuthor] = useAuthors();\n\n  const updateInvoice = (e, { name, value, checked }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = formatPrice(value);\n      setPorto(value);\n    }\n    if (name === \"payed\") {\n      value = checked;\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const addNewArticle = () => {\n    addToArticles(article);\n    setArticle({\n      ...articleSceleton,\n      id: articlesLength + 1,\n    });\n    toggleNewArticle();\n    if (article.authors.length > 0) {\n      updateAuthor(article.authors[0]);\n    }\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  const customerOptions = useMemo(() => {\n    let list = [\n      {\n        key: customersLength,\n        value: customersLength,\n        text: `Neuer Kunde`,\n      },\n    ];\n    return list.concat(\n      customers.map((c) => ({\n        key: c.id,\n        text: c.name,\n        value: c.id,\n      }))\n    );\n  }, [customers, customer]);\n\n  const articlesOptions = useMemo(() => {\n    const list = [];\n    return list.concat(\n      articles.map((a) => {\n        let text = a.name.slice(0, 7);\n        if (text !== a.name) {\n          text += \"...\";\n        }\n        return {\n          key: a.id,\n          value: a.id,\n          text,\n        };\n      })\n    );\n  }, [articles]);\n\n  const handleCustomerChange = (e, { value }) => {\n    let customer;\n    if (value < customersLength) customer = getCustomerById(value);\n    else customer = { ...customerSceleton, id: customersLength };\n    setCustomer(customer);\n    setInvoice({\n      ...invoice,\n      customer,\n    });\n  };\n\n  const handleArticleChange = (id, name, value) => {\n    let _selectedArticles;\n    if (id >= selectedArticles.length) {\n      if (value >= articlesLength) {\n        return;\n      }\n      _selectedArticles = [\n        ...selectedArticles,\n        { toBeSend, toBePayed, articleId: value },\n      ];\n      setToBeSend(1);\n      setToBePayed(1);\n    } else {\n      _selectedArticles = [...selectedArticles];\n      _selectedArticles[id][name] = value;\n    }\n    setSelectedArticles(_selectedArticles);\n    setInvoice({\n      ...invoice,\n      articles: _selectedArticles.map((a) => ({\n        ...a,\n        ...getArticleById(a.articleId),\n      })),\n    });\n  };\n\n  const removeArticle = (id) => {\n    const _selectedArticles = selectedArticles.filter((a, i) => i !== id);\n    setSelectedArticles(_selectedArticles);\n    setInvoice({\n      ...invoice,\n      articles: _selectedArticles.map((a) => ({\n        ...getArticleById(a.articleId),\n        ...a,\n      })),\n    });\n  };\n\n  return (\n    <div className={wrapperClass}>\n      <div className=\"invoice-form-buttons\">\n        <Button onClick={toggleNewArticle} primary>\n          Neuen Artikel Anlegen\n        </Button>\n      </div>\n      <div className={\"invoice-form \"}>\n        {formSelected[0] === \"customer\" && (\n          <Modal open onClose={() => setFormSelected([])} closeIcon>\n            <div className=\"invoice-form-wrap\">\n              <Form>\n                <Form.Field\n                  label=\"Wählen Sie einen Kunden aus:\"\n                  control={Dropdown}\n                  search\n                  selection\n                  options={customerOptions}\n                  value={customer.id}\n                  onChange={handleCustomerChange}\n                />\n              </Form>\n              <Segment>\n                <CustomerForm\n                  customer={customer}\n                  setCustomer={(customer) => {\n                    setCustomer(customer);\n                    setInvoice({\n                      ...invoice,\n                      customer,\n                    });\n                  }}\n                />\n              </Segment>\n            </div>\n          </Modal>\n        )}\n        <div>\n          <Card fluid>\n            <Card.Content>\n              <div className=\"invoice-form-wrap\">\n                <div>\n                  <Form>\n                    {selectedArticles.length > 0 && (\n                      <div>\n                        <h3>Artikel in der Rechnung</h3>\n                        {selectedArticles.map((a, i) => (\n                          <div>\n                            <Form.Group widths=\"equal\">\n                              <Form.Input\n                                fluid\n                                name=\"toBeSend\"\n                                type=\"number\"\n                                label=\"Senden\"\n                                value={a.toBeSend}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                              <Form.Input\n                                fluid\n                                name=\"toBePayed\"\n                                type=\"number\"\n                                label=\"Bezahlen\"\n                                value={a.toBePayed}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n\n                              <Form.Field\n                                control={Dropdown}\n                                fluid\n                                label=\"Artikel\"\n                                name=\"articleId\"\n                                search\n                                selection\n                                options={articlesOptions}\n                                value={a.articleId}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                              <Form.Field>\n                                <label>&nbsp;</label>\n                                <Button\n                                  icon=\"trash\"\n                                  negative\n                                  onClick={() => removeArticle(i)}\n                                />\n                              </Form.Field>\n                            </Form.Group>\n                          </div>\n                        ))}\n                        <hr></hr>\n                      </div>\n                    )}\n                    <h3>Artikel hinzufügen</h3>\n\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        fluid\n                        name=\"amount\"\n                        type=\"number\"\n                        label=\"Zu Senden\"\n                        value={toBeSend}\n                        onChange={(e, { value }) => setToBeSend(value)}\n                      />\n                      <Form.Input\n                        fluid\n                        name=\"amountPayed\"\n                        type=\"number\"\n                        label=\"Zu Bezahlen\"\n                        value={toBePayed}\n                        onChange={(e, { value }) => setToBePayed(value)}\n                      />\n                      <Form.Field\n                        control={Dropdown}\n                        fluid\n                        label=\"Artikel\"\n                        name=\"articleId\"\n                        search\n                        selection\n                        options={articlesOptions}\n                        value={article.id}\n                        onChange={(e, { value }) =>\n                          handleArticleChange(\n                            selectedArticles.length,\n                            \"articleId\",\n                            value\n                          )\n                        }\n                      />\n                    </Form.Group>\n                  </Form>\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle} closeIcon>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      positive\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </div>\n            </Card.Content>\n          </Card>\n          {formSelected[0] === \"general\" && (\n            <Modal open onClose={() => setFormSelected([])} closeIcon>\n              <div className=\"invoice-form-wrap\">\n                <Form>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"invoiceDate\" && (\n                      <Form.Field\n                        label=\"Rechnungsdatum\"\n                        name=\"invoiceDate\"\n                        selected={new Date(invoice.invoiceDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"orderDate\" && (\n                      <Form.Field\n                        label=\"Bestelldatum\"\n                        name=\"orderDate\"\n                        selected={new Date(invoice.orderDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"shippingDate\" && (\n                      <Form.Field\n                        label=\"Versanddatum\"\n                        name=\"shippingDate\"\n                        selected={new Date(invoice.shippingDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                  </Form.Group>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"porto\" && (\n                      <Form.Field\n                        label=\"Porto\"\n                        value={porto}\n                        name=\"porto\"\n                        onChange={(e, { value }) => setPorto(value)}\n                        control={Input}\n                        onBlur={(e) =>\n                          updateInvoice(e, {\n                            name: e.target.name,\n                            value: e.target.value,\n                          })\n                        }\n                        icon=\"euro\"\n                      />\n                    )}\n                    {formSelected[1] === \"invoiceNumber\" && (\n                      <Form.Field\n                        label=\"Rechnungsnummer\"\n                        name=\"invoiceNumber\"\n                        value={invoice.invoiceNumber}\n                        onChange={updateInvoice}\n                        control={Input}\n                      />\n                    )}\n                  </Form.Group>\n\n                  {formSelected[1] === \"payed\" && (\n                    <div>\n                      <Form.Field>\n                        <label>Bezahlt</label>\n                        <Checkbox\n                          onChange={(e, { name, checked }) => {\n                            if (checked) {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: new Date(),\n                              });\n                            } else {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: undefined,\n                              });\n                            }\n                          }}\n                          name=\"payed\"\n                          checked={invoice.payed}\n                          toggle\n                        />\n                      </Form.Field>\n                      {invoice.payed && (\n                        <Form.Field\n                          label=\"Zahlungseingangsdatum\"\n                          name=\"paymentDate\"\n                          selected={new Date(invoice.paymentDate)}\n                          onChange={(v) => updateInvoiceDate(v, \"paymentDate\")}\n                          control={DatePicker}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                      )}\n                    </div>\n                  )}\n                </Form>\n                <CompanyForm\n                  company={company}\n                  setCompany={(company) => {\n                    setCompany(company);\n                    setInvoice({\n                      ...invoice,\n                      company,\n                    });\n                  }}\n                  selected={formSelected[1]}\n                />\n              </div>\n            </Modal>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { Button } from \"semantic-ui-react\";\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <Button\n    primary\n    onClick={() => {\n      const input = document.getElementById(id);\n\n      html2canvas(input, { scale: 3 }).then((canvas) => {\n        const imgData = canvas.toDataURL(\"image/jpeg\", 0.5);\n        let pdf = new jsPDF();\n        pdf.addImage(imgData, \"JPEG\", 0, 0, 210, 297);\n        pdf.save(`${fileName}.pdf`);\n      });\n    }}\n    icon=\"download\"\n    labelPosition=\"right\"\n    content=\"Download\"\n  ></Button>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\n\nexport default function SinglePageOverlay({ onClick, wrapperClass, children }) {\n  return (\n    <div\n      className={`${wrapperClass ? wrapperClass : \"\"} invoice-overlay-wrapper`}\n    >\n      {children}\n      <div className=\"invoice-overlay\" onClick={onClick} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate, formatPrice, parsePrice } from \"../../services\";\nimport { Button } from \"semantic-ui-react\";\nimport SinglePageOverlay from \"./SinglePageOverlay\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    customer,\n    articles = [],\n    company,\n  },\n  setFormSelected,\n}) => {\n  const articles_net_price = articles\n    .map(({ price, toBePayed }) => {\n      const totalPrice = parsePrice(price) * toBePayed;\n      const totalPriceWithDiscount =\n        totalPrice - totalPrice * (customer.discount / 100);\n      const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n      return net;\n    })\n    .reduce((total, x) => x + total, 0);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div\n        className=\"invoice-folding-line\"\n        style={\n          company.companyColor ? { borderColor: company.companyColor } : {}\n        }\n      />\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <SinglePageOverlay\n            onClick={() => setFormSelected([\"general\", \"logo\"])}\n          >\n            <div className=\"invoice-page-image-wrapper\">\n              <img\n                className=\"invoice-header-company-logo\"\n                src={company.logo}\n                alt=\"company logo\"\n              />\n            </div>\n          </SinglePageOverlay>\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-header-customer-company\"\n                onClick={() =>\n                  setFormSelected([\"general\", \"aboveClientInvoiceAddress\"])\n                }\n              >\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: company.aboveClientInvoiceAddress,\n                  }}\n                />\n              </SinglePageOverlay>\n              {customer ? (\n                <SinglePageOverlay\n                  wrapperClass=\"invoice-header-customer-info\"\n                  onClick={() => setFormSelected([\"customer\"])}\n                >\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: customer.invoiceAddress,\n                    }}\n                  />\n                </SinglePageOverlay>\n              ) : (\n                <Button>Kunde hinzufügen</Button>\n              )}\n            </div>\n            <SinglePageOverlay\n              wrapperClass=\"invoice-header-company-info\"\n              onClick={() => setFormSelected([\"general\", \"contactInformation\"])}\n            >\n              <div\n                dangerouslySetInnerHTML={{ __html: company.contactInformation }}\n              ></div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-subject-and-below\"\n                onClick={() => setFormSelected([\"general\", \"subjectAndBelow\"])}\n              >\n                <div\n                  dangerouslySetInnerHTML={{ __html: company.subjectAndBelow }}\n                />\n              </SinglePageOverlay>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versanddatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"orderDate\"])}\n                    wrapperClass=\"invoice-body-order-date\"\n                  >\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"shippingDate\"])}\n                    wrapperClass=\"invoice-body-send-date\"\n                  >\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"customer\"])}\n                  >\n                    <div\n                      className=\"invoice-body-send-to\"\n                      dangerouslySetInnerHTML={{\n                        __html: customer.shippingAddress,\n                      }}\n                    ></div>\n                  </SinglePageOverlay>\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-invoice-date\">\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceDate\"])}\n              >\n                <div className=\"invoice-body-top-right\">\n                  <p>\n                    Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceNumber\"])}\n              >\n                <div className=\"invoice-body-invoice-nr\">\n                  <p>\n                    Rechnungsnummer: <b>{invoiceNumber}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlung angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-bottom\">\n            <div className=\"invoice-body-article-wrapper\">\n              {articles.map(({ toBePayed, toBeSend, price, name, isbn }) => {\n                const multiple = parseInt(toBePayed) > 1;\n                const totalPrice = parsePrice(price) * toBePayed;\n                const totalPriceWithDiscount =\n                  totalPrice - totalPrice * (customer.discount / 100);\n                const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n                return (\n                  <div className=\"invoice-body-article\">\n                    <div className=\"invoice-body-article-left\">\n                      <div className=\"invoice-body-article-description\">\n                        <div>\n                          <b>\n                            {toBePayed !== toBeSend && toBeSend + \"/\"}\n                            {toBePayed} Exemplar\n                            {multiple && \"e\"}\n                          </b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          <b>{name && `„${name}“,`}</b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          {isbn && `${isbn},`}\n                        </div>\n                      </div>\n                      <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                        multiple ? \"je\" : \"\"\n                      } ${price} €${\n                        multiple ? ` = ${formatPrice(totalPrice)} €` : \"\"\n                      }${\n                        customer.discount > 0\n                          ? `, abzüglich ${\n                              customer.discount\n                            } % Rabatt = ${formatPrice(\n                              totalPriceWithDiscount\n                            )} €`\n                          : \"\"\n                      } (beinhaltet ${customer.ust} % MwST = ${formatPrice(\n                        totalPriceWithDiscount - net\n                      )} €)`}</div>\n                    </div>\n                    <div className=\"invoice-body-article-price\">\n                      <b>{articles.length > 1 && `${formatPrice(net)} €`}</b>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"invoice-body-price-calculation\">\n              <div className=\"invoice-body-price-calculation-label-and-number\">\n                <p>Netto</p>\n                <p>\n                  <b>{formatPrice(articles_net_price)} €</b>\n                </p>\n              </div>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"porto\"])}\n              >\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>Versandkosten</p>\n                  <p>\n                    <b>{porto.replace(\".\", \",\")} €</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay onClick={() => setFormSelected([\"customer\"])}>\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>{`+${customer.ust}% Mehrwertsteuer`}</p>\n                  <p>\n                    <b>\n                      {formatPrice(\n                        ((articles_net_price + parsePrice(porto + \"\")) *\n                          parsePrice(customer.ust + \"\")) /\n                          100\n                      )}{\" \"}\n                      €\n                    </b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n            </div>\n            <div className=\"invoice-body-price\">\n              <p>Rechnungsbetrag</p>\n              <p>\n                <b>\n                  {formatPrice(\n                    (articles_net_price + parsePrice(porto)) *\n                      (1 + parsePrice(customer.ust + \"\") / 100)\n                  )}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n            <SinglePageOverlay\n              onClick={() => setFormSelected([\"general\", \"invoiceText\"])}\n              wrapperClass=\"invoice-body-final-text\"\n            >\n              <div>\n                <p\n                  dangerouslySetInnerHTML={{ __html: company.invoiceText }}\n                ></p>\n              </div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <SinglePageOverlay\n          onClick={() => setFormSelected([\"general\", \"footerText\"])}\n        >\n          <div\n            className=\"invoice-footer\"\n            style={\n              company.companyColor ? { borderColor: company.companyColor } : {}\n            }\n            dangerouslySetInnerHTML={{ __html: company.footerText }}\n          ></div>\n        </SinglePageOverlay>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React, { useState } from \"react\";\n\nimport InvoiceForm from \"../InvoiceForm\";\nimport PrintButton from \"../PrintButton\";\nimport SinglePage from \"../SinglePage/SinglePage\";\nimport { Button, Segment, Icon, Message } from \"semantic-ui-react\";\n\nimport \"./Invoice.css\";\nimport { useCustomers } from \"../../hooks\";\nimport { calculateTotalPrice } from \"../../services\";\n\nexport default ({\n  edit,\n  invoice,\n  setInvoice,\n  invoices,\n  updateInvoice,\n  onSave,\n}) => {\n  if (!invoice || !invoices) {\n    return null;\n  }\n  const [active, setActive] = useState(edit);\n  const [formSelected, setFormSelected] = useState([]);\n  const [, , , updateCustomer] = useCustomers();\n\n  const saveInvoice = () => {\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    updateInvoice(invoice);\n    setInvoice();\n    updateCustomer(invoice.customer);\n    if (typeof onSave === \"function\") {\n      onSave();\n    }\n  };\n\n  const newInvoice = invoice.id === invoices.length;\n\n  return (\n    <div>\n      <div className=\"invoice-page-header\">\n        <Message\n          info\n          header=\"Neue Rechnung erstellen\"\n          content=\"Klicken Sie auf den Bereich, den Sie anpassen wollen. Rechts können Sie Artikel zur Rechnung hinzufügen oder neue erstellen.\"\n          icon=\"bell\"\n        />\n      </div>\n      <div className=\"invoice-page\">\n        <div className=\"invoice-page-wrapper\">\n          {active ? (\n            <div className=\"invoice-page-button-container\">\n              <div>\n                <PrintButton\n                  id={\"singlePage\"}\n                  label={\"Rechnung Herunterladen\"}\n                  fileName={invoice.invoiceNumber}\n                />\n              </div>\n              <div>\n                <Button\n                  onClick={() => setInvoice()}\n                  content=\"Abbrechen\"\n                  negative\n                  icon=\"close\"\n                  labelPosition=\"right\"\n                ></Button>\n                {invoice.customer && (\n                  <Button\n                    onClick={saveInvoice}\n                    content={newInvoice ? \"Anlegen\" : \"Speichern\"}\n                    positive\n                    icon=\"check\"\n                    labelPosition=\"right\"\n                  ></Button>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"invoice-button-wrapper\">\n              <Button onClick={() => setActive(true)} primary>\n                Neue Rechnung erstellen\n              </Button>\n            </div>\n          )}\n          <SinglePage\n            id={\"singlePage\"}\n            invoice={invoice}\n            setInvoice={setInvoice}\n            setFormSelected={setFormSelected}\n          />\n        </div>\n        {active && (\n          <InvoiceForm\n            wrapperClass=\"invoice-form-wrapper\"\n            invoice={invoice}\n            setInvoice={setInvoice}\n            formSelected={formSelected}\n            setFormSelected={setFormSelected}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import parsePrice from \"./parsePrice\";\n\nexport default (invoice) => {\n  return (\n    invoice.articles\n      .map(({ price, toBePayed }) => {\n        const totalPrice = parsePrice(price) * toBePayed;\n        return totalPrice - totalPrice * (invoice.customer.discount / 100);\n      })\n      .reduce((total, x) => x + total, 0) +\n    parsePrice(invoice.porto) +\n    (parsePrice(invoice.porto) * invoice.customer.ust) / 100\n  );\n};\n","import React, { useState } from \"react\";\nimport { useCompany, useInvoices, useCustomers, useGA } from \"../hooks\";\n\nimport { Button, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../sceletons\";\nimport { formatDate, formatPrice } from \"../services\";\n\nexport default () => {\n  const [\n    invoices,\n    ,\n    removeInvoice,\n    updateInvoice,\n    invoicesLength,\n  ] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n  const [, , , , customersLength] = useCustomers();\n  useGA();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice\n        edit\n        invoice={invoiceSelected}\n        setInvoice={setInvoiceSelected}\n        updateInvoice={updateInvoice}\n        invoices={invoices}\n      />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoicesLength,\n            customer: {\n              ...customerSceleton,\n              id: customersLength,\n            },\n            company,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell>Zahlungseingang</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map(\n            (i) =>\n              i &&\n              typeof i === \"object\" && (\n                <Table.Row key={i.id}>\n                  <Table.Cell>{i.invoiceNumber}</Table.Cell>\n                  <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n                  <Table.Cell>{i.customer.name}</Table.Cell>\n                  <Table.Cell>\n                    {i.articles.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>{formatPrice(i.totalPrice)} €</Table.Cell>\n                  <Table.Cell>\n                    {i.paymentDate ? formatDate(i.paymentDate) : \"Ausstehend\"}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      primary\n                      icon=\"edit\"\n                      onClick={() => setInvoiceSelected(i)}\n                    ></Button>\n                    <Button\n                      negative\n                      icon=\"trash\"\n                      onClick={() => removeInvoice(i.id)}\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors, useGA } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\n\nexport default function Authors() {\n  const [authors, , deleteAuthor, updateAuthor, authorsLength] = useAuthors();\n  const [author, setAuthor] = useState();\n  useGA();\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ ...authorSceleton, id: authorsLength })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={() => {\n                updateAuthor(author);\n                setAuthor();\n              }}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row key={a.id}>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setAuthor(a)}\n                      icon=\"edit\"\n                      primary\n                    ></Button>\n                    <Button\n                      onClick={() => deleteAuthor(a.id)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useInvoices, useCompany, useCustomers, useGA } from \"../../hooks\";\nimport Invoice from \"../../components/Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home() {\n  const [company] = useCompany();\n  const [customers] = useCustomers();\n  const history = useHistory();\n  useGA();\n\n  const [invoices, , , updateInvoice, invoicesLength] = useInvoices();\n  const [invoice, setInvoice] = useState({\n    ...invoiceSceleton,\n    id: invoicesLength,\n    customer: {\n      ...customerSceleton,\n      id: customers.length,\n    },\n    company,\n  });\n  return (\n    <Invoice\n      invoice={invoice}\n      setInvoice={setInvoice}\n      updateInvoice={updateInvoice}\n      invoices={invoices}\n      edit={true}\n      onSave={() => {\n        history.push(\"/invoices\");\n      }}\n    />\n  );\n}\n","import Axios from \"axios\";\nimport config from \"../../config\";\nconst { backendURL } = config();\n\nconst url = backendURL + \"/login\";\n\nexport default async function login(data) {\n  try {\n    const result = await Axios.post(url, data);\n    if (result.data && result.status !== 200) {\n      throw result.data.message;\n    }\n    return result.data;\n  } catch (err) {\n    throw \"Die Email oder das Passwort ist leider falsch.\";\n  }\n}\n","import Axios from \"axios\";\nimport config from \"../../config\";\n\nconst { backendURL } = config();\n\nconst url = backendURL + \"/register\";\n\nexport default async function register(data) {\n  try {\n    const result = await Axios.post(url, data);\n    return result.data;\n  } catch (err) {\n    const {\n      response: {\n        data: { message },\n      },\n    } = err;\n    throw message;\n  }\n}\n","export default async function dataToLocalStorage(data) {\n  const { customers, articles, invoices, authors, company } = data;\n\n  if (customers) {\n    await localStorage.setItem(\"customers\", JSON.stringify(customers));\n  }\n  if (articles) {\n    await localStorage.setItem(\"articles\", JSON.stringify(articles));\n  }\n  if (invoices) {\n    await localStorage.setItem(\"invoices\", JSON.stringify(invoices));\n  }\n  if (authors) {\n    await localStorage.setItem(\"authors\", JSON.stringify(authors));\n  }\n  if (company) {\n    await localStorage.setItem(\"company\", JSON.stringify(company));\n  }\n}\n","export default async function dataFromLocalStorage() {\n  return {\n    invoices: JSON.parse(localStorage.getItem(\"invoices\", [])),\n    customers: JSON.parse(localStorage.getItem(\"customers\", [])),\n    authors: JSON.parse(localStorage.getItem(\"authors\", [])),\n    articles: JSON.parse(localStorage.getItem(\"articles\", [])),\n    company: JSON.parse(localStorage.getItem(\"company\", {})),\n  };\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, Form, Input, Icon, Message } from \"semantic-ui-react\";\nimport { useInvoices, useUser } from \"../../hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./TopNavigationBar.css\";\nimport login from \"../../services/backend/login\";\nimport register from \"../../services/backend/register\";\nimport getData from \"../../services/backend/getData\";\nimport dataToLocalStorage from \"../../services/localStorage/dataToLocalStorage\";\nimport dataFromLocalStorage from \"../../services/localStorage/dataFromLocalStorage\";\nimport postData from \"../../services/backend/postData\";\n\nexport default function TopNavigationBar() {\n  const [invoices] = useInvoices();\n  const history = useHistory();\n  const [loginValues, setLoginValues] = useState({ email: \"\", password: \"\" });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [user, setUser] = useUser();\n  const [modalUse, setModalUse] = useState(\"register\");\n  const [error, setError] = useState(\"\");\n\n  return (\n    <div className=\"oi-top-navigation-bar\">\n      <div className=\"billeroo-top-navigation-left\">\n        <div>\n          <img\n            src=\"/logo.png\"\n            alt=\"Billeroo Logo\"\n            className=\"billeroo-top-navigation-left-logo\"\n          />\n        </div>\n        <Button primary onClick={() => history.push(\"/\")}>\n          <h2 className=\"oi-top-navigation-bar-heading\">Billeroo</h2>\n        </Button>\n      </div>\n      <div className=\"billeroo-top-navigation-bar-buttons\">\n        {invoices.length > 0 && (\n          <div>\n            <Button.Group>\n              <Button\n                content=\"Rechnungen\"\n                onClick={() => history.push(\"invoices\")}\n              />\n              <Button\n                content=\"Artikel\"\n                onClick={() => history.push(\"articles\")}\n              />\n              <Button\n                content=\"Kunden\"\n                onClick={() => history.push(\"customers\")}\n              />\n              <Button\n                content=\"Autoren\"\n                onClick={() => history.push(\"authors\")}\n              />\n            </Button.Group>\n            <Button\n              size=\"large\"\n              className=\"oi-top-navigation-bar-new-invoice\"\n              content=\"Neue Rechnung\"\n              onClick={() => history.push(\"/invoices/new\")}\n              secondary\n            />\n          </div>\n        )}\n        <Button\n          className=\"oi-top-navigation-bar-new-invoice\"\n          onClick={() => setModalIsOpen(true)}\n          {...(user && user.user\n            ? { content: user.user.email }\n            : { icon: \"user\" })}\n          primary\n        />\n\n        {user && user.user ? (\n          <Modal open={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n            <Modal.Header>Nutzer</Modal.Header>\n            <Modal.Content>\n              <div>\n                <p>Angemeldet als {user.user.email}</p>\n                <Button\n                  content=\"Abmelden\"\n                  onClick={() => {\n                    setUser({});\n                    dataToLocalStorage({\n                      articles: [],\n                      invoices: [],\n                      customers: [],\n                      authors: [],\n                    });\n                    window.document.location.href = \"/\";\n                  }}\n                />\n              </div>\n            </Modal.Content>\n          </Modal>\n        ) : (\n          <Modal\n            open={modalIsOpen}\n            onClose={() => {\n              setModalIsOpen(false);\n              setError(\"\");\n            }}\n          >\n            <Modal.Header>\n              {modalUse === \"login\" ? \"Anmelden\" : \"Registrieren\"}\n            </Modal.Header>\n            <Modal.Content>\n              <Message info>\n                {modalUse === \"login\"\n                  ? \"Melden Sie sich an, um diesen Browser mit Ihren Daten zu synchronisieren.\"\n                  : \"Registrieren Sie sich, um Ihre Daten auch auf anderen Geräten zu nutzen.\"}\n              </Message>\n              {error && <Message error>{error}</Message>}\n              <Form>\n                <Form.Field\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  control={Input}\n                  value={loginValues.email}\n                  onChange={(e, { value }) =>\n                    setLoginValues({ ...loginValues, email: value })\n                  }\n                />\n                <Form.Field\n                  label=\"Passwort\"\n                  placeholder=\"Passwort\"\n                  control={Input}\n                  type=\"password\"\n                  value={loginValues.password}\n                  onChange={(e, { value }) =>\n                    setLoginValues({ ...loginValues, password: value })\n                  }\n                />\n                <Button\n                  onClick={() => {\n                    setModalUse(modalUse === \"register\" ? \"login\" : \"register\");\n                    setError(\"\");\n                  }}\n                  type=\"button\"\n                >\n                  {modalUse === \"register\" ? \"Anmelden\" : \"Registrieren\"}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  primary\n                  onClick={async () => {\n                    let user;\n                    try {\n                      if (modalUse === \"login\") {\n                        user = await login(loginValues);\n                        await localStorage.setItem(\n                          \"user\",\n                          JSON.stringify(user)\n                        );\n                        const data = await getData();\n                        dataToLocalStorage(data);\n                      } else {\n                        user = await register(loginValues);\n                        await localStorage.setItem(\n                          \"user\",\n                          JSON.stringify(user)\n                        );\n\n                        const data = await dataFromLocalStorage();\n                        postData(data);\n                      }\n                      setUser(user);\n                      setModalIsOpen(false);\n                      window.document.location.href = \"/\";\n                    } catch (err) {\n                      setError(err);\n                    }\n                  }}\n                >\n                  {modalUse === \"login\" ? \"Anmelden\" : \"Registrieren\"}\n                  <Icon name=\"right chevron\" />\n                </Button>\n              </Form>\n            </Modal.Content>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useUser() {\n  return useLocalStorage(\"user\", {});\n}\n","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nimport \"./Footer.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Footer() {\n  return (\n    <div className=\"billeroo-footer\">\n      <div className=\"billeroo-footer-row\">\n        <div className=\"billeroo-footer-column\">\n          <div className=\"billeroo-footer-cell\">\n            <h3>Social Media</h3>\n            <ul>\n              <li>\n                <Icon name=\"twitter\" /> Twitter\n              </li>\n              <li>\n                <Icon name=\"Instagram\" /> Instagram\n              </li>\n            </ul>\n          </div>\n          <div className=\"billeroo-footer-cell\">\n            <h3>Entdecke Billeroo</h3>\n            <ul>\n              <li>\n                <Link to=\"/invoices/new\">Rechnung erstellen</Link>\n              </li>\n              <li>\n                <Link to=\"/faq\">FAQ</Link>\n              </li>\n              <li>\n                <Link to=\"/blog\">Blog</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"billeroo-footer-column\">\n          <div className=\"billeroo-footer-cell\">\n            <h3>Kontakt</h3>\n            <p>\n              service@billeroo.de <br />\n            </p>\n            <p>\n              +49 152 065543\n              <br />\n            </p>\n            <p>\n              Billeroo\n              <br />\n              Kniprodestraße 22\n              <br />\n              10407 Berlin\n              <br />\n              Deutschland\n            </p>\n          </div>\n        </div>\n\n        <div className=\"billeroo-footer-column\">\n          <div className=\"billeroo-footer-cell\">\n            <h3>Rechtliches</h3>\n            <ul>\n              <li>\n                <Link>Impressum</Link>\n              </li>\n              <li>\n                <Link>Datenschutzerklärung</Link>\n              </li>\n              <li>\n                <Link>AGB</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"billeroo-footer-row\">\n        <p>Made with ❤ by Billeroo</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./Landing.css\";\nimport { Button, Icon, Card, Table } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router\";\nimport Footer from \"../../components/Footer\";\nimport { useGA } from \"../../hooks\";\n\nexport default function LandingPage() {\n  useGA();\n  const history = useHistory();\n  const openNewInvoice = () => {\n    history.push(\"/invoices/new\");\n  };\n  return (\n    <div>\n      <div className=\"invoice-app-container\">\n        <div className=\"billeroo-landing-page\">\n          <div className=\"billeroo-title-section\">\n            <div className=\"billeroo-title-section-text\">\n              <h1 className=\"billeroo-title-section-text-title\">\n                Rechnungen anlegen und verwalten\n              </h1>\n              <p className=\"billeroo-title-section-text-text \">\n                Erstelle schnell und einfach Rechnungen für deinen Verlag.\n                Behalte den Überblick deiner bereits angelegte Rechnungen auf\n                allen Geräten.\n              </p>\n              <Button\n                content=\"Rechnung erstellen\"\n                secondary\n                onClick={openNewInvoice}\n              />\n            </div>\n            <div className=\"billeroo-title-section-image\">\n              <img src=\"/img/invoice-example.png\" />\n            </div>\n          </div>\n          <div className=\"billeroo-reference-section\">\n            <div className=\"billeroo-reference-section-text\">\n              <h1 className=\"billeroo-reference-section-text-title\">\n                Diese Unternehmen arbeiten bereits mit uns\n              </h1>\n            </div>\n            <div className=\"billeroo-reference-section-images\">\n              <img\n                src=\"/img/findling-logo.png\"\n                className=\"billeroo-reference-section-images-logo\"\n              />\n            </div>\n          </div>\n          <div className=\"billeroo-added-value-section billeroo-alternate-section\">\n            <div className=\"billeroo-added-value-section-text\">\n              <h1 className=\"billeroo-added-value-section-text-title\">\n                Billeroo erleichtert die ...\n              </h1>\n            </div>\n            <div className=\"billeroo-added-value-section-values\">\n              <div className=\"billeroo-added-value-section-value\">\n                <div className=\"billeroo-added-value-section-value-icon-wrapper\">\n                  <Icon name=\"calculator\" size=\"big\" color=\"primary\" />\n                </div>\n                <h2>Kalkulation</h2>\n                <p>\n                  Billeroo rechnet aus allen Angaben, wie Preisen, Rabatten oder\n                  der Mehrwertsteuer direkt die Netto- und Bruttobeträge aus.\n                </p>\n              </div>\n              <div className=\"billeroo-added-value-section-value\">\n                <div className=\"billeroo-added-value-section-value-icon-wrapper\">\n                  <Icon name=\"list\" size=\"big\" color=\"primary\" />\n                </div>\n                <h2>Übersicht</h2>\n                <p>\n                  Alle Daten auf einen Blick. Rechnungen, Kunden und Artikel\n                  findest du gut sortiert, um dir deine Arbeit zu erleichtern.\n                </p>\n              </div>\n              <div className=\"billeroo-added-value-section-value\">\n                <div className=\"billeroo-added-value-section-value-icon-wrapper\">\n                  <Icon name=\"slideshare\" size=\"big\" color=\"primary\" />\n                </div>\n\n                <h2>Kooperation</h2>\n                <p>\n                  Greife von überall auf deine Daten zu und teile sie mit deinen\n                  Kollegen.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"billeroo-call-to-action-section\">\n            <Button\n              onClick={openNewInvoice}\n              content=\"Erste Rechnung erstellen\"\n              secondary\n              size=\"huge\"\n            />\n          </div>\n          <div className=\"billeroo-price-section\">\n            <div className=\"billeroo-price-section-text\">\n              <h1 className=\"billeroo-price-section-text-title\">Preise</h1>\n            </div>\n            <Table celled color=\"teal\" unstackable>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell></Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <div>\n                      <Icon name=\"paper plane\" size=\"big\" />\n                    </div>\n                    <div>Starter</div>\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <div>\n                      <Icon name=\"plane\" size=\"big\" />\n                    </div>\n                    <div>Basic</div>\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <div>\n                      <Icon name=\"rocket\" size=\"big\" />\n                    </div>\n                    <div>Premium</div>\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>Preis</Table.Cell>\n                  <Table.Cell>0 €/Monat</Table.Cell>\n                  <Table.Cell>10 €/Monat</Table.Cell>\n                  <Table.Cell>ab 50 €/Monat</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Rechnungen</Table.Cell>\n                  <Table.Cell>20/Monat</Table.Cell>\n                  <Table.Cell>200/Monat</Table.Cell>\n                  <Table.Cell>Endlos</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Accounts</Table.Cell>\n                  <Table.Cell>1</Table.Cell>\n                  <Table.Cell>1</Table.Cell>\n                  <Table.Cell>Beliebig</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Support</Table.Cell>\n                  <Table.Cell>\n                    <Icon name=\"times\" />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Icon name=\"check\" />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Icon name=\"check\" />\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Individuelles Desgin</Table.Cell>\n                  <Table.Cell>\n                    <Icon name=\"times\" />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Icon name=\"times\" />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Icon name=\"check\" />\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell></Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      content=\"Jetzt Starten\"\n                      onClick={openNewInvoice}\n                      primary\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      content=\"Jetzt Testen\"\n                      onClick={openNewInvoice}\n                      secondary\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      primary\n                      content=\"Jetzt Testen\"\n                      onClick={openNewInvoice}\n                    />\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useDebugValue } from \"react\";\nimport { Accordion } from \"semantic-ui-react\";\nimport { useGA } from \"../../hooks\";\nimport \"./FAQ.css\";\n\nexport default function FAQ() {\n  useGA();\n  const panels = [\n    {\n      key: \"panel-1\",\n      title: \"Wie lege ich eine Rechnung an?\",\n      content:\n        'Um eine Rechnung zu erstellen, klickst du in der Navigationleiste auf den Button \"Neue Rechnung\". Es öffnet sich eine neue Seite auf der du links die Rechnung siehst. Du kannst nun anfangen den Kunden und Artikel in die Rechnung einzutragen.',\n    },\n  ];\n  return (\n    <div className=\"billeroo-faq-page\">\n      <h1 className=\"billeroo-faq-page-title\">FAQ - Häufig gestellte Fragen</h1>\n      <Accordion defaultActiveIndex={1} panels={panels} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Authors from \"./components/Authors/Authors\";\nimport useMigration from \"./hooks/useMigration\";\nimport Home from \"./pages/Home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopNavigationBar from \"./components/TopNavigationBar\";\n\nimport \"semantic-ui-less/semantic.less\";\nimport LandingPage from \"./pages/Landing\";\nimport FAQ from \"./pages/FAQ/FAQ\";\n\nconst App = () => {\n  //useMigration();\n\n  return (\n    <Router>\n      <TopNavigationBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <LandingPage />\n        </Route>\n        <Route exact path=\"/invoices\">\n          <div className=\"invoice-app-container\">\n            <Invoices />\n          </div>\n        </Route>\n        <Route exact path=\"/invoices/new\">\n          <div className=\"invoice-app-container\">\n            <Home />\n          </div>\n        </Route>\n        <Route path=\"/customers\">\n          <div className=\"invoice-app-container\">\n            <Customers />\n          </div>\n        </Route>\n        <Route path=\"/articles\">\n          <div className=\"invoice-app-container\">\n            <Articles />\n          </div>\n        </Route>\n\n        <Route path=\"/authors\">\n          <div className=\"invoice-app-container\">\n            <Authors />\n          </div>\n        </Route>\n        <Route path=\"/faq\">\n          <div className=\"invoice-app-container\">\n            <FAQ />\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}