{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","hooks/useCompany.js","hooks/useInvoices.js","hooks/useArticles.js","hooks/useAuthors.js","hooks/useCustomers.js","components/Editor/Editor.js","components/CustomerForm/CustomerForm.js","components/Customers.js","components/Author/Author.js","services/formatDate.js","services/parsePrice.js","services/formatPrice.js","components/Article.js","components/Articles/Articles.js","components/DropZone.js","components/CompanyForm.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePageOverlay.js","components/SinglePage/SinglePage.js","components/Invoice/Invoice.js","services/calculateTotalPrice.js","components/Invoices.js","components/Authors/Authors.js","migration/authors.js","migration/useMigrationWrapper.js","hooks/useMigration.js","migration/index.js","pages/Home/Home.js","config/local.js","config/index.js","services/backend/login.js","services/backend/register.js","services/backend/getData.js","services/localStorage/dataToLocalStorage.js","services/localStorage/dataFromLocalStorage.js","services/backend/postData.js","components/TopNavigationBar/TopNavigationBar.js","hooks/useUser.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","authors","invoiceAddress","shippingAddress","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","logo","aboveClientInvoiceAddress","footerText","invoiceText","subjectAndBelow","contactInformation","contact","books","useCompany","companySceleton","useInvoices","useArticles","useAuthors","useCustomers","Editor","props","active","setActive","onFocus","onBlur","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","className","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","CustomerForm","customer","setCustomer","RichTextEditor","createValueFromString","setInvoiceAddress","setShippingAddress","useEffect","handleCustomerChange","e","parseFloat","isNaN","updateRichtext","Form","Group","Field","control","Input","onChange","placeholder","icon","customers","setCustomers","Button","onClick","customerSceleton","id","length","primary","Modal","onClose","open","Header","Content","Actions","content","negative","labelPosition","Table","celled","Row","HeaderCell","Body","map","c","Cell","dangerouslySetInnerHTML","__html","Author","author","setAuthor","percent","authorPrice","setAuthorPrice","handleAuthorChange","toFixed","width","target","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","parsePrice","replace","formatPrice","Article","article","setArticle","articlePrice","setArticlePrice","handleArticleChange","authorOptions","undefined","text","concat","a","type","Dropdown","search","selection","options","authorSceleton","Segment","setArticles","invoiceArticle","setInvoiceArticle","invoices","filteredInvoices","useMemo","reduce","list","i","articleSceleton","_articles","positive","invoice","paymentDate","secondary","pos","deleteArticle","baseStyle","flex","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","isDragAccept","isDragReject","getRootProps","getInputProps","event","stopPropagation","CompanyForm","company","setCompany","selected","setFooterText","setSubjectAndBelow","setInvoiceText","setContactInformation","setAboveClientInvoiceAddress","updateRichText","updateCompany","src","alt","files","file","reader","FileReader","onload","result","readAsDataURL","setInvoice","formSelected","wrapperClass","setFormSelected","selectedArticles","setSelectedArticles","toBePayed","setToBePayed","toBeSend","setToBeSend","newArticle","setNewArticle","setPorto","setAuthors","articleId","updateInvoice","checked","toggleNewArticle","updateInvoiceDate","customerOptions","articlesOptions","slice","closeIcon","Container","Card","fluid","widths","filter","_authors","v","DatePicker","dateFormat","Checkbox","payed","toggle","PrintButton","fileName","input","document","getElementById","html2canvas","scale","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","Page","children","singleMode","height","SinglePageOverlay","SinglePage","articles_net_price","totalPrice","total","x","companyColor","multiple","parseInt","totalPriceWithDiscount","net","edit","setInvoices","onSave","newInvoice","Message","info","header","calculateTotalPrice","_invoices","_customers","invoiceSelected","setInvoiceSelected","invoiceSceleton","Authors","deleteAuthor","useAddAuthorsToArticles","migrate","version","currentVersion","setCurrentVersion","useMigrationWrapper","useMigration","Home","history","useHistory","push","backendURL","process","local","url","config","login","data","Axios","post","status","message","register","getData","user","token","jwt","get","headers","Authorization","dataToLocalStorage","dataFromLocalStorage","postData","TopNavigationBar","email","password","loginValues","setLoginValues","modalIsOpen","setModalIsOpen","setUser","modalUse","setModalUse","setError","size","location","href","Icon","render","exact","path","Invoices","Customers"],"mappings":"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","file":"static/js/main.6dc64812.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  name: \"\",\n  empty: true,\n  price: \"20,00\",\n  isbn: \"\",\n  amount: 1,\n  authors: [],\n};\n","export default {\n  name: \"Max Mustermann\",\n  invoiceAddress:\n    \"<p>musterdomain.de<br/>\\\n  Muster Firma GbR<br/>\\\n  Musterstraße 2<br/>\\\n  15366 Musterstadt</p>\",\n  shippingAddress:\n    \"<p>musterdomain.de • Muster Firma GbR<br/>\\\n  Musterstraße 2 • 15366 Musterstadt</p>\",\n  discount: 0,\n  ust: 7,\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5,00\",\n  finalText: \"\",\n  articles: [],\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  logo: \"\",\n  aboveClientInvoiceAddress:\n    \"<p>Verlag GbR • Musterstraße 12 • 10405 Musterstadt</p>\",\n  footerText:\n    \"<p><b>Geschäftsführung</b> Max Mustermann<br/>\\\n  <b>Bankverbindung</b> Postbank • IBAN DE 00 0000 0000 0000 00 • BIC ABCDEFGHIJKL<br/>\\\n  <b>Steuernummer</b> 000/000/00000 | <b>USt-IdNr.</b> DE000000000</p>\",\n  invoiceText:\n    \"<p>Zahlen Sie bitte den Rechnungsbetrag bis zum <Datum> unter Angabe der Rechnungsnummer\\\nauf unten stehendes Konto.<br/>\\\nDie gelieferte Ware bleibt bis zur vollständigen Bezahlung Eigentum des Verlages.<br/>\\\nVielen Dank für Ihre Bestellung.</p>\\\n<p>Mit herzlichen Grüßen.<br/>\\\nMusterstadt, den <Datum></p>\",\n  subjectAndBelow:\n    \"<h3>Rechnung</h3>\\\n  <p><br></p>\\\n  <p>wir erlauben uns, in Rechnung zu stellen:</p>\",\n  contactInformation:\n    \"<p>Buch- und Zeitschriftenverlag GbR<br>\\\n  Max Mustermann</p>\\\n  <p>Hauptsitz<br>\\\n  Musterstraße 12<br>\\\n  10405 Musterstadt<br>\\\n  Telefon 000 / 00 00 00</p>\\\n  <p>Büro Musterstadt<br>\\\n  Musterstraße 19<br>\\\n  10409 Musterstadt<br>\\\n  Telefon 030 / 00 00 00 00</p>\\\n  <p>info@muster-email.de<br>\\\n  www.musterdomain.de</p>\\\n  <p>Steuernummer 000/000/00000<br>\\\n  Finanzamt Musterstadt</p>\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  books: [],\n};\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\n\nexport default function useCompany() {\n  return useLocalStorage(\"company\", companySceleton);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useInvoices() {\n  return useLocalStorage(\"invoices\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useArticles() {\n  return useLocalStorage(\"articles\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useAuthors() {\n  return useLocalStorage(\"authors\", []);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useCustomers() {\n  return useLocalStorage(\"customers\", []);\n}\n","import React, { useState } from \"react\";\nimport RichTextEditor from \"react-rte\";\n\nimport \"./Editor.css\";\n\nexport default function Editor(props) {\n  const [active, setActive] = useState(false);\n  return (\n    <RichTextEditor\n      {...props}\n      onFocus={() => setActive(true)}\n      onBlur={() => {\n        if (props.onBlur && typeof props.onBlur === \"function\") {\n          props.onBlur();\n        }\n        setActive(false);\n      }}\n      toolbarConfig={{\n        display: active\n          ? [\n              \"INLINE_STYLE_BUTTONS\",\n              \"BLOCK_TYPE_BUTTONS\",\n              \"LINK_BUTTONS\",\n              \"BLOCK_TYPE_DROPDOWN\",\n              \"HISTORY_BUTTONS\",\n            ]\n          : [],\n        INLINE_STYLE_BUTTONS: [\n          { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\n          { label: \"Italic\", style: \"ITALIC\" },\n          { label: \"Underline\", style: \"UNDERLINE\" },\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n          { label: \"Normal\", style: \"unstyled\" },\n          { label: \"Heading Large\", style: \"header-one\" },\n          { label: \"Heading Medium\", style: \"header-two\" },\n          { label: \"Heading Small\", style: \"header-three\" },\n        ],\n        BLOCK_TYPE_BUTTONS: [\n          { label: \"UL\", style: \"unordered-list-item\" },\n          { label: \"OL\", style: \"ordered-list-item\" },\n        ],\n      }}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input } from \"semantic-ui-react\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"../Editor/Editor\";\n\nexport default function CustomerForm({ customer, setCustomer }) {\n  const [invoiceAddress, setInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n  );\n\n  const [shippingAddress, setShippingAddress] = useState(\n    RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n  );\n\n  useEffect(() => {\n    setInvoiceAddress(\n      RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n    );\n    setShippingAddress(\n      RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n    );\n  }, [customer]);\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const updateRichtext = (name, value) => {\n    setCustomer({ ...customer, [name]: value.toString(\"html\") });\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"Kundenname\"\n          value={customer.name}\n          name=\"name\"\n          onChange={handleCustomerChange}\n        />\n      </Form.Group>\n      <Form.Field\n        control={Editor}\n        label={\"Rechnungsadresse\"}\n        onChange={setInvoiceAddress}\n        value={invoiceAddress}\n        onBlur={() => {\n          updateRichtext(\"invoiceAddress\", invoiceAddress);\n        }}\n      />\n      <Form.Field\n        control={Editor}\n        label={\"Lieferadress\"}\n        onChange={setShippingAddress}\n        value={shippingAddress}\n        onBlur={() => {\n          updateRichtext(\"shippingAddress\", shippingAddress);\n        }}\n      />\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"MwST\"\n          placeholder=\"7\"\n          name=\"ust\"\n          icon=\"percent\"\n          onChange={handleCustomerChange}\n          value={customer.ust}\n        />\n        <Form.Field\n          control={Input}\n          label=\"Kundenrabatt\"\n          placeholder=\"0\"\n          icon=\"percent\"\n          name=\"discount\"\n          onChange={handleCustomerChange}\n          value={customer.discount}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { customer as customerSceleton } from \"../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport CustomerForm from \"./CustomerForm/CustomerForm\";\nexport default () => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState();\n\n  const saveCustomer = () => {\n    setCustomers([...customers, customer]);\n    setCustomer();\n  };\n  return (\n    <div>\n      <Button\n        onClick={() =>\n          setCustomer({ ...customerSceleton, id: customers.length })\n        }\n        primary\n      >\n        Neuer Kunde\n      </Button>\n      {customer && (\n        <Modal onClose={() => setCustomer()} open={true}>\n          <Modal.Header>Kunde</Modal.Header>\n          <Modal.Content>\n            <CustomerForm customer={customer} setCustomer={setCustomer} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setCustomer()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={saveCustomer}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsadresse</Table.HeaderCell>\n            <Table.HeaderCell>Lieferadress</Table.HeaderCell>\n            <Table.HeaderCell>Rabatt</Table.HeaderCell>\n            <Table.HeaderCell>MwST</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {customers.map((c) => (\n            <Table.Row>\n              <Table.Cell>{c.name}</Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.invoiceAddress }} />\n              </Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.shippingAddress }} />\n              </Table.Cell>\n              <Table.Cell>{c.discount}</Table.Cell>\n              <Table.Cell>{c.ust}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\n\nexport default function Author({ author, setAuthor }) {\n  const [authorPrice, setAuthorPrice] = useState(author.percent);\n\n  const handleAuthorChange = (e, { name, value }) => {\n    if (name === \"percent\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setAuthorPrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setAuthorPrice(value);\n    }\n    setAuthor({ ...author, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleAuthorChange}\n          value={author.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Kontakt\"\n          placeholder=\"Tel, Email, ...\"\n          onChange={handleAuthorChange}\n          name=\"contact\"\n          value={author.contact}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Prozent\"\n          placeholder=\"Prozent\"\n          name=\"percent\"\n          icon=\"percent\"\n          onChange={(e, { value }) => setAuthorPrice(value)}\n          onBlur={(e) => {\n            handleAuthorChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={authorPrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React from \"react\";\n\nexport default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: `${day < 10 ? \"0\" + day : day}.&#8202;${\n          month < 10 ? \"0\" + month : month\n        }.&#8202;${date.getFullYear()}`,\n      }}\n    />\n  );\n}\n","export default function parsePrice(price) {\n  return parseFloat(price.replace(\",\", \".\"));\n}\n","export default function formatPrice(price) {\n  return `${price.toFixed(2)}`.replace(\".\", \",\");\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { Form, Input, Dropdown } from \"semantic-ui-react\";\nimport { useAuthors } from \"../hooks\";\nimport { author as authorSceleton } from \"../sceletons\";\nimport Author from \"./Author\";\nimport { Segment } from \"semantic-ui-react\";\nimport { formatPrice } from \"../services\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n  const [authors] = useAuthors();\n  const [author, setAuthor] = useState(article.authors[0]);\n\n  useEffect(() => {\n    setArticle({ ...article, authors: author ? [author] : [] });\n  }, [author]);\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setArticlePrice(\"0,00\");\n        return;\n      }\n      value = formatPrice(value);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  const authorOptions = [\n    { key: undefined, value: undefined, text: \"\" },\n    { key: authors.length, value: authors.length, text: \"Neuer Autor\" },\n  ].concat(\n    authors.map((a) => ({\n      key: a.id,\n      value: a.id,\n      text: a.name,\n    }))\n  );\n\n  const handleAuthorChange = (e, { value }) => {\n    if (value === undefined) {\n      setAuthor();\n    } else if (value < authors.length) {\n      setAuthor(authors[value]);\n    } else {\n      setAuthor({ ...authorSceleton, id: authors.length });\n    }\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={(e) => {\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n      <Form.Field\n        label=\"Wählen Sie einen Autoren aus:\"\n        control={Dropdown}\n        search\n        selection\n        options={authorOptions}\n        value={author ? author.id : undefined}\n        onChange={handleAuthorChange}\n      />\n      {author && (\n        <Segment>\n          <Author author={author} setAuthor={setAuthor} />\n        </Segment>\n      )}\n    </Form>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport { useArticles, useInvoices } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\nimport { formatDate } from \"../../services\";\n\nexport default () => {\n  const [articles, setArticles] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const [invoices] = useInvoices();\n  const filteredInvoices = useMemo(() => {\n    if (!invoiceArticle) {\n      return null;\n    }\n    return invoices.reduce((list, i) => {\n      for (let a in i.articles) {\n        const article = i.articles[a];\n        if (article.id === invoiceArticle.id) {\n          return [\n            ...list,\n            {\n              ...i,\n              article,\n            },\n          ];\n        }\n      }\n      return list;\n    }, []);\n  }, [invoices, invoiceArticle]);\n  const updateArticle = () => {\n    let _articles = [...articles];\n    _articles[article.id] = article;\n    setArticles(_articles);\n    setArticle();\n  };\n\n  const deleteArticle = (pos) => {\n    const _articles = [...articles];\n    _articles[pos] = undefined;\n    setArticles(_articles);\n  };\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articles.length })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Artikel</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateArticle}\n              content=\"Speichern\"\n              positive\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                  <Table.HeaderCell>Zahlungsdatum</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {filteredInvoices.map((invoice) => (\n                  <Table.Row>\n                    <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                    <Table.Cell>{invoice.customer.name}</Table.Cell>\n                    <Table.Cell>{invoice.article.amount}</Table.Cell>\n                    <Table.Cell>{invoice.article.price}</Table.Cell>\n                    <Table.Cell>\n                      {invoice.paymentDate\n                        ? formatDate(invoice.paymentDate)\n                        : \"Ausstehend\"}\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Menge</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>{a.amount}</Table.Cell>\n                  <Table.Cell>{a.price}</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setArticle(a)}\n                      primary\n                      icon=\"edit\"\n                    ></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                      secondary\n                    ></Button>\n                    <Button\n                      onClick={() => deleteArticle(i)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const { isDragActive, isDragAccept, isDragReject } = useDropzone({\n    accept: \"image/*\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: (event) => event.stopPropagation(),\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport DropZone from \"./DropZone\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"./Editor/Editor\";\n\nexport default function CompanyForm({ company, setCompany, selected }) {\n  const [footerText, setFooterText] = useState(\n    RichTextEditor.createValueFromString(company.footerText, \"html\")\n  );\n  const [subjectAndBelow, setSubjectAndBelow] = useState(\n    RichTextEditor.createValueFromString(company.subjectAndBelow, \"html\")\n  );\n  const [invoiceText, setInvoiceText] = useState(\n    RichTextEditor.createValueFromString(company.invoiceText, \"html\")\n  );\n  const [contactInformation, setContactInformation] = useState(\n    RichTextEditor.createValueFromString(company.contactInformation, \"html\")\n  );\n  const [aboveClientInvoiceAddress, setAboveClientInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(\n      company.aboveClientInvoiceAddress,\n      \"html\"\n    )\n  );\n\n  const updateRichText = (name, value) => {\n    setCompany({ ...company, [name]: value.toString(\"html\") });\n  };\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n  return (\n    <Form>\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n      )}\n      {selected === \"logo\" && (\n        <Segment>\n          <h4>Logo</h4>\n          {company.logo !== \"\" ? (\n            <div>\n              <img src={company.logo} alt=\"company logo\" />\n              <Button\n                negative\n                onClick={() => setCompany({ ...company, logo: \"\" })}\n              >\n                Löschen\n              </Button>\n            </div>\n          ) : (\n            <DropZone onDrop={onDropHandler} />\n          )}\n        </Segment>\n      )}\n      {selected === \"aboveClientInvoiceAddress\" && (\n        <Form.Field\n          control={Editor}\n          value={aboveClientInvoiceAddress}\n          onChange={setAboveClientInvoiceAddress}\n          onBlur={() => {\n            updateRichText(\n              \"aboveClientInvoiceAddress\",\n              aboveClientInvoiceAddress\n            );\n          }}\n          label=\"Absender\"\n          name=\"aboveClientInvoiceAddress\"\n        />\n      )}\n      {selected === \"contactInformation\" && (\n        <Form.Field\n          control={Editor}\n          value={contactInformation}\n          onChange={setContactInformation}\n          onBlur={() => {\n            updateRichText(\"contactInformation\", contactInformation);\n          }}\n          label=\"Kontakt Informationen\"\n          name=\"contactInformation\"\n        />\n      )}\n      {selected === \"subjectAndBelow\" && (\n        <Form.Field\n          control={Editor}\n          value={subjectAndBelow}\n          onChange={setSubjectAndBelow}\n          onBlur={() => {\n            updateRichText(\"subjectAndBelow\", subjectAndBelow);\n          }}\n          label=\"Betreff und Begrüßung\"\n          name=\"subjectAndBelow\"\n        />\n      )}\n      {selected === \"invoiceText\" && (\n        <Form.Field\n          control={Editor}\n          value={invoiceText}\n          onChange={setInvoiceText}\n          onBlur={() => {\n            updateRichText(\"invoiceText\", invoiceText);\n          }}\n          label=\"Rechnungstext\"\n          name=\"invoiceText\"\n        />\n      )}\n      {selected === \"footerText\" && (\n        <Form.Field\n          control={Editor}\n          value={footerText}\n          onChange={(value) => {\n            setFooterText(value);\n          }}\n          onBlur={() => {\n            updateRichText(\"footerText\", footerText);\n          }}\n          label=\"Fußzeile\"\n          name=\"footerText\"\n        />\n      )}\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Farbe\"\n          control={Input}\n          placeholder=\"z.B. #ffffff oder rgb(120,0,0)\"\n          name=\"companyColor\"\n          onChange={updateCompany}\n          value={company.color}\n        />\n      )}\n    </Form>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport {\n  useLocalStorage,\n  useCompany,\n  useCustomers,\n  useAuthors,\n} from \"../../hooks\";\nimport {\n  Container,\n  Form,\n  Input,\n  Card,\n  Modal,\n  Button,\n  Checkbox,\n  Dropdown,\n  Segment,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport Article from \"../Article\";\nimport CustomerForm from \"../CustomerForm/CustomerForm\";\nimport CompanyForm from \"../CompanyForm\";\nimport { formatPrice } from \"../../services\";\n\nexport default ({\n  invoice,\n  setInvoice,\n  formSelected = [],\n  wrapperClass,\n  setFormSelected,\n}) => {\n  const [customers] = useCustomers();\n  const [company, setCompany] = useCompany();\n  const [customer, setCustomer] = useState(\n    customers[invoice.customer.id] || invoice.customer\n  );\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [selectedArticles, setSelectedArticles] = useState(invoice.articles);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articles.length,\n  });\n  const [toBePayed, setToBePayed] = useState(1);\n  const [toBeSend, setToBeSend] = useState(1);\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [porto, setPorto] = useState(invoice.porto);\n  const [authors, setAuthors] = useAuthors();\n\n  useEffect(() => {\n    setInvoice({\n      ...invoice,\n      customer,\n      articles: selectedArticles.map((a) => ({\n        ...articles[a.articleId],\n        ...a,\n      })),\n      company,\n    });\n  }, [customer, selectedArticles, company]);\n\n  const updateInvoice = (e, { name, value, checked }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = formatPrice(value);\n      setPorto(value);\n    }\n    if (name === \"payed\") {\n      value = checked;\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    setArticle({\n      ...articleSceleton,\n      id: articles.length + 1,\n    });\n    toggleNewArticle();\n    if (article.authors.length > 0) {\n      const _authors = [...authors];\n      _authors[article.authors[0].id] = article.authors[0];\n      setAuthors(_authors);\n    }\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  const customerOptions = useMemo(() => {\n    let list = [\n      {\n        key: customers.length,\n        value: customers.length,\n        text: `Neuer Kunde`,\n      },\n    ];\n    return list.concat(\n      customers.map((c) => ({\n        key: c.id,\n        text: c.name,\n        value: c.id,\n      }))\n    );\n  }, [customers, customer]);\n\n  const articlesOptions = useMemo(() => {\n    const list = [];\n    return list.concat(\n      articles.map((a) => {\n        let text = a.name.slice(0, 7);\n        if (text !== a.name) {\n          text += \"...\";\n        }\n        return {\n          key: a.id,\n          value: a.id,\n          text,\n        };\n      })\n    );\n  }, [articles]);\n\n  const handleCustomerChange = (e, { value }) => {\n    if (value < customers.length) setCustomer(customers[value]);\n    else setCustomer({ ...customerSceleton, id: customers.length });\n  };\n\n  const handleArticleChange = (id, name, value) => {\n    if (id >= selectedArticles.length) {\n      if (value >= articles.length) {\n        return;\n      }\n      setSelectedArticles([\n        ...selectedArticles,\n        { toBeSend, toBePayed, articleId: value },\n      ]);\n      setToBeSend(1);\n      setToBePayed(1);\n    } else {\n      const _articles = [...selectedArticles];\n      _articles[id][name] = value;\n      setSelectedArticles(_articles);\n    }\n  };\n\n  const removeArticle = (id) => {\n    setSelectedArticles(selectedArticles.filter((a, i) => i !== id));\n  };\n\n  return (\n    <div className={wrapperClass}>\n      <div className=\"invoice-form-buttons\">\n        <Button onClick={toggleNewArticle} primary>\n          Neuen Artikel Anlegen\n        </Button>\n      </div>\n      <div className={\"invoice-form \"}>\n        {formSelected[0] === \"customer\" && (\n          <Modal open onClose={() => setFormSelected([])} closeIcon>\n            <div className=\"invoice-form-wrap\">\n              <Form>\n                <Form.Field\n                  label=\"Wählen Sie einen Kunden aus:\"\n                  control={Dropdown}\n                  search\n                  selection\n                  options={customerOptions}\n                  value={customer.id}\n                  onChange={handleCustomerChange}\n                />\n              </Form>\n              <Segment>\n                <CustomerForm customer={customer} setCustomer={setCustomer} />\n              </Segment>\n            </div>\n          </Modal>\n        )}\n        <Container>\n          <Card fluid>\n            <Card.Content>\n              <div className=\"invoice-form-wrap\">\n                <div>\n                  <Form>\n                    {selectedArticles.length > 0 && (\n                      <div>\n                        <h3>Artikel in der Rechnung</h3>\n                        {selectedArticles.map((a, i) => (\n                          <div>\n                            <Form.Group widths=\"equal\">\n                              <Form.Input\n                                fluid\n                                name=\"toBeSend\"\n                                type=\"number\"\n                                label=\"Senden\"\n                                value={a.toBeSend}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                              <Form.Input\n                                fluid\n                                name=\"toBePayed\"\n                                type=\"number\"\n                                label=\"Bezahlen\"\n                                value={a.toBePayed}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n\n                              <Form.Field\n                                control={Dropdown}\n                                fluid\n                                label=\"Artikel\"\n                                name=\"articleId\"\n                                search\n                                selection\n                                options={articlesOptions}\n                                value={a.articleId}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                              <Form.Field>\n                                <label>&nbsp;</label>\n                                <Button\n                                  icon=\"trash\"\n                                  negative\n                                  onClick={() => removeArticle(i)}\n                                />\n                              </Form.Field>\n                            </Form.Group>\n                          </div>\n                        ))}\n                        <hr></hr>\n                      </div>\n                    )}\n                    <h3>Artikel hinzufügen</h3>\n\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        fluid\n                        name=\"amount\"\n                        type=\"number\"\n                        label=\"Zu Senden\"\n                        value={toBeSend}\n                        onChange={(e, { value }) => setToBeSend(value)}\n                      />\n                      <Form.Input\n                        fluid\n                        name=\"amountPayed\"\n                        type=\"number\"\n                        label=\"Zu Bezahlen\"\n                        value={toBePayed}\n                        onChange={(e, { value }) => setToBePayed(value)}\n                      />\n                      <Form.Field\n                        control={Dropdown}\n                        fluid\n                        label=\"Artikel\"\n                        name=\"articleId\"\n                        search\n                        selection\n                        options={articlesOptions}\n                        value={article.id}\n                        onChange={(e, { value }) =>\n                          handleArticleChange(\n                            selectedArticles.length,\n                            \"articleId\",\n                            value\n                          )\n                        }\n                      />\n                    </Form.Group>\n                  </Form>\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle} closeIcon>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      positive\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </div>\n            </Card.Content>\n          </Card>\n          {formSelected[0] === \"general\" && (\n            <Modal open onClose={() => setFormSelected([])} closeIcon>\n              <div className=\"invoice-form-wrap\">\n                <Form>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"invoiceDate\" && (\n                      <Form.Field\n                        label=\"Rechnungsdatum\"\n                        name=\"invoiceDate\"\n                        selected={new Date(invoice.invoiceDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"orderDate\" && (\n                      <Form.Field\n                        label=\"Bestelldatum\"\n                        name=\"orderDate\"\n                        selected={new Date(invoice.orderDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"shippingDate\" && (\n                      <Form.Field\n                        label=\"Versanddatum\"\n                        name=\"shippingDate\"\n                        selected={new Date(invoice.shippingDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                  </Form.Group>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"porto\" && (\n                      <Form.Field\n                        label=\"Porto\"\n                        value={porto}\n                        name=\"porto\"\n                        onChange={(e, { value }) => setPorto(value)}\n                        control={Input}\n                        onBlur={(e) =>\n                          updateInvoice(e, {\n                            name: e.target.name,\n                            value: e.target.value,\n                          })\n                        }\n                        icon=\"euro\"\n                      />\n                    )}\n                    {formSelected[1] === \"invoiceNumber\" && (\n                      <Form.Field\n                        label=\"Rechnungsnummer\"\n                        name=\"invoiceNumber\"\n                        value={invoice.invoiceNumber}\n                        onChange={updateInvoice}\n                        control={Input}\n                      />\n                    )}\n                  </Form.Group>\n\n                  {formSelected[1] === \"payed\" && (\n                    <div>\n                      <Form.Field>\n                        <label>Bezahlt</label>\n                        <Checkbox\n                          onChange={(e, { name, checked }) => {\n                            if (checked) {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: new Date(),\n                              });\n                            } else {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: undefined,\n                              });\n                            }\n                          }}\n                          name=\"payed\"\n                          checked={invoice.payed}\n                          toggle\n                        />\n                      </Form.Field>\n                      {invoice.payed && (\n                        <Form.Field\n                          label=\"Zahlungseingangsdatum\"\n                          name=\"paymentDate\"\n                          selected={new Date(invoice.paymentDate)}\n                          onChange={(v) => updateInvoiceDate(v, \"paymentDate\")}\n                          control={DatePicker}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                      )}\n                    </div>\n                  )}\n                </Form>\n                <CompanyForm\n                  company={company}\n                  setCompany={setCompany}\n                  selected={formSelected[1]}\n                />\n              </div>\n            </Modal>\n          )}\n        </Container>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { Button } from \"semantic-ui-react\";\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <Button\n    primary\n    onClick={() => {\n      const input = document.getElementById(id);\n\n      html2canvas(input, { scale: 3 }).then((canvas) => {\n        const imgData = canvas.toDataURL(\"image/jpeg\", 0.5);\n        let pdf = new jsPDF();\n        pdf.addImage(imgData, \"JPEG\", 0, 0, 210, 297);\n        pdf.save(`${fileName}.pdf`);\n      });\n    }}\n    icon=\"download\"\n    labelPosition=\"right\"\n    content=\"Download\"\n  ></Button>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\n\nexport default function SinglePageOverlay({ onClick, wrapperClass, children }) {\n  return (\n    <div\n      className={`${wrapperClass ? wrapperClass : \"\"} invoice-overlay-wrapper`}\n    >\n      {children}\n      <div className=\"invoice-overlay\" onClick={onClick} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate, formatPrice, parsePrice } from \"../../services\";\nimport { Button } from \"semantic-ui-react\";\nimport SinglePageOverlay from \"./SinglePageOverlay\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    customer,\n    articles = [],\n    company,\n  },\n  setFormSelected,\n}) => {\n  const articles_net_price = articles\n    .map(({ price, toBePayed }) => {\n      const totalPrice = parsePrice(price) * toBePayed;\n      const totalPriceWithDiscount =\n        totalPrice - totalPrice * (customer.discount / 100);\n      const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div\n        className=\"invoice-folding-line\"\n        style={\n          company.companyColor ? { borderColor: company.companyColor } : {}\n        }\n      />\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <SinglePageOverlay\n            onClick={() => setFormSelected([\"general\", \"logo\"])}\n          >\n            <div className=\"invoice-page-image-wrapper\">\n              <img\n                className=\"invoice-header-company-logo\"\n                src={company.logo}\n                alt=\"company logo\"\n              />\n            </div>\n          </SinglePageOverlay>\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-header-customer-company\"\n                onClick={() =>\n                  setFormSelected([\"general\", \"aboveClientInvoiceAddress\"])\n                }\n              >\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: company.aboveClientInvoiceAddress,\n                  }}\n                />\n              </SinglePageOverlay>\n              {customer ? (\n                <SinglePageOverlay\n                  wrapperClass=\"invoice-header-customer-info\"\n                  onClick={() => setFormSelected([\"customer\"])}\n                >\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: customer.invoiceAddress,\n                    }}\n                  />\n                </SinglePageOverlay>\n              ) : (\n                <Button>Kunde hinzufügen</Button>\n              )}\n            </div>\n            <SinglePageOverlay\n              wrapperClass=\"invoice-header-company-info\"\n              onClick={() => setFormSelected([\"general\", \"contactInformation\"])}\n            >\n              <div\n                dangerouslySetInnerHTML={{ __html: company.contactInformation }}\n              ></div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-subject-and-below\"\n                onClick={() => setFormSelected([\"general\", \"subjectAndBelow\"])}\n              >\n                <div\n                  dangerouslySetInnerHTML={{ __html: company.subjectAndBelow }}\n                />\n              </SinglePageOverlay>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versanddatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"orderDate\"])}\n                    wrapperClass=\"invoice-body-order-date\"\n                  >\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"shippingDate\"])}\n                    wrapperClass=\"invoice-body-send-date\"\n                  >\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"customer\"])}\n                  >\n                    <div\n                      className=\"invoice-body-send-to\"\n                      dangerouslySetInnerHTML={{\n                        __html: customer.shippingAddress,\n                      }}\n                    ></div>\n                  </SinglePageOverlay>\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-invoice-date\">\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceDate\"])}\n              >\n                <div className=\"invoice-body-top-right\">\n                  <p>\n                    Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceNumber\"])}\n              >\n                <div className=\"invoice-body-invoice-nr\">\n                  <p>\n                    Rechnungsnummer: <b>{invoiceNumber}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlung angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-bottom\">\n            <div className=\"invoice-body-article-wrapper\">\n              {articles.map(({ toBePayed, toBeSend, price, name, isbn }) => {\n                const multiple = parseInt(toBePayed) > 1;\n                const totalPrice = parsePrice(price) * toBePayed;\n                const totalPriceWithDiscount =\n                  totalPrice - totalPrice * (customer.discount / 100);\n                const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n                return (\n                  <div className=\"invoice-body-article\">\n                    <div className=\"invoice-body-article-left\">\n                      <div className=\"invoice-body-article-description\">\n                        <div>\n                          <b>\n                            {toBePayed !== toBeSend && toBeSend + \"/\"}\n                            {toBePayed} Exemplar\n                            {multiple && \"e\"}\n                          </b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          <b>{name && `„${name}“,`}</b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          {isbn && `${isbn},`}\n                        </div>\n                      </div>\n                      <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                        multiple ? \"je\" : \"\"\n                      } ${price} €${\n                        multiple ? ` = ${formatPrice(totalPrice)} €` : \"\"\n                      }${\n                        customer.discount > 0\n                          ? `, abzüglich ${\n                              customer.discount\n                            } % Rabatt = ${formatPrice(\n                              totalPriceWithDiscount\n                            )} €`\n                          : \"\"\n                      } (beinhaltet ${customer.ust} % MwST = ${formatPrice(\n                        totalPriceWithDiscount - net\n                      )} €)`}</div>\n                    </div>\n                    <div className=\"invoice-body-article-price\">\n                      <b>{articles.length > 1 && `${formatPrice(net)} €`}</b>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"invoice-body-price-calculation\">\n              <div className=\"invoice-body-price-calculation-label-and-number\">\n                <p>Netto</p>\n                <p>\n                  <b>{formatPrice(articles_net_price)} €</b>\n                </p>\n              </div>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"porto\"])}\n              >\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>Versandkosten</p>\n                  <p>\n                    <b>{porto.replace(\".\", \",\")} €</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay onClick={() => setFormSelected([\"customer\"])}>\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>{`+${customer.ust}% Mehrwertsteuer`}</p>\n                  <p>\n                    <b>\n                      {formatPrice(\n                        ((articles_net_price + parseFloat(porto)) *\n                          parseFloat(customer.ust)) /\n                          100\n                      )}{\" \"}\n                      €\n                    </b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n            </div>\n            <div className=\"invoice-body-price\">\n              <p>Rechnungsbetrag</p>\n              <p>\n                <b>\n                  {formatPrice(\n                    (articles_net_price + parseFloat(porto)) *\n                      (1 + parseFloat(customer.ust) / 100)\n                  )}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n            <SinglePageOverlay\n              onClick={() => setFormSelected([\"general\", \"invoiceText\"])}\n              wrapperClass=\"invoice-body-final-text\"\n            >\n              <div>\n                <p\n                  dangerouslySetInnerHTML={{ __html: company.invoiceText }}\n                ></p>\n              </div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <SinglePageOverlay\n          onClick={() => setFormSelected([\"general\", \"footerText\"])}\n        >\n          <div\n            className=\"invoice-footer\"\n            style={\n              company.companyColor ? { borderColor: company.companyColor } : {}\n            }\n            dangerouslySetInnerHTML={{ __html: company.footerText }}\n          ></div>\n        </SinglePageOverlay>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React, { useState } from \"react\";\n\nimport InvoiceForm from \"../InvoiceForm\";\nimport PrintButton from \"../PrintButton\";\nimport SinglePage from \"../SinglePage/SinglePage\";\nimport { Button, Segment, Icon, Message } from \"semantic-ui-react\";\n\nimport \"./Invoice.css\";\nimport { useCustomers } from \"../../hooks\";\nimport { calculateTotalPrice } from \"../../services\";\n\nexport default ({\n  edit,\n  invoice,\n  setInvoice,\n  invoices,\n  setInvoices,\n  onSave,\n}) => {\n  if (!invoice || !invoices) {\n    return null;\n  }\n  const [active, setActive] = useState(edit);\n  const [formSelected, setFormSelected] = useState([]);\n  const [customers, setCustomers] = useCustomers();\n\n  const saveInvoice = () => {\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    _invoices[invoice.id] = invoice;\n    setInvoices(_invoices);\n    setInvoice();\n    const _customers = [...customers];\n    _customers[invoice.customer.id] = invoice.customer;\n    setCustomers(_customers);\n    if (typeof onSave === \"function\") {\n      onSave();\n    }\n  };\n\n  const newInvoice = invoice.id === invoices.length;\n\n  return (\n    <div>\n      <div className=\"invoice-page-header\">\n        <Message\n          info\n          header=\"Neue Rechnung erstellen\"\n          content=\"Klicken Sie auf den Bereich, den Sie anpassen wollen. Rechts können Sie Artikel zur Rechnung hinzufügen oder neue erstellen.\"\n          icon=\"bell\"\n        />\n      </div>\n      <div className=\"invoice-page\">\n        <div className=\"invoice-page-wrapper\">\n          {active ? (\n            <div className=\"invoice-page-button-container\">\n              <div>\n                <PrintButton\n                  id={\"singlePage\"}\n                  label={\"Rechnung Herunterladen\"}\n                  fileName={invoice.invoiceNumber}\n                />\n              </div>\n              <div>\n                <Button\n                  onClick={() => setInvoice()}\n                  content=\"Abbrechen\"\n                  negative\n                  icon=\"close\"\n                  labelPosition=\"right\"\n                ></Button>\n                {invoice.customer && (\n                  <Button\n                    onClick={saveInvoice}\n                    content={newInvoice ? \"Anlegen\" : \"Speichern\"}\n                    positive\n                    icon=\"check\"\n                    labelPosition=\"right\"\n                  ></Button>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"invoice-button-wrapper\">\n              <Button onClick={() => setActive(true)} primary>\n                Neue Rechnung erstellen\n              </Button>\n            </div>\n          )}\n          <SinglePage\n            id={\"singlePage\"}\n            invoice={invoice}\n            setInvoice={setInvoice}\n            setFormSelected={setFormSelected}\n          />\n        </div>\n        {active && (\n          <InvoiceForm\n            wrapperClass=\"invoice-form-wrapper\"\n            invoice={invoice}\n            setInvoice={setInvoice}\n            setInvoices={setInvoices}\n            formSelected={formSelected}\n            setFormSelected={setFormSelected}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import parsePrice from \"./parsePrice\";\n\nexport default (invoice) => {\n  return (\n    invoice.articles\n      .map(({ price, toBePayed }) => {\n        const totalPrice = parsePrice(price) * toBePayed;\n        return totalPrice - totalPrice * (invoice.customer.discount / 100);\n      })\n      .reduce((total, x) => x + total, 0) +\n    parsePrice(invoice.porto) +\n    (parsePrice(invoice.porto) * invoice.customer.ust) / 100\n  );\n};\n","import React, { useState } from \"react\";\nimport { useCompany, useInvoices, useCustomers } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../sceletons\";\nimport { formatDate, formatPrice } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n  const [customers] = useCustomers();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice\n        edit\n        invoice={invoiceSelected}\n        setInvoice={setInvoiceSelected}\n        setInvoices={setInvoices}\n        invoices={invoices}\n      />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoices.length,\n            customer: {\n              ...customerSceleton,\n              id: customers.length,\n            },\n            company,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell>Zahlungseingang</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map((i) => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map((a) => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{formatPrice(i.totalPrice)} €</Table.Cell>\n              <Table.Cell>\n                {i.paymentDate ? formatDate(i.paymentDate) : \"Ausstehend\"}\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  primary\n                  icon=\"edit\"\n                  onClick={() => setInvoiceSelected(i)}\n                ></Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\n\nexport default function Authors() {\n  const [authors, setAuthors] = useAuthors();\n  const [author, setAuthor] = useState();\n\n  function deleteAuthor(id) {\n    const _authors = [...authors];\n    _authors[id] = undefined;\n    setAuthors(_authors);\n  }\n\n  function updateAuthors(id) {\n    const _authors = [...authors];\n    _authors[author.id] = author;\n    setAuthors(_authors);\n    setAuthor();\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ authorSceleton, id: authors.length })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateAuthors}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setAuthor(a)}\n                      icon=\"edit\"\n                      primary\n                    ></Button>\n                    <Button\n                      onClick={() => deleteAuthor(i)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import useMigrationWrapper from \"./useMigrationWrapper\";\nimport { useArticles } from \"../hooks\";\n\nconst VERSION = 2;\n\nfunction useAddAuthorsToArticles() {\n  const [articles, setArticles] = useArticles();\n\n  setArticles(articles.map((a) => ({ ...a, authors: [] })));\n}\n\nexport default () => useMigrationWrapper(useAddAuthorsToArticles, VERSION);\n","import { useLocalStorage } from \"../hooks\";\n\nexport default function useMigrationWrapper(migrate, version) {\n  const [currentVersion, setCurrentVersion] = useLocalStorage(\"version\", \"1\");\n  if (parseInt(currentVersion) < version) {\n    migrate();\n  }\n  setCurrentVersion(version);\n}\n","import migration from \"../migration\";\n\nexport default function useMigration() {\n  migration();\n}\n","import authors from \"./authors\";\n\nexport default function migration() {\n  authors();\n}\n","import React, { useState } from \"react\";\nimport { useInvoices, useCompany, useCustomers } from \"../../hooks\";\nimport Invoice from \"../../components/Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home() {\n  const [company] = useCompany();\n  const [customers] = useCustomers();\n  const history = useHistory();\n\n  const [invoices, setInvoices] = useInvoices();\n  const [invoice, setInvoice] = useState({\n    ...invoiceSceleton,\n    id: invoices.length,\n    customer: {\n      ...customerSceleton,\n      id: customers.length,\n    },\n    company,\n  });\n\n  return (\n    <Invoice\n      invoice={invoice}\n      setInvoice={setInvoice}\n      setInvoices={setInvoices}\n      invoices={invoices}\n      edit={true}\n      onSave={() => {\n        history.push(\"/invoices\");\n      }}\n    />\n  );\n}\n","export default {\n  backendURL: \"http://localhost:8000\",\n};\n","import local from \"./local\";\n\nexport default () => {\n  if (process.env == \"production\") {\n    return null;\n  }\n  return local;\n};\n","import Axios from \"axios\";\nimport config from \"../../config\";\nconst { backendURL } = config();\n\nconst url = backendURL + \"/login\";\n\nexport default async function login(data) {\n  try {\n    const result = await Axios.post(url, data);\n    if (result.data && result.status !== 200) {\n      throw result.data.message;\n    }\n    return result.data;\n  } catch (err) {\n    throw \"Die Email und das Passwort ist leider falsch.\";\n  }\n}\n","import Axios from \"axios\";\nimport config from \"../../config\";\n\nconst { backendURL } = config();\n\nconst url = backendURL + \"/register\";\n\nexport default async function register(data) {\n  const result = await Axios.post(url, data);\n  return result.data;\n}\n","import config from \"../../config\";\nimport Axios from \"axios\";\nconst { backendURL } = config();\n\nconst url = backendURL + \"/data\";\n\nexport default async function getData() {\n  const user = JSON.parse(localStorage.getItem(\"user\"), \"{}\");\n  console.log(user, user.token, user.user);\n  if (!user.token) {\n    return;\n  }\n  const jwt = user.token;\n  console.log(jwt);\n  const result = await Axios.get(url, {\n    headers: {\n      Authorization: \"Bearer \" + jwt,\n    },\n  });\n\n  console.log(result);\n  return result.data;\n}\n","export default async function dataToLocalStorage(data) {\n  const { customers, articles, invoices, authors } = data;\n\n  if (customers) {\n    await localStorage.setItem(\"customers\", JSON.stringify(customers));\n  }\n  if (articles) {\n    await localStorage.setItem(\"articles\", JSON.stringify(articles));\n  }\n  if (invoices) {\n    await localStorage.setItem(\"invoices\", JSON.stringify(invoices));\n  }\n  if (authors) {\n    await localStorage.setItem(\"authors\", JSON.stringify(authors));\n  }\n}\n","export default async function dataFromLocalStorage() {\n  return {\n    invoices: JSON.parse(localStorage.getItem(\"invoices\", [])),\n    customers: JSON.parse(localStorage.getItem(\"customers\", [])),\n    authors: JSON.parse(localStorage.getItem(\"authors\", [])),\n    articles: JSON.parse(localStorage.getItem(\"articles\", [])),\n  };\n}\n","import config from \"../../config\";\nimport Axios from \"axios\";\n\nconst { backendURL } = config();\n\nconst url = backendURL + \"/data\";\n\nexport default async function postData(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\", \"{}\"));\n\n  if (!user.token) {\n    return;\n  }\n\n  const jwt = user.token;\n\n  const result = await Axios.post(url, data, {\n    headers: {\n      Authorization: \"Bearer \" + jwt,\n    },\n  });\n\n  return result.data;\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, Form, Input, Icon, Message } from \"semantic-ui-react\";\nimport { useInvoices, useUser } from \"../../hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./TopNavigationBar.css\";\nimport login from \"../../services/backend/login\";\nimport register from \"../../services/backend/register\";\nimport getData from \"../../services/backend/getData\";\nimport dataToLocalStorage from \"../../services/localStorage/dataToLocalStorage\";\nimport dataFromLocalStorage from \"../../services/localStorage/dataFromLocalStorage\";\nimport postData from \"../../services/backend/postData\";\n\nexport default function TopNavigationBar() {\n  const [invoices] = useInvoices();\n  const history = useHistory();\n  const [loginValues, setLoginValues] = useState({ email: \"\", password: \"\" });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [user, setUser] = useUser();\n  const [modalUse, setModalUse] = useState(\"register\");\n  const [error, setError] = useState(\"\");\n\n  return (\n    <div className=\"oi-top-navigation-bar\">\n      <div>\n        <h2 className=\"oi-top-navigation-bar-heading\">Billeroo</h2>\n      </div>\n      <div className=\"billeroo-top-navigation-bar-buttons\">\n        {invoices.length > 0 && (\n          <div>\n            <Button.Group>\n              <Button\n                content=\"Rechnungen\"\n                onClick={() => history.push(\"invoices\")}\n              />\n              <Button\n                content=\"Artikel\"\n                onClick={() => history.push(\"articles\")}\n              />\n              <Button\n                content=\"Kunden\"\n                onClick={() => history.push(\"customers\")}\n              />\n              <Button\n                content=\"Autoren\"\n                onClick={() => history.push(\"authors\")}\n              />\n            </Button.Group>\n            <Button\n              size=\"large\"\n              className=\"oi-top-navigation-bar-new-invoice\"\n              content=\"Neue Rechnung\"\n              onClick={() => history.push(\"/\")}\n              secondary\n            />\n          </div>\n        )}\n        <Button\n          className=\"oi-top-navigation-bar-new-invoice\"\n          onClick={() => setModalIsOpen(true)}\n          {...(user && user.user\n            ? { content: user.user.email }\n            : { icon: \"user\" })}\n          primary\n        />\n\n        {user && user.user ? (\n          <Modal open={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n            <Modal.Header>Nutzer</Modal.Header>\n            <Modal.Content>\n              <div>\n                <p>Angemeldet als {user.user.email}</p>\n                <Button\n                  content=\"Abmelden\"\n                  onClick={() => {\n                    setUser({});\n                    dataToLocalStorage({\n                      articles: [],\n                      invoices: [],\n                      customers: [],\n                      authors: [],\n                    });\n                    window.document.location.href = \"/\";\n                  }}\n                />\n              </div>\n            </Modal.Content>\n          </Modal>\n        ) : (\n          <Modal\n            open={modalIsOpen}\n            onClose={() => {\n              setModalIsOpen(false);\n              setError(\"\");\n            }}\n          >\n            <Modal.Header>\n              {modalUse === \"login\" ? \"Anmelden\" : \"Registrieren\"}\n            </Modal.Header>\n            <Modal.Content>\n              <Message info>\n                {modalUse === \"login\"\n                  ? \"Melden Sie sich an, um diesen Browser mit ihren Daten zu synchronisieren.\"\n                  : \"Registrieren Sie sich, um ihre Daten auch auf anderen Geräten zu nutzen.\"}\n              </Message>\n              {error && <Message error>{error}</Message>}\n              <Form>\n                <Form.Field\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  control={Input}\n                  value={loginValues.email}\n                  onChange={(e, { value }) =>\n                    setLoginValues({ ...loginValues, email: value })\n                  }\n                />\n                <Form.Field\n                  label=\"Passwort\"\n                  placeholder=\"Passwort\"\n                  control={Input}\n                  type=\"password\"\n                  value={loginValues.password}\n                  onChange={(e, { value }) =>\n                    setLoginValues({ ...loginValues, password: value })\n                  }\n                />\n                <Button\n                  onClick={() => {\n                    setModalUse(modalUse === \"register\" ? \"login\" : \"register\");\n                    setError(\"\");\n                  }}\n                  type=\"button\"\n                >\n                  {modalUse === \"register\" ? \"Anmelden\" : \"Registrieren\"}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  primary\n                  onClick={async () => {\n                    let user;\n                    try {\n                      if (modalUse === \"login\") {\n                        user = await login(loginValues);\n                        await localStorage.setItem(\n                          \"user\",\n                          JSON.stringify(user)\n                        );\n                        const data = await getData();\n                        console.log(data);\n                        dataToLocalStorage(data);\n                      } else {\n                        user = await register(loginValues);\n                        await localStorage.setItem(\n                          \"user\",\n                          JSON.stringify(user)\n                        );\n                        const data = await dataFromLocalStorage();\n                        postData(data);\n                      }\n                      setUser(user);\n                      setModalIsOpen(false);\n                      window.document.location.href = \"/\";\n                    } catch (err) {\n                      console.log(err);\n                      setError(err);\n                    }\n                  }}\n                >\n                  {modalUse === \"login\" ? \"Anmelden\" : \"Registrieren\"}\n                  <Icon name=\"right chevron\" />\n                </Button>\n              </Form>\n            </Modal.Content>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useUser() {\n  return useLocalStorage(\"user\", {});\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Authors from \"./components/Authors/Authors\";\nimport useMigration from \"./hooks/useMigration\";\nimport Home from \"./pages/Home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopNavigationBar from \"./components/TopNavigationBar\";\n\nimport \"semantic-ui-less/semantic.less\";\n\nconst App = () => {\n  useMigration();\n\n  return (\n    <Router>\n      <TopNavigationBar />\n      <div className=\"invoice-app-container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/invoices\">\n            <Invoices />\n          </Route>\n          <Route path=\"/customers\">\n            <Customers />\n          </Route>\n          <Route path=\"/articles\">\n            <Articles />\n          </Route>\n\n          <Route path=\"/authors\">\n            <Authors />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}