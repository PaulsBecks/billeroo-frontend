{"version":3,"sources":["hooks/useLocalStorage.js","components/Customers.js","components/Articles.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","services/formatDate.js","services/calculateTotalPrice.js","components/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage.js","components/Invoice.js","components/Invoices.js","components/DropZone.js","components/Company.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","customers","Table","celled","Header","Row","HeaderCell","Body","map","c","Cell","name","address","postCode","city","discount","ust","articles","a","isbn","amount","price","empty","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","executive","firstAddress","phone","secondAddress","firstEmail","secondEmail","taxNumber","taxOffice","bank","iban","bic","logo","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","invoice","setInvoice","setCustomers","customerSceleton","customer","setCustomer","undefined","newCustomer","setNewCustomer","customerSearch","setCustomerSearch","articleSceleton","article","setArticle","articleAmount","setArticleAmount","articleSearch","setArticleSearch","newArticle","setNewArticle","invoices","setInvoices","toggleNewArticle","filteredCustomers","useMemo","filter","toLowerCase","includes","filteredArticles","addNewCustomer","toggleNewCustomer","handleCustomerChange","e","parseFloat","isNaN","handleArticleChange","toFixed","addArticleToInvoice","updateInvoiceDate","className","Container","Card","fluid","Content","Accordion","Title","index","Icon","active","class","Label","onClick","Input","placeholder","onChange","Button","fc","length","Modal","open","onClose","Form","Group","width","Field","id","control","label","icon","Actions","content","negative","labelPosition","primary","i","Detail","pos","type","selected","v","DatePicker","dateFormat","totalPrice","reduce","total","x","calculateTotalPrice","_invoices","PrintButton","style","height","px","mm","start","end","input","document","getElementById","inputHeightMm","offsetHeight","Math","floor","a4HeightPx","numPages","a4HeightMm","range","Array","join","split","val","comp","inputHeightPx","html2canvas","scale","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","Page","children","singleMode","SinglePage","send_default_price","companySceleton","company","articles_net_price","src","multiple","parseInt","totalPriceWithDiscount","net","ustNr","invoiceSelected","setInvoiceSelected","Invoice","invoiceSceleton","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","getRootProps","getInputProps","isDragAccept","isDragReject","event","stopPropagation","Company","setCompany","updateCompany","updateFirstAddress","updateSecondAddress","Segment","postcode","files","file","reader","FileReader","onload","target","result","readAsDataURL","render","Tab","panes","menuItem","Invoices","Customers","Articles"],"mappings":"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","file":"static/js/main.8dc7dee7.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [customers, setCustomer] = useLocalStorage(\"customers\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Adresse</Table.HeaderCell>\n          <Table.HeaderCell>PLZ</Table.HeaderCell>\n          <Table.HeaderCell>Stadt</Table.HeaderCell>\n          <Table.HeaderCell>Rabatt</Table.HeaderCell>\n          <Table.HeaderCell>MwST</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {customers.map(c => (\n          <Table.Row>\n            <Table.Cell>{c.name}</Table.Cell>\n            <Table.Cell>{c.address}</Table.Cell>\n            <Table.Cell>{c.postCode}</Table.Cell>\n            <Table.Cell>{c.city}</Table.Cell>\n            <Table.Cell>{c.discount}</Table.Cell>\n            <Table.Cell>{c.ust}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>ISBN</Table.HeaderCell>\n          <Table.HeaderCell>Menge</Table.HeaderCell>\n          <Table.HeaderCell>Preis</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {articles.map(a => (\n          <Table.Row>\n            <Table.Cell>{a.name}</Table.Cell>\n            <Table.Cell>{a.isbn}</Table.Cell>\n            <Table.Cell>{a.amount}</Table.Cell>\n            <Table.Cell>{a.price}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","export default { name: \"\", empty: true, price: \"\", isbn: \"\", amount: 1 };\n","export default {\n  name: \"\",\n  address: \"\",\n  postCode: \"\",\n  city: \"\",\n  discount: 0,\n  ust: 7\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  articles: []\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  firstAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\"\n  },\n  secondAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\"\n  },\n  firstEmail: \"\",\n  secondEmail: \"\",\n  taxNumber: \"\",\n  taxOffice: \"\",\n  bank: \"\",\n  iban: \"\",\n  bic: \"\",\n  logo: \"\"\n};\n","export default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return `${day < 10 ? \"0\" + day : day}.${\n    month < 10 ? \"0\" + month : month\n  }.${date.getFullYear()}`;\n}\n","export default invoice =>\n  invoice.articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React, { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport {\n  Accordion,\n  Container,\n  Form,\n  Icon,\n  Input,\n  Card,\n  Modal,\n  Label,\n  Button\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton\n} from \"../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport { calculateTotalPrice } from \"../services\";\n\nexport default ({ invoice, setInvoice }) => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState(customerSceleton);\n  const [newCustomer, setNewCustomer] = useState(undefined);\n  const [customerSearch, setCustomerSearch] = useState(\"\");\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [article, setArticle] = useState(articleSceleton);\n  const [articleAmount, setArticleAmount] = useState(1);\n  const [articleSearch, setArticleSearch] = useState(\"\");\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const filteredCustomers = useMemo(\n    () =>\n      customers.filter(c =>\n        c.name.toLowerCase().includes(customerSearch.toLowerCase())\n      ),\n    [customers, customerSearch]\n  );\n\n  const filteredArticles = useMemo(\n    () =>\n      articles.filter(a =>\n        a.name.toLowerCase().includes(articleSearch.toLowerCase())\n      ),\n    [articles, articleSearch]\n  );\n\n  const addNewCustomer = () => {\n    setCustomers([...customers, customer]);\n    setInvoice({ ...invoice, customer });\n    toggleNewCustomer();\n  };\n\n  const removeCustomer = () => {\n    setInvoice({ ...invoice, customer: undefined });\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n      value = value.toFixed(2);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  const addArticleToInvoice = article => {\n    setInvoice({\n      ...invoice,\n      articles: [\n        ...invoice.articles,\n        { ...article, articleAmount: articleAmount }\n      ]\n    });\n  };\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    addArticleToInvoice(article);\n    toggleNewArticle();\n  };\n\n  const removeArticle = pos => {\n    setInvoice({\n      ...invoice,\n      articles: invoice.articles.filter((a, i) => i !== pos)\n    });\n  };\n\n  const toggleNewCustomer = () => {\n    setNewCustomer(!newCustomer);\n  };\n\n  const saveInvoice = () => {\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    _invoices[invoice.id] = invoice;\n    setInvoices(_invoices);\n    setInvoice();\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  return (\n    <div className=\"invoice-form\">\n      <Container>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Rechnungsdaten</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Accordion>\n              <Accordion.Title index={0}>\n                <Icon name=\"dropdown\" />\n                Kunde\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                {invoice.customer ? (\n                  <div class=\"invoice-form-label-container\">\n                    <Label>\n                      {invoice.customer.name}\n                      <Icon name=\"delete\" onClick={removeCustomer} />\n                    </Label>\n                  </div>\n                ) : (\n                  <div>\n                    <Input\n                      placeholder=\"Suche...\"\n                      onChange={(e, { value }) => setCustomerSearch(value)}\n                      value={customerSearch}\n                    />\n                    {customerSearch == \"\" ? (\n                      <Button onClick={toggleNewCustomer}>Neuer Kunde</Button>\n                    ) : (\n                      <div className=\"invoice-form-label-container\">\n                        {filteredCustomers.map(fc => (\n                          <Label\n                            onClick={() =>\n                              setInvoice({ ...invoice, customer: fc })\n                            }\n                          >\n                            {fc.name}\n                          </Label>\n                        ))}\n                        {filteredCustomers.length == 0 && (\n                          <p>No Customers found.</p>\n                        )}\n                      </div>\n                    )}\n\n                    <Modal open={newCustomer} onClose={toggleNewCustomer}>\n                      <Modal.Header>Neuer Kunde</Modal.Header>\n                      <Modal.Content>\n                        <Form>\n                          <Form.Group width=\"equal\">\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Name\"\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              onChange={handleCustomerChange}\n                              value={customer.name}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Geschäftsform\"\n                              placeholder=\"Geschäftsform\"\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Anschrift\"\n                              placeholder=\"Musterschstraße 3\"\n                              name=\"address\"\n                              onChange={handleCustomerChange}\n                              value={customer.address}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"PLZ\"\n                              placeholder=\"PLZ\"\n                              name=\"postCode\"\n                              onChange={handleCustomerChange}\n                              value={customer.postCode}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Stadt\"\n                              placeholder=\"Stadt\"\n                              name=\"city\"\n                              onChange={handleCustomerChange}\n                              value={customer.city}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"MwST\"\n                              placeholder=\"7\"\n                              name=\"ust\"\n                              icon=\"percent\"\n                              onChange={handleCustomerChange}\n                              value={customer.ust}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Rabat\"\n                              placeholder=\"0\"\n                              icon=\"percent\"\n                              name=\"discount\"\n                              onChange={handleCustomerChange}\n                              value={customer.discount}\n                            />\n                          </Form.Group>\n                        </Form>\n                      </Modal.Content>\n                      <Modal.Actions>\n                        <Button\n                          onClick={toggleNewCustomer}\n                          content=\"Abbrechen\"\n                          negative\n                          icon=\"close\"\n                          labelPosition=\"right\"\n                        ></Button>\n                        <Button\n                          onClick={addNewCustomer}\n                          content=\"Anlegen\"\n                          primary\n                          icon=\"check\"\n                          labelPosition=\"right\"\n                        ></Button>\n                      </Modal.Actions>\n                    </Modal>\n                  </div>\n                )}\n              </Accordion.Content>\n              <Accordion.Title index={1}>\n                <Icon name=\"dropdown\" />\n                Artikel\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <div className=\"invoice-form-label-container\">\n                  {invoice.articles.map((a, i) => {\n                    return (\n                      <Label>\n                        {a.name}\n                        <Label.Detail>{a.articleAmount}</Label.Detail>\n                        <Icon\n                          name=\"delete\"\n                          onClick={() => removeArticle(i)}\n                        ></Icon>\n                      </Label>\n                    );\n                  })}\n                </div>\n                <div>\n                  <Input\n                    name=\"amount\"\n                    type=\"number\"\n                    label=\"Menge\"\n                    value={articleAmount}\n                    onChange={(e, { value }) => setArticleAmount(value)}\n                  />\n\n                  <Input\n                    name=\"article\"\n                    placeholder=\"Suche...\"\n                    value={articleSearch}\n                    onChange={(e, { value }) => setArticleSearch(value)}\n                  />\n                  {articleSearch == \"\" ? (\n                    <Button onClick={toggleNewArticle}>Neuer Artikel</Button>\n                  ) : (\n                    <div className=\"invoice-form-label-container\">\n                      {filteredArticles.map(a => (\n                        <Label onClick={() => addArticleToInvoice(a)}>\n                          {a.name}\n                        </Label>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle}>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Form>\n                      <Form.Group width=\"equal\">\n                        <Form.Field\n                          id=\"form-input-control-name\"\n                          control={Input}\n                          label=\"Name\"\n                          placeholder=\"Name\"\n                          name=\"name\"\n                          onChange={handleArticleChange}\n                          value={article.name}\n                        />\n                        <Form.Field\n                          id=\"form-input-control-name\"\n                          control={Input}\n                          label=\"Menge\"\n                          placeholder=\"Menge\"\n                          type=\"number\"\n                          onChange={handleArticleChange}\n                          name=\"amount\"\n                          value={article.amount}\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Field\n                          id=\"form-input-control-last-name\"\n                          control={Input}\n                          label=\"ISBN\"\n                          placeholder=\"ISBN\"\n                          name=\"isbn\"\n                          onChange={handleArticleChange}\n                          value={article.isbn}\n                        />\n                        <Form.Field\n                          id=\"form-input-control-last-name\"\n                          control={Input}\n                          label=\"Preis\"\n                          placeholder=\"Preis\"\n                          name=\"price\"\n                          icon=\"euro sign\"\n                          onChange={handleArticleChange}\n                          value={article.price}\n                        />\n                      </Form.Group>\n                    </Form>\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewCustomer}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewCustomer}\n                      content=\"Anlegen\"\n                      primary\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </Accordion.Content>\n              <Accordion.Title>\n                <Icon name=\"dropdown\" />\n                Allgemein\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <Form>\n                  <Form.Field\n                    label=\"Rechnungsdatum\"\n                    name=\"invoiceDate\"\n                    selected={new Date(invoice.invoiceDate)}\n                    onChange={v => updateInvoiceDate(v, \"invoiceDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Bestelldatum\"\n                    name=\"orderDate\"\n                    selected={new Date(invoice.orderDate)}\n                    onChange={v => updateInvoiceDate(v, \"orderDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Versanddatum\"\n                    name=\"shippingDate\"\n                    selected={new Date(invoice.shippingDate)}\n                    onChange={v => updateInvoiceDate(v, \"shippingDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Rechnungsnummer\"\n                    name=\"invoiceNumber\"\n                    value={invoice.invoiceNumber}\n                    onChange={(e, { name, value }) =>\n                      setInvoice({ ...invoice, [name]: value })\n                    }\n                    control={Input}\n                  />\n                </Form>\n              </Accordion.Content>\n            </Accordion>\n          </Card.Content>\n        </Card>\n        <Button\n          onClick={() => setInvoice()}\n          content=\"Abbrechen\"\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n        ></Button>\n        {invoice.customer && (\n          <Button\n            onClick={saveInvoice}\n            content=\"Speichern\"\n            primary\n            icon=\"check\"\n            labelPosition=\"right\"\n          ></Button>\n        )}\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function(val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label }) => (\n  <div className=\"tc mb4 mt2\">\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div id=\"myMm\" style={{ height: \"1mm\" }} />\n\n    <div\n      className=\"pa2 ba bw1 b--black bg-yellow black-90 br2 dib pointer dim shadow-1\"\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input, { scale: 1 }).then(canvas => {\n          const imgData = canvas.toDataURL(\"image/png\", 1);\n          let pdf;\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            pdf = new jsPDF();\n          }\n\n          pdf.addImage(imgData, \"PNG\", 0, 0);\n          pdf.save(`${id}.pdf`);\n        });\n\n        ////////////////////////////////////////////////////////\n        // System to manually handle page breaks\n        // Wasn't able to get it working !\n        // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\n        // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\n        ////////////////////////////////////////////////////////\n        // range(0, numPages).forEach((page) => {\n        //   console.log(`Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page*a4HeightPx}`);\n        //   html2canvas(input, {height: a4HeightPx, y: page*a4HeightPx})\n        //     .then((canvas) => {\n        //       const imgData = canvas.toDataURL('image/png');\n        //       console.log(imgData)\n        //       if (page > 0) {\n        //         pdf.addPage();\n        //       }\n        //       pdf.addImage(imgData, 'PNG', 0, 0);\n        //     });\n        //   ;\n        // });\n\n        // setTimeout(() => {\n        //   pdf.save(`${id}.pdf`);\n        // }, 5000);\n      }}\n    >\n      {label}\n    </div>\n  </div>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center pa4\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"./Page\";\nimport \"./SinglePage.css\";\nimport { formatDate } from \"../services\";\nimport { useLocalStorage } from \"../hooks\";\nimport { company as companySceleton, invoice } from \"../sceletons\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    customer: { name, ust, discount, address, city, postCode },\n    articles = [],\n    send_default_price = 5.0\n  }\n}) => {\n  const [company] = useLocalStorage(\"company\", companySceleton);\n  const articles_net_price = articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      const totalPriceWithDiscount = totalPrice - totalPrice * (discount / 100);\n      const net = totalPriceWithDiscount / (1 + ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <img className=\"invoice-header-company-logo\" src={company.logo} />\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <div className=\"invoice-header-customer-company\">\n                {company.name} • {company.firstAddress.address} •{\" \"}\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </div>\n              <div className=\"invoice-header-customer-info\">\n                <p className=\"invoice-header-customer-info-name\">\n                  <b>{name}</b>\n                </p>\n                <p>\n                  <b>{address}</b>\n                </p>\n                <p>\n                  <b>\n                    {postCode} {city}\n                  </b>\n                </p>\n              </div>\n            </div>\n            <div className=\"invoice-header-company-info\">\n              <p>{company.name}</p>\n              <p>{company.executive}</p>\n              <br />\n              <p>{company.firstAddress.name}</p>\n              <p>{company.firstAddress.address}</p>\n              <p>\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </p>\n              <p>Telefon {company.firstAddress.phone}</p>\n              <br />\n              <p>{company.firstEmail}</p>\n              <p>{company.secondEmail}</p>\n              <br />\n              <p>Steuernummer {company.taxNumber}</p>\n              <p>{company.taxOffice}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <h4>Rechnung</h4>\n              <p>Wir erlauben uns in Rechnung zu stellen:</p>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versand am:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>\n                        {name} • {}\n                      </b>\n                    </p>\n                    <p>\n                      <b>\n                        {address} • {postCode} {city}\n                      </b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\"invoice-body-invoice-date\">\n                <p>\n                  Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-nr\">\n                <p>\n                  Rechnungsnummer: <b>{invoiceNumber}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlungen angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-article-wrapper\">\n            {articles.map(({ amount, price, name, isbn }) => {\n              const multiple = parseInt(amount) > 1;\n              const totalPrice = price * amount;\n              const totalPriceWithDiscount =\n                totalPrice - totalPrice * (discount / 100);\n              const net = totalPriceWithDiscount / (1 + ust / 100);\n              return (\n                <div className=\"invoice-body-article\">\n                  <div className=\"invoice-body-article-left\">\n                    <div className=\"invoice-body-article-description\">\n                      <div>\n                        <b>\n                          {amount} Exemplar\n                          {multiple && \"e\"}\n                        </b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">\n                        <b>„{name}“</b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">{isbn}</div>\n                    </div>\n                    <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                      multiple ? \"je\" : \"\"\n                    } ${price} €${\n                      multiple ? ` = ${totalPrice.toFixed(2)}€` : \"\"\n                    }${\n                      discount > 0\n                        ? `, abzüglich ${discount} % Rabatt = ${totalPriceWithDiscount.toFixed(\n                            2\n                          )} €`\n                        : \"\"\n                    } (beinhaltet ${ust} % MwST = ${(\n                      totalPriceWithDiscount - net\n                    ).toFixed(2)})`}</div>\n                  </div>\n                  <div className=\"invoice-body-article-price\">\n                    <b>{net.toFixed(2)}€</b>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"invoice-body-price-calculation\">\n            <div>\n              <p>Netto</p>\n              <p>\n                <b>{articles_net_price.toFixed(2)}€</b>\n              </p>\n            </div>\n            <div>\n              <p>Versandpauschale</p>\n              <p>\n                <b>{send_default_price.toFixed(2)}€</b>\n              </p>\n            </div>\n            <div>\n              <p>{`+${ust}% Mehrwertsteuer`}</p>\n              <p>\n                <b>\n                  {(\n                    ((articles_net_price + send_default_price) *\n                      parseFloat(ust)) /\n                    100\n                  ).toFixed(2)}\n                  €\n                </b>\n              </p>\n            </div>\n          </div>\n          <div className=\"invoice-body-price\">\n            <p>Rechnungsbetrag</p>\n            <p>\n              <b>\n                {(\n                  (articles_net_price + send_default_price) *\n                  (1 + parseFloat(ust) / 100)\n                ).toFixed(2)}\n                €\n              </b>\n            </p>\n          </div>\n          <div>\n            <p>\n              Zahlen Sie bitte den Rechnungsbetrag bis zum 16. März 2020 unter\n              Angabe der Rechnungsnummer auf unten stehendes Konto. <br />\n              <br /> Die gelieferte Ware bleibt bis zur vollständigen Bezahlung\n              Eigentum des Test Verlages. <br />\n              Vielen Dank für Ihre Bestellung.\n              <br />\n              <br /> Mit herzlichen Grüßen, Test Verlag.\n              <br /> Werneuchen, den 24. Februar 2020\n            </p>\n          </div>\n        </div>\n        <div className=\"invoice-footer\">\n          <div className=\"invoice-footer-executive\">\n            <b>Geschäftsführung</b> {company.executive}\n          </div>\n          <div className=\"invoice-footer-bank-account\">\n            <b>Bankverbindung</b> {company.bank} • IBAN {company.iban} • BIC{\" \"}\n            {company.bic}\n          </div>\n          <div className=\"invoice-footer-tax\">\n            <b>Steuernummer</b> {company.taxNumber} | <b>USt-IdNr.</b>{\" \"}\n            {company.ustNr}\n          </div>\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\n\nimport InvoiceForm from \"./InvoiceForm\";\nimport PrintButton from \"./PrintButton\";\nimport SinglePage from \"./SinglePage\";\n\nexport default ({ invoice, setInvoice }) => {\n  return (\n    <div className=\"invoice-page\">\n      <div className=\"invoice-form-wrapper\">\n        <InvoiceForm invoice={invoice} setInvoice={setInvoice} />\n      </div>\n      {invoice.customer && (\n        <div className=\"invoice-page-wrapper\">\n          <PrintButton id={\"singlePage\"} label={\"Rechnung Drucken\"} />\n          <SinglePage id={\"singlePage\"} invoice={invoice} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport { invoice as invoiceSceleton, invoice } from \"../sceletons\";\nimport { formatDate } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n  const [invoiceSelected, setInvoiceSelected] = useState();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice invoice={invoiceSelected} setInvoice={setInvoiceSelected} />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({ ...invoiceSceleton, id: invoices.length })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map(i => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map(a => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{i.totalPrice}€</Table.Cell>\n              <Table.Cell>\n                <Button icon onClick={() => setInvoiceSelected(i)}>\n                  <Icon name=\"eye\"></Icon>\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\"\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ accept: \"image/*\" });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }),\n    [isDragActive, isDragReject]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: event => event.stopPropagation()\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { company as companySceleton } from \"../sceletons\";\nimport DropZone from \"./DropZone\";\n\nexport default function Company() {\n  const [company, setCompany] = useLocalStorage(\"company\", companySceleton);\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const updateFirstAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      firstAddress: { ...company.firstAddress, [name]: value }\n    });\n  };\n\n  const updateSecondAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      secondAddress: { ...company.secondAddress, [name]: value }\n    });\n  };\n\n  const onDropHandler = files => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n        <Form.Field\n          label=\"Firmenführung\"\n          control={Input}\n          name=\"executive\"\n          onChange={updateCompany}\n          value={company.executive}\n        />\n        <Segment>\n          <h4>Erste Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Segment>\n          <h4>Zweite Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Form.Field\n          label=\"1. Email\"\n          control={Input}\n          name=\"firstEmail\"\n          onChange={updateCompany}\n          value={company.firstEmail}\n        />\n        <Form.Field\n          label=\"2. Email\"\n          control={Input}\n          name=\"secondEmail\"\n          onChange={updateCompany}\n          value={company.secondEmail}\n        />\n        <Form.Field\n          label=\"Steuernummer\"\n          control={Input}\n          name=\"taxNumber\"\n          onChange={updateCompany}\n          value={company.taxNumber}\n        />\n        <Form.Field\n          label=\"Finanzamt\"\n          control={Input}\n          name=\"taxOffice\"\n          onChange={updateCompany}\n          value={company.taxOffice}\n        />\n        <Form.Field\n          label=\"Ust-Nr.\"\n          control={Input}\n          name=\"ustNr\"\n          onChange={updateCompany}\n          value={company.ustNr}\n        />\n        <Segment>\n          <h4>Bankinformationen</h4>\n          <Form.Field\n            label=\"Bank\"\n            control={Input}\n            name=\"bank\"\n            onChange={updateCompany}\n            value={company.bank}\n          />\n          <Form.Field\n            label=\"IBAN\"\n            control={Input}\n            name=\"iban\"\n            onChange={updateCompany}\n            value={company.iban}\n          />\n          <Form.Field\n            label=\"BIC\"\n            control={Input}\n            name=\"bic\"\n            onChange={updateCompany}\n            value={company.bic}\n          />\n        </Segment>\n      </Form>\n      <Segment>\n        <h4>Logo</h4>\n        {company.logo != \"\" ? (\n          <div>\n            <img src={company.logo} />\n            <Button\n              negative\n              onClick={() => setCompany({ ...company, logo: \"\" })}\n            >\n              Löschen\n            </Button>\n          </div>\n        ) : (\n          <DropZone onDrop={onDropHandler} />\n        )}\n      </Segment>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport { Tab, Container } from \"semantic-ui-react\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Company from \"./components/Company\";\nconst invoiceSceleton = {\n  articles: []\n};\n\nconst App = () => {\n  const [invoice, setInvoice] = useState(invoiceSceleton);\n\n  console.log(invoice);\n  return (\n    <div className=\"invoice-app-container\">\n      <Container>\n        <Tab\n          panes={[\n            {\n              menuItem: \"Rechnungen\",\n              render: () => (\n                <div className=\"\">\n                  <Invoices />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Kunden\",\n              render: () => (\n                <div className=\"\">\n                  <Customers />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Artikel\",\n              render: () => (\n                <div className=\"\">\n                  <Articles />\n                </div>\n              )\n            },\n            {\n              menuItem: \"Firma\",\n              render: () => (\n                <div className=\"\">\n                  <Company />\n                </div>\n              )\n            }\n          ]}\n        />\n      </Container>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}