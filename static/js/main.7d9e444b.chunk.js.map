{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","hooks/useCompany.js","hooks/useArticles.js","components/Customers.js","components/Article.js","components/Articles/Articles.js","services/formatDate.js","services/calculateTotalPrice.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePage.js","components/Invoice.js","components/Invoices.js","hooks/useInvoices.js","components/DropZone.js","components/Company.js","components/Authors/Authors.js","hooks/useAuthors.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","addition","address","postCode","city","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","firstAddress","phone","secondAddress","firstEmail","secondEmail","taxNumber","taxOffice","bank","iban","bic","logo","contact","books","useCompany","companySceleton","useArticles","customers","Table","celled","Header","Row","HeaderCell","Body","map","c","Cell","Article","article","setArticle","articlePrice","setArticlePrice","handleArticleChange","e","parseFloat","isNaN","toFixed","Form","Group","width","Field","id","control","Input","label","placeholder","onChange","type","icon","onBlur","target","setArticles","className","Button","onClick","articleSceleton","length","primary","Modal","onClose","open","Content","Actions","content","negative","labelPosition","_articles","a","i","pos","filter","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","invoice","setInvoice","setCustomers","customerSceleton","customer","setCustomer","undefined","newCustomer","setNewCustomer","customerSearch","setCustomerSearch","articleAmount","setArticleAmount","articleSearch","setArticleSearch","newArticle","setNewArticle","invoices","setInvoices","setPorto","updateInvoice","toggleNewArticle","filteredCustomers","useMemo","toLowerCase","includes","filteredArticles","handleCustomerChange","updateArticleAmount","amountChange","addArticleToInvoice","toggleNewCustomer","updateInvoiceDate","Container","Card","fluid","Accordion","Title","index","Icon","active","class","Label","fc","Detail","selected","v","DatePicker","dateFormat","TextArea","updateInvoiceArticles","mul","totalPrice","reduce","total","x","calculateTotalPrice","_invoices","PrintButton","fileName","style","height","px","mm","start","end","input","document","getElementById","inputHeightMm","offsetHeight","Math","floor","a4HeightPx","numPages","a4HeightMm","range","Array","join","split","val","comp","inputHeightPx","html2canvas","scale","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","Page","children","singleMode","SinglePage","company","articles_net_price","src","multiple","parseInt","totalPriceWithDiscount","net","ustNr","invoiceSelected","setInvoiceSelected","Invoice","invoiceSceleton","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","getRootProps","getInputProps","isDragAccept","isDragReject","event","stopPropagation","Company","setCompany","updateCompany","updateFirstAddress","updateSecondAddress","Segment","files","file","reader","FileReader","onload","result","readAsDataURL","postcode","Authors","authors","setAuthors","setAuthor","authorSceleton","_authors","deleteAuthor","render","Tab","panes","menuItem","Invoices","Customers"],"mappings":"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","file":"static/js/main.7d9e444b.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default { name: \"\", empty: true, price: \"\", isbn: \"\", amount: 1 };\n","export default {\n  name: \"\",\n  addition: \"\",\n  address: \"\",\n  postCode: \"\",\n  city: \"\",\n  discount: 0,\n  ust: 7\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5.00\",\n  finalText: \"\",\n  articles: []\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  firstAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\",\n  },\n  secondAddress: {\n    name: \"\",\n    address: \"\",\n    postCode: \"\",\n    city: \"\",\n    phone: \"\",\n  },\n  firstEmail: \"\",\n  secondEmail: \"\",\n  taxNumber: \"\",\n  taxOffice: \"\",\n  bank: \"\",\n  iban: \"\",\n  bic: \"\",\n  logo: \"\",\n  finalText: \"\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  books: [],\n};\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\n\nexport default function useCompany() {\n  return useLocalStorage(\"company\", companySceleton);\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useArticles() {\n  return useLocalStorage(\"articles\", []);\n}\n","import React from \"react\";\nimport { useLocalStorage } from \"../hooks\";\n\nimport { Table } from \"semantic-ui-react\";\nexport default () => {\n  const [customers, setCustomer] = useLocalStorage(\"customers\", []);\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Adresse</Table.HeaderCell>\n          <Table.HeaderCell>PLZ</Table.HeaderCell>\n          <Table.HeaderCell>Stadt</Table.HeaderCell>\n          <Table.HeaderCell>Rabatt</Table.HeaderCell>\n          <Table.HeaderCell>MwST</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {customers.map(c => (\n          <Table.Row>\n            <Table.Cell>{c.name}</Table.Cell>\n            <Table.Cell>{c.address}</Table.Cell>\n            <Table.Cell>{c.postCode}</Table.Cell>\n            <Table.Cell>{c.city}</Table.Cell>\n            <Table.Cell>{c.discount}</Table.Cell>\n            <Table.Cell>{c.ust}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n\n  const handleArticleChange = (e, { name, value }) => {\n    console.log(name, value);\n    if (name === \"price\") {\n      value = parseFloat(value);\n      console.log(value);\n      if (isNaN(value)) {\n        setArticlePrice(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={e => {\n            console.log(\"blur\");\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useArticles } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Icon, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\n\nexport default () => {\n  const [articles, setArticles] = useArticles();\n  const [article, setArticle] = useState();\n\n  const updateArticle = () => {\n    let _articles = [...articles];\n    _articles[article.id] = article;\n    setArticles(_articles);\n    setArticle();\n  };\n\n  const deleteArticle = (pos) => {\n    setArticles(articles.filter((a, i) => i !== pos));\n  };\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articles.length })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Edit Article</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={updateArticle}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Menge</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map((a, i) => (\n            <Table.Row>\n              <Table.Cell>{a.name}</Table.Cell>\n              <Table.Cell>{a.isbn}</Table.Cell>\n              <Table.Cell>{a.amount}</Table.Cell>\n              <Table.Cell>{a.price}</Table.Cell>\n              <Table.Cell>\n                <Button onClick={() => setArticle(a)} icon=\"eye\"></Button>\n                <Button onClick={() => deleteArticle(i)} icon=\"delete\"></Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","export default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return `${day < 10 ? \"0\" + day : day}.${\n    month < 10 ? \"0\" + month : month\n  }.${date.getFullYear()}`;\n}\n","export default invoice =>\n  invoice.articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      return totalPrice - totalPrice * (invoice.customer.discount / 100);\n    })\n    .reduce((total, x) => x + total, 0);\n","import React, { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"../../hooks\";\nimport {\n  Accordion,\n  Container,\n  Form,\n  Icon,\n  Input,\n  Card,\n  Modal,\n  Label,\n  Button,\n  TextArea,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport { calculateTotalPrice } from \"../../services\";\nimport Article from \"../Article\";\n\nexport default ({ invoice, setInvoice }) => {\n  const [customers, setCustomers] = useLocalStorage(\"customers\", []);\n  const [customer, setCustomer] = useState({\n    ...customerSceleton,\n    id: customers.length,\n  });\n  const [newCustomer, setNewCustomer] = useState(undefined);\n  const [customerSearch, setCustomerSearch] = useState(\"\");\n  const [articles, setArticles] = useLocalStorage(\"articles\", []);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articles.length,\n  });\n  const [articleAmount, setArticleAmount] = useState(1);\n  const [articleSearch, setArticleSearch] = useState(\"\");\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [invoices, setInvoices] = useLocalStorage(\"invoices\", []);\n  const [porto, setPorto] = useState(invoice.porto);\n\n  const updateInvoice = (e, { name, value }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = value.toFixed(2);\n      setPorto(value);\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const filteredCustomers = useMemo(\n    () =>\n      customers.filter((c) =>\n        c.name.toLowerCase().includes(customerSearch.toLowerCase())\n      ),\n    [customers, customerSearch]\n  );\n\n  const filteredArticles = useMemo(\n    () =>\n      articles.filter((a) =>\n        a.name.toLowerCase().includes(articleSearch.toLowerCase())\n      ),\n    [articles, articleSearch]\n  );\n\n  const addNewCustomer = () => {\n    setCustomers([...customers, customer]);\n    setInvoice({ ...invoice, customer });\n    toggleNewCustomer();\n  };\n\n  const removeCustomer = () => {\n    setInvoice({ ...invoice, customer: undefined });\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  const updateArticleAmount = (id, amountChange) => {\n    let _articles = [...articles];\n    const article = _articles[id];\n    _articles[id] = {\n      ...article,\n      amount: parseFloat(article.amount) + amountChange,\n    };\n    setArticles(_articles);\n  };\n\n  const addArticleToInvoice = (article) => {\n    setInvoice({\n      ...invoice,\n      articles: [...invoice.articles, { ...article, amount: articleAmount }],\n    });\n    setArticle();\n    setArticleAmount(1);\n  };\n\n  const addNewArticle = () => {\n    setArticles([...articles, article]);\n    addArticleToInvoice(article);\n    toggleNewArticle();\n  };\n\n  const removeArticle = (pos) => {\n    setInvoice({\n      ...invoice,\n      articles: invoice.articles.filter((a, i) => i !== pos),\n    });\n  };\n\n  const toggleNewCustomer = () => {\n    setNewCustomer(!newCustomer);\n  };\n\n  const saveInvoice = () => {\n    const updateInvoiceArticles = (invoice, mul = 1) => {\n      if (invoice) {\n        for (let a in invoice.articles) {\n          updateArticleAmount(\n            invoice.articles[a].id,\n            mul * invoice.articles[a].amount\n          );\n        }\n      }\n    };\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    let _invoices = [...invoices];\n    updateInvoiceArticles(invoices[invoice.id]);\n    _invoices[invoice.id] = invoice;\n    updateInvoiceArticles(_invoices[invoice.id], -1);\n    setInvoices(_invoices);\n    setInvoice();\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  return (\n    <div className=\"invoice-form\">\n      <Container>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Rechnungsdaten</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Accordion>\n              <Accordion.Title index={0}>\n                <Icon name=\"dropdown\" />\n                Kunde\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                {invoice.customer ? (\n                  <div class=\"invoice-form-label-container\">\n                    <Label>\n                      {invoice.customer.name}\n                      <Icon name=\"delete\" onClick={removeCustomer} />\n                    </Label>\n                  </div>\n                ) : (\n                  <div>\n                    <Input\n                      placeholder=\"Suche...\"\n                      onChange={(e, { value }) => setCustomerSearch(value)}\n                      value={customerSearch}\n                    />\n                    {customerSearch == \"\" ? (\n                      <Button onClick={toggleNewCustomer}>Neuer Kunde</Button>\n                    ) : (\n                      <div className=\"invoice-form-label-container\">\n                        {filteredCustomers.map((fc) => (\n                          <Label\n                            onClick={() =>\n                              setInvoice({ ...invoice, customer: fc })\n                            }\n                          >\n                            {fc.name}\n                          </Label>\n                        ))}\n                        {filteredCustomers.length == 0 && (\n                          <p>No Customers found.</p>\n                        )}\n                      </div>\n                    )}\n\n                    <Modal open={newCustomer} onClose={toggleNewCustomer}>\n                      <Modal.Header>Neuer Kunde</Modal.Header>\n                      <Modal.Content>\n                        <Form>\n                          <Form.Group width=\"equal\">\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Name\"\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              onChange={handleCustomerChange}\n                              value={customer.name}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-name\"\n                              control={Input}\n                              label=\"Zusatz\"\n                              placeholder=\"Zusatz\"\n                              name=\"addition\"\n                              onChange={handleCustomerChange}\n                              value={customer.addition}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Anschrift\"\n                              placeholder=\"Musterschstraße 3\"\n                              name=\"address\"\n                              onChange={handleCustomerChange}\n                              value={customer.address}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"PLZ\"\n                              placeholder=\"PLZ\"\n                              name=\"postCode\"\n                              onChange={handleCustomerChange}\n                              value={customer.postCode}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Stadt\"\n                              placeholder=\"Stadt\"\n                              name=\"city\"\n                              onChange={handleCustomerChange}\n                              value={customer.city}\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"MwST\"\n                              placeholder=\"7\"\n                              name=\"ust\"\n                              icon=\"percent\"\n                              onChange={handleCustomerChange}\n                              value={customer.ust}\n                            />\n                            <Form.Field\n                              id=\"form-input-control-last-name\"\n                              control={Input}\n                              label=\"Rabat\"\n                              placeholder=\"0\"\n                              icon=\"percent\"\n                              name=\"discount\"\n                              onChange={handleCustomerChange}\n                              value={customer.discount}\n                            />\n                          </Form.Group>\n                        </Form>\n                      </Modal.Content>\n                      <Modal.Actions>\n                        <Button\n                          onClick={toggleNewCustomer}\n                          content=\"Abbrechen\"\n                          negative\n                          icon=\"close\"\n                          labelPosition=\"right\"\n                        ></Button>\n                        <Button\n                          onClick={addNewCustomer}\n                          content=\"Anlegen\"\n                          primary\n                          icon=\"check\"\n                          labelPosition=\"right\"\n                        ></Button>\n                      </Modal.Actions>\n                    </Modal>\n                  </div>\n                )}\n              </Accordion.Content>\n              <Accordion.Title index={1}>\n                <Icon name=\"dropdown\" />\n                Artikel\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <div className=\"invoice-form-label-container\">\n                  {invoice.articles.map((a, i) => {\n                    return (\n                      <Label>\n                        {a.name}\n                        <Label.Detail>{a.articleAmount}</Label.Detail>\n                        <Icon\n                          name=\"delete\"\n                          onClick={() => removeArticle(i)}\n                        ></Icon>\n                      </Label>\n                    );\n                  })}\n                </div>\n                <div>\n                  <Input\n                    name=\"amount\"\n                    type=\"number\"\n                    label=\"Menge\"\n                    value={articleAmount}\n                    onChange={(e, { value }) => setArticleAmount(value)}\n                  />\n\n                  <Input\n                    name=\"article\"\n                    placeholder=\"Suche...\"\n                    value={articleSearch}\n                    onChange={(e, { value }) => setArticleSearch(value)}\n                  />\n                  {articleSearch == \"\" ? (\n                    <Button onClick={toggleNewArticle}>Neuer Artikel</Button>\n                  ) : (\n                    <div className=\"invoice-form-label-container\">\n                      {filteredArticles.map((a) => (\n                        <Label onClick={() => addArticleToInvoice(a)}>\n                          {a.name}\n                        </Label>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle}>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      primary\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </Accordion.Content>\n              <Accordion.Title>\n                <Icon name=\"dropdown\" />\n                Allgemein\n              </Accordion.Title>\n              <Accordion.Content active={true}>\n                <Form>\n                  <Form.Field\n                    label=\"Rechnungsdatum\"\n                    name=\"invoiceDate\"\n                    selected={new Date(invoice.invoiceDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Bestelldatum\"\n                    name=\"orderDate\"\n                    selected={new Date(invoice.orderDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Versanddatum\"\n                    name=\"shippingDate\"\n                    selected={new Date(invoice.shippingDate)}\n                    onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                    control={DatePicker}\n                    dateFormat=\"dd/MM/yyyy\"\n                  />\n                  <Form.Field\n                    label=\"Porto\"\n                    name=\"shippingDate\"\n                    value={porto}\n                    name=\"porto\"\n                    onChange={(e, { value }) => setPorto(value)}\n                    control={Input}\n                    onBlur={(e) =>\n                      updateInvoice(e, {\n                        name: e.target.name,\n                        value: e.target.value,\n                      })\n                    }\n                    icon=\"euro\"\n                  />\n                  <Form.Field\n                    label=\"Rechnungsnummer\"\n                    name=\"invoiceNumber\"\n                    value={invoice.invoiceNumber}\n                    onChange={updateInvoice}\n                    control={Input}\n                  />\n                  <Form.TextArea\n                    label=\"Freitext\"\n                    value={invoice.finalText}\n                    onChange={updateInvoice}\n                    name=\"finalText\"\n                  />\n                </Form>\n              </Accordion.Content>\n            </Accordion>\n          </Card.Content>\n        </Card>\n        <Button\n          onClick={() => setInvoice()}\n          content=\"Abbrechen\"\n          negative\n          icon=\"close\"\n          labelPosition=\"right\"\n        ></Button>\n        {invoice.customer && (\n          <Button\n            onClick={saveInvoice}\n            content=\"Speichern\"\n            primary\n            icon=\"check\"\n            labelPosition=\"right\"\n          ></Button>\n        )}\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function(val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <div className=\"tc mb4 mt2\">\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div id=\"myMm\" style={{ height: \"1mm\" }} />\n\n    <div\n      className=\"pa2 ba bw1 b--black bg-yellow black-90 br2 dib pointer dim shadow-1\"\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input, { scale: 1 }).then(canvas => {\n          const imgData = canvas.toDataURL(\"image/png\", 1);\n          let pdf;\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            pdf = new jsPDF();\n          }\n\n          pdf.addImage(imgData, \"PNG\", 0, 0);\n          pdf.save(`${fileName}.pdf`);\n        });\n\n        ////////////////////////////////////////////////////////\n        // System to manually handle page breaks\n        // Wasn't able to get it working !\n        // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\n        // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\n        ////////////////////////////////////////////////////////\n        // range(0, numPages).forEach((page) => {\n        //   console.log(`Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page*a4HeightPx}`);\n        //   html2canvas(input, {height: a4HeightPx, y: page*a4HeightPx})\n        //     .then((canvas) => {\n        //       const imgData = canvas.toDataURL('image/png');\n        //       console.log(imgData)\n        //       if (page > 0) {\n        //         pdf.addPage();\n        //       }\n        //       pdf.addImage(imgData, 'PNG', 0, 0);\n        //     });\n        //   ;\n        // });\n\n        // setTimeout(() => {\n        //   pdf.save(`${id}.pdf`);\n        // }, 5000);\n      }}\n    >\n      {label}\n    </div>\n  </div>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center pa4\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate } from \"../../services\";\nimport { useCompany } from \"../../hooks\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    finalText,\n    customer: { name, ust, discount, address, city, postCode, addition },\n    articles = [],\n  },\n}) => {\n  const [company] = useCompany();\n  const articles_net_price = articles\n    .map(({ price, amount }) => {\n      const totalPrice = price * amount;\n      const totalPriceWithDiscount = totalPrice - totalPrice * (discount / 100);\n      const net = totalPriceWithDiscount / (1 + ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <img className=\"invoice-header-company-logo\" src={company.logo} />\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <div className=\"invoice-header-customer-company\">\n                {company.name} • {company.firstAddress.address} •{\" \"}\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </div>\n              <div className=\"invoice-header-customer-info\">\n                <p>\n                  <b>{name}</b>\n                </p>\n                <p className=\"invoice-header-customer-info-name\">\n                  <b>{addition}</b>\n                </p>\n                <p>\n                  <b>{address}</b>\n                </p>\n                <p>\n                  <b>\n                    {postCode} {city}\n                  </b>\n                </p>\n              </div>\n            </div>\n            <div className=\"invoice-header-company-info\">\n              <p>{company.name}</p>\n              <p>{company.executive}</p>\n              <br />\n              <p>{company.firstAddress.name}</p>\n              <p>{company.firstAddress.address}</p>\n              <p>\n                {company.firstAddress.postCode} {company.firstAddress.city}\n              </p>\n              <p>Telefon {company.firstAddress.phone}</p>\n              <br />\n              <p>{company.firstEmail}</p>\n              <p>{company.secondEmail}</p>\n              <br />\n              <p>Steuernummer {company.taxNumber}</p>\n              <p>{company.taxOffice}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <h4>Rechnung</h4>\n              <p>Wir erlauben uns in Rechnung zu stellen:</p>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versand am:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>\n                        {name} • {addition}\n                      </b>\n                    </p>\n                    <p>\n                      <b>\n                        {address} • {postCode} {city}\n                      </b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-top-right\">\n              <div className=\"invoice-body-invoice-date\">\n                <p>\n                  Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-nr\">\n                <p>\n                  Rechnungsnummer: <b>{invoiceNumber}</b>\n                </p>\n              </div>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlungen angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-article-wrapper\">\n            {articles.map(({ amount, price, name, isbn }) => {\n              const multiple = parseInt(amount) > 1;\n              const totalPrice = price * amount;\n              const totalPriceWithDiscount =\n                totalPrice - totalPrice * (discount / 100);\n              const net = totalPriceWithDiscount / (1 + ust / 100);\n              return (\n                <div className=\"invoice-body-article\">\n                  <div className=\"invoice-body-article-left\">\n                    <div className=\"invoice-body-article-description\">\n                      <div>\n                        <b>\n                          {amount} Exemplar\n                          {multiple && \"e\"}\n                        </b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">\n                        <b>„{name}“</b>\n                      </div>\n                      <div className=\"invoice-body-article-title\">{isbn}</div>\n                    </div>\n                    <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                      multiple ? \"je\" : \"\"\n                    } ${price} €${\n                      multiple ? ` = ${totalPrice.toFixed(2)}€` : \"\"\n                    }${\n                      discount > 0\n                        ? `, abzüglich ${discount} % Rabatt = ${totalPriceWithDiscount.toFixed(\n                            2\n                          )} €`\n                        : \"\"\n                    } (beinhaltet ${ust} % MwST = ${(\n                      totalPriceWithDiscount - net\n                    ).toFixed(2)})`}</div>\n                  </div>\n                  <div className=\"invoice-body-article-price\">\n                    <b>{articles.length > 1 && `${net.toFixed(2)} €`}</b>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"invoice-body-price-calculation\">\n            <div>\n              <p>Netto</p>\n              <p>\n                <b>{articles_net_price.toFixed(2)} €</b>\n              </p>\n            </div>\n            <div>\n              <p>Versandkosten</p>\n              <p>\n                <b>{porto} €</b>\n              </p>\n            </div>\n            <div>\n              <p>{`+${ust}% Mehrwertsteuer`}</p>\n              <p>\n                <b>\n                  {(\n                    ((articles_net_price + parseFloat(porto)) *\n                      parseFloat(ust)) /\n                    100\n                  ).toFixed(2)}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n          </div>\n          <div className=\"invoice-body-price\">\n            <p>Rechnungsbetrag</p>\n            <p>\n              <b>\n                {(\n                  (articles_net_price + parseFloat(porto)) *\n                  (1 + parseFloat(ust) / 100)\n                ).toFixed(2)}{\" \"}\n                €\n              </b>\n            </p>\n          </div>\n          <div>\n            <p className=\"invoice-body-final-text\">{finalText}</p>\n          </div>\n        </div>\n        <div className=\"invoice-footer\">\n          <div className=\"invoice-footer-executive\">\n            <b>Geschäftsführung</b> {company.executive}\n          </div>\n          <div className=\"invoice-footer-bank-account\">\n            <b>Bankverbindung</b> {company.bank} • IBAN {company.iban} • BIC{\" \"}\n            {company.bic}\n          </div>\n          <div className=\"invoice-footer-tax\">\n            <b>Steuernummer</b> {company.taxNumber} | <b>USt-IdNr.</b>{\" \"}\n            {company.ustNr}\n          </div>\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\n\nimport InvoiceForm from \"./InvoiceForm\";\nimport PrintButton from \"./PrintButton\";\nimport SinglePage from \"./SinglePage/SinglePage\";\n\nexport default ({ invoice, setInvoice }) => {\n  return (\n    <div className=\"invoice-page\">\n      <div className=\"invoice-form-wrapper\">\n        <InvoiceForm invoice={invoice} setInvoice={setInvoice} />\n      </div>\n      {invoice.customer && (\n        <div className=\"invoice-page-wrapper\">\n          <PrintButton\n            id={\"singlePage\"}\n            label={\"Rechnung Drucken\"}\n            fileName={invoice.invoiceNumber}\n          />\n          <SinglePage id={\"singlePage\"} invoice={invoice} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocalStorage, useCompany, useInvoices } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport { invoice as invoiceSceleton, invoice } from \"../sceletons\";\nimport { formatDate } from \"../services\";\n\nexport default () => {\n  const [invoices, setInvoices] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice invoice={invoiceSelected} setInvoice={setInvoiceSelected} />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoices.length,\n            finalText: company.finalText,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map((i) => (\n            <Table.Row>\n              <Table.Cell>{i.invoiceNumber}</Table.Cell>\n              <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n              <Table.Cell>{i.customer.name}</Table.Cell>\n              <Table.Cell>\n                {i.articles.map((a) => (\n                  <p>{a.name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{i.totalPrice.toFixed(2)}€</Table.Cell>\n              <Table.Cell>\n                <Button icon onClick={() => setInvoiceSelected(i)}>\n                  <Icon name=\"eye\"></Icon>\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useInvoices() {\n  return useLocalStorage(\"invoices\", []);\n}\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\"\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ accept: \"image/*\" });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }),\n    [isDragActive, isDragReject]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: event => event.stopPropagation()\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React from \"react\";\nimport { Form, Input, Segment, Button, TextArea } from \"semantic-ui-react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { company as companySceleton } from \"../sceletons\";\nimport DropZone from \"./DropZone\";\n\nexport default function Company() {\n  const [company, setCompany] = useLocalStorage(\"company\", companySceleton);\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const updateFirstAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      firstAddress: { ...company.firstAddress, [name]: value },\n    });\n  };\n\n  const updateSecondAddress = (e, { name, value }) => {\n    setCompany({\n      ...company,\n      secondAddress: { ...company.secondAddress, [name]: value },\n    });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n        <Segment>\n          <h4>Logo</h4>\n          {company.logo != \"\" ? (\n            <div>\n              <img src={company.logo} />\n              <Button\n                negative\n                onClick={() => setCompany({ ...company, logo: \"\" })}\n              >\n                Löschen\n              </Button>\n            </div>\n          ) : (\n            <DropZone onDrop={onDropHandler} />\n          )}\n        </Segment>\n        <Form.Field\n          label=\"Firmenführung\"\n          control={Input}\n          name=\"executive\"\n          onChange={updateCompany}\n          value={company.executive}\n        />\n        <Segment>\n          <h4>Erste Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateFirstAddress}\n              value={company.firstAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Segment>\n          <h4>Zweite Adresse</h4>\n          <Form.Group width=\"equal\">\n            <Form.Field\n              id=\"form-input-control-name\"\n              control={Input}\n              label=\"Name\"\n              name=\"name\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.name}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Anschrift\"\n              name=\"address\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.address}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"PLZ\"\n              name=\"postCode\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.postcode}\n            />\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Stadt\"\n              name=\"city\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.city}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Field\n              id=\"form-input-control-last-name\"\n              control={Input}\n              label=\"Telefon\"\n              name=\"phone\"\n              onChange={updateSecondAddress}\n              value={company.secondAddress.phone}\n            />\n          </Form.Group>\n        </Segment>\n\n        <Form.Field\n          label=\"1. Email\"\n          control={Input}\n          name=\"firstEmail\"\n          onChange={updateCompany}\n          value={company.firstEmail}\n        />\n        <Form.Field\n          label=\"2. Email\"\n          control={Input}\n          name=\"secondEmail\"\n          onChange={updateCompany}\n          value={company.secondEmail}\n        />\n        <Form.Field\n          label=\"Steuernummer\"\n          control={Input}\n          name=\"taxNumber\"\n          onChange={updateCompany}\n          value={company.taxNumber}\n        />\n        <Form.Field\n          label=\"Finanzamt\"\n          control={Input}\n          name=\"taxOffice\"\n          onChange={updateCompany}\n          value={company.taxOffice}\n        />\n        <Form.Field\n          label=\"Ust-Nr.\"\n          control={Input}\n          name=\"ustNr\"\n          onChange={updateCompany}\n          value={company.ustNr}\n        />\n        <Segment>\n          <h4>Bankinformationen</h4>\n          <Form.Field\n            label=\"Bank\"\n            control={Input}\n            name=\"bank\"\n            onChange={updateCompany}\n            value={company.bank}\n          />\n          <Form.Field\n            label=\"IBAN\"\n            control={Input}\n            name=\"iban\"\n            onChange={updateCompany}\n            value={company.iban}\n          />\n          <Form.Field\n            label=\"BIC\"\n            control={Input}\n            name=\"bic\"\n            onChange={updateCompany}\n            value={company.bic}\n          />\n        </Segment>\n        <Form.Field>\n          <Form.TextArea\n            label=\"Standard Freitext\"\n            value={company.finalText}\n            onChange={updateCompany}\n            name=\"finalText\"\n          />\n        </Form.Field>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { useAuthors, useArticles } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nexport default function Authors() {\n  const [authors, setAuthors] = useAuthors();\n  const [author, setAuthor] = useState();\n  const [articles] = useArticles();\n\n  function deleteAuthor(id) {\n    const _authors = [...authors];\n    _authors[id] = undefined;\n    setAuthors(_authors);\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthors({ authorSceleton, id: authors.length })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map((a, i) => (\n            <Table.Row>\n              <Table.Cell>{a.id}</Table.Cell>\n              <Table.Cell>{a.name}</Table.Cell>\n              <Table.Cell>\n                {a.books.map((id) => (\n                  <p>{articles[id].name}</p>\n                ))}\n              </Table.Cell>\n              <Table.Cell>{a.contact}</Table.Cell>\n              <Table.Cell>\n                <Button onClick={() => setAuthor(a)} icon=\"eye\"></Button>\n                <Button onClick={() => deleteAuthor(i)} icon=\"delete\"></Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useAuthors() {\n  return useLocalStorage(\"authors\", []);\n}\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport { Tab, Container } from \"semantic-ui-react\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Company from \"./components/Company\";\nimport Authors from \"./components/Authors/Authors\";\nconst invoiceSceleton = {\n  articles: [],\n};\n\nconst App = () => {\n  return (\n    <div className=\"invoice-app-container\">\n      <Container>\n        <Tab\n          panes={[\n            {\n              menuItem: \"Rechnungen\",\n              render: () => (\n                <div className=\"\">\n                  <Invoices />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Kunden\",\n              render: () => (\n                <div className=\"\">\n                  <Customers />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Artikel\",\n              render: () => (\n                <div className=\"\">\n                  <Articles />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Autoren\",\n              render: () => (\n                <div className=\"\">\n                  <Authors />\n                </div>\n              ),\n            },\n            {\n              menuItem: \"Firma\",\n              render: () => (\n                <div className=\"\">\n                  <Company />\n                </div>\n              ),\n            },\n          ]}\n        />\n      </Container>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}