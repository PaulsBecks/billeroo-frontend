{"version":3,"sources":["hooks/useLocalStorage.js","sceletons/article.js","sceletons/customer.js","sceletons/invoice.js","sceletons/company.js","sceletons/author.js","config/production.js","config/index.js","services/backend/postData.js","services/backend/getData.js","hooks/useCompany.js","hooks/useInvoices.js","hooks/useArticles.js","hooks/useAuthors.js","hooks/useCustomers.js","components/Editor/Editor.js","components/CustomerForm/CustomerForm.js","components/Customers.js","services/formatDate.js","services/parsePrice.js","services/formatPrice.js","components/Author/Author.js","components/Article.js","components/Articles/Articles.js","components/DropZone.js","components/CompanyForm.js","components/InvoiceForm/InvoiceForm.js","components/PrintButton.js","components/Page.js","components/SinglePage/SinglePageOverlay.js","components/SinglePage/SinglePage.js","components/Invoice/Invoice.js","services/calculateTotalPrice.js","components/Invoices.js","components/Authors/Authors.js","pages/Home/Home.js","services/backend/login.js","services/backend/register.js","services/localStorage/dataToLocalStorage.js","services/localStorage/dataFromLocalStorage.js","components/TopNavigationBar/TopNavigationBar.js","hooks/useUser.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","name","empty","price","isbn","amount","authors","invoiceAddress","shippingAddress","discount","ust","invoiceDate","Date","toString","shippingDate","orderDate","invoiceNumber","porto","finalText","articles","executive","logo","aboveClientInvoiceAddress","footerText","invoiceText","subjectAndBelow","contactInformation","contact","percent","books","backendURL","production","url","config","postData","data","a","user","token","jwt","Axios","post","headers","Authorization","result","getData","get","useCompany","companySceleton","company","setCompany","useEffect","fetchData","useInvoices","invoices","setLocalStorageInvoices","addInvoice","useCallback","invoice","_invoices","removeInvoice","invoiceId","undefined","updateInvoice","id","filter","i","length","useArticles","setLocalStorageArticles","addArticle","article","_articles","removeArticle","articleId","updateArticle","getArticleById","useAuthors","setLocalStorageAuthors","addAuthor","author","_authors","removeAuthor","authorId","updateAuthor","getAuthorById","useCustomers","customers","setLocalStorageCustomers","addCustomer","customer","_customers","removeCustomer","customerId","updateCustomer","getCustomerById","c","Editor","props","active","setActive","onFocus","onBlur","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","className","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","CustomerForm","setCustomer","RichTextEditor","createValueFromString","setInvoiceAddress","setShippingAddress","updateAddresses","handleCustomerChange","e","parseFloat","isNaN","updateRichtext","Form","Group","Field","control","Input","onChange","placeholder","icon","customersLength","Button","onClick","customerSceleton","primary","Modal","onClose","open","Header","Content","Actions","content","negative","labelPosition","Table","celled","Row","HeaderCell","Body","map","Cell","dangerouslySetInnerHTML","__html","formatDate","dateString","date","day","getDate","month","getMonth","getFullYear","parsePrice","replace","formatPrice","toFixed","Author","setAuthor","authorPrice","setAuthorPrice","handleAuthorChange","width","target","Article","setArticle","articlePrice","setArticlePrice","authorsLength","handleArticleChange","authorOptions","text","concat","type","Dropdown","search","selection","options","authorSceleton","Segment","articlesLength","invoiceArticle","setInvoiceArticle","filteredInvoices","useMemo","reduce","list","aId","articleSceleton","positive","paymentDate","secondary","baseStyle","flex","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","onDrop","useDropzone","accept","isDragActive","isDragAccept","isDragReject","getRootProps","getInputProps","event","stopPropagation","CompanyForm","selected","setFooterText","setSubjectAndBelow","setInvoiceText","setContactInformation","setAboveClientInvoiceAddress","updateRichText","updateCompany","src","alt","files","file","reader","FileReader","onload","readAsDataURL","setInvoice","formSelected","wrapperClass","setFormSelected","addToArticles","selectedArticles","setSelectedArticles","toBePayed","setToBePayed","toBeSend","setToBeSend","newArticle","setNewArticle","setPorto","checked","toggleNewArticle","updateInvoiceDate","customerOptions","articlesOptions","slice","_selectedArticles","closeIcon","Container","Card","fluid","widths","v","DatePicker","dateFormat","Checkbox","payed","toggle","PrintButton","fileName","input","document","getElementById","html2canvas","scale","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","Page","children","singleMode","height","SinglePageOverlay","SinglePage","articles_net_price","totalPrice","total","x","companyColor","multiple","parseInt","totalPriceWithDiscount","net","edit","onSave","newInvoice","Message","info","header","calculateTotalPrice","invoicesLength","invoiceSelected","setInvoiceSelected","invoiceSceleton","Authors","deleteAuthor","Home","history","useHistory","push","login","status","message","register","response","dataToLocalStorage","dataFromLocalStorage","TopNavigationBar","email","password","loginValues","setLoginValues","modalIsOpen","setModalIsOpen","setUser","modalUse","setModalUse","setError","size","location","href","Icon","render","exact","path","Invoices","Customers"],"mappings":"uWAEe,SAASA,EAAgBC,EAAKC,GAAc,MAKnBC,oBAAS,WAC7C,IAGE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAIzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAKP,OAFAC,QAAQC,IAAIF,GAELR,MAnB8C,mBAKlDW,EALkD,KAKrCC,EALqC,KAgDzD,MAAO,CAACD,EArBS,SAAAE,GACf,IAGE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EAInDD,EAAeE,GAIfX,OAAOC,aAAaY,QAAQjB,EAAKO,KAAKW,UAAUH,IAChD,MAAON,GAGPC,QAAQC,IAAIF,M,6BC9CH,GACbU,KAAM,GACNC,OAAO,EACPC,MAAO,QACPC,KAAM,GACNC,OAAQ,EACRC,QAAS,ICNI,GACbL,KAAM,iBACNM,eACE,gGAIFC,gBACE,kGAEFC,SAAU,EACVC,IAAK,GCXQ,GACbC,aAAa,IAAIC,MAAOC,WACxBC,cAAc,IAAIF,MAAOC,WACzBE,WAAW,IAAIH,MAAOC,WACtBG,cAAe,GACfC,MAAO,OACPC,UAAW,GACXC,SAAU,ICPG,GACblB,KAAM,GACNmB,UAAW,GACXC,KAAM,GACNC,0BACE,uEACFC,WACE,8NAGFC,YACE,0TAMFC,gBACE,mFAGFC,mBACE,2XCtBW,GACbzB,KAAM,GACN0B,QAAS,GACTC,QAAS,OACTC,MAAO,ICJM,GACbC,WAAY,2BCEC,aAEX,OAAOC,G,iBCALC,EAFiBC,IAAfH,WAEiB,QAEV,SAAeI,EAA9B,kC,4CAAe,WAAwBC,GAAxB,mBAAAC,EAAA,0DACPC,EAAOhD,KAAKC,MAAMH,aAAaC,QAAQ,OAAQ,QAE3CkD,MAHG,wDAOPC,EAAMF,EAAKC,MAPJ,SASQE,IAAMC,KAAKT,EAAKG,EAAM,CACzCO,QAAS,CACPC,cAAe,UAAYJ,KAXlB,cASPK,EATO,yBAeNA,EAAOT,MAfD,4C,0BCHTH,EAFiBC,IAAfH,WAEiB,QAEV,SAAee,IAA9B,+B,4CAAe,gCAAAT,EAAA,0DACPC,EAAOhD,KAAKC,MAAMH,aAAaC,QAAQ,QAAS,QACxCiD,EAAKC,MAFN,wDAKPC,EAAMF,EAAKC,MALJ,SAMQE,IAAMM,IAAId,EAAK,CAClCU,QAAS,CACPC,cAAe,UAAYJ,KARlB,cAMPK,EANO,yBAYNA,EAAOT,MAZD,4C,sBCAA,SAASY,IAAc,IAAD,EACLlE,EAAgB,YAAamE,GADxB,mBAC5BC,EAD4B,KACnBC,EADmB,KAGnCC,qBAAU,WAAM,4CACd,4BAAAf,EAAA,sEACqBS,IADrB,QACQV,EADR,SAEcA,EAAKc,SACfC,EAAWf,EAAKc,SAHpB,4CADc,uBAAC,WAAD,wBAOdG,KACC,IAOH,MAAO,CAACH,EALc,SAACA,GACrBC,EAAWD,GACXf,EAAS,CAAEe,c,YChBA,SAASI,IAAe,IAAD,EACQxE,EAAgB,WAAY,IADpC,mBAC7ByE,EAD6B,KACnBC,EADmB,KAGpCJ,qBAAU,WAAM,4CACd,4BAAAf,EAAA,sEACqBS,IADrB,QACQV,EADR,SAEcA,EAAKmB,UACfC,EAAwBpB,EAAKmB,UAHjC,4CADc,uBAAC,WAAD,wBAOdF,KACC,IAEH,IAAMI,EAAaC,uBACjB,SAACC,GACC,IAAMC,EAAS,sBAAOL,GAAP,CAAiBI,IAChCH,EAAwBI,GACxBzB,EAAS,CAAEoB,SAAUK,MAEvB,CAACL,IAGGM,EAAgBH,uBACpB,SAACI,GACC,IAAMF,EAAS,YAAOL,GACtBK,EAAUE,QAAaC,EACvBtE,QAAQC,IAAIkE,GACZJ,EAAwBI,GACxBzB,EAAS,CAAEoB,SAAUK,MAEvB,CAACL,IAGGS,EAAgBN,uBACpB,SAACC,GACC,IAAMC,EAAS,YAAOL,GACtBK,EAAUD,EAAQM,IAAMN,EACxBH,EAAwBI,GACxBzB,EAAS,CAAEoB,SAAUK,MAEvB,CAACL,IAGH,MAAO,CACLA,EAASW,QAAO,SAACC,GAAD,OAAOA,GAAkB,kBAANA,KACnCV,EACAI,EACAG,EACAT,EAASa,QChDE,SAASC,IAAe,IAAD,EACQvF,EAAgB,WAAY,IADpC,mBAC7BsC,EAD6B,KACnBkD,EADmB,KAGpClB,qBAAU,WAAM,4CACd,4BAAAf,EAAA,sEACqBS,IADrB,QACQV,EADR,SAEcA,EAAKhB,UACfkD,EAAwBlC,EAAKhB,UAHjC,4CADc,uBAAC,WAAD,wBAOdiC,KACC,IAEH,IAAMkB,EAAab,uBACjB,SAACc,GACC,IAAMC,EAAS,sBAAOrD,GAAP,CAAiBoD,IAChCF,EAAwBG,GACxBtC,EAAS,CAAEf,SAAUqD,MAEvB,CAACrD,IAGGsD,EAAgBhB,uBACpB,SAACiB,GACC,IAAMF,EAAS,YAAOrD,GACtBqD,EAAUE,QAAaZ,EACvBO,EAAwBG,GACxBtC,EAAS,CAAEf,SAAUqD,MAEvB,CAACrD,IAGGwD,EAAgBlB,uBACpB,SAACc,GACC,IAAMC,EAAS,YAAOrD,GACtBqD,EAAUD,EAAQP,IAAMO,EACxBF,EAAwBG,GACxBtC,EAAS,CAAEf,SAAUqD,MAEvB,CAACrD,IAGGyD,EAAiBnB,uBACrB,SAACO,GACC,OAAO7C,EAAS6C,KAElB,CAAC7C,IAEH,MAAO,CACLA,EAAS8C,QAAO,SAAC7B,GAAD,OAAOA,GAAkB,kBAANA,KACnCkC,EACAG,EACAE,EACAxD,EAASgD,OACTS,GCtDW,SAASC,IAAc,IAAD,EACOhG,EAAgB,UAAW,IADlC,mBAC5ByB,EAD4B,KACnBwE,EADmB,KAEnCtF,QAAQC,IAAIa,GACZ6C,qBAAU,WAAM,4CACd,4BAAAf,EAAA,sEACqBS,IADrB,OACQV,EADR,OAEE3C,QAAQC,IAAI0C,GACRA,GAAQA,EAAK7B,SACfwE,EAAuB3C,EAAK7B,SAJhC,4CADc,uBAAC,WAAD,wBAQd8C,KACC,IAEH,IAAM2B,EAAYtB,uBAChB,SAACuB,GACC,IAAMC,EAAQ,sBAAO3E,GAAP,CAAgB0E,IAC9BF,EAAuBG,GACvB/C,EAAS,CAAE5B,QAAS2E,MAEtB,CAAC3E,IAGG4E,EAAezB,uBACnB,SAAC0B,GACC,IAAMF,EAAQ,YAAO3E,GACrB2E,EAASE,QAAYrB,EACrBgB,EAAuBG,GACvB/C,EAAS,CAAE5B,QAAS2E,MAEtB,CAAC3E,IAGG8E,EAAe3B,uBACnB,SAACuB,GACC,IAAMC,EAAQ,YAAO3E,GACrB2E,EAASD,EAAOhB,IAAMgB,EACtBF,EAAuBG,GACvB/C,EAAS,CAAE5B,QAAS2E,MAEtB,CAAC3E,IAGG+E,EAAgB5B,uBACpB,SAACO,GACC,OAAO1D,EAAQ0D,KAEjB,CAAC1D,IAGH,MAAO,CACLA,EAAQ2D,QAAO,SAAC7B,GAAD,OAAOA,GAAkB,kBAANA,KAClC2C,EACAG,EACAE,EACA9E,EAAQ6D,OACRkB,GCzDW,SAASC,IAAgB,IAAD,EACSzG,EAC5C,YACA,IAHmC,mBAC9B0G,EAD8B,KACnBC,EADmB,KAMrCrC,qBAAU,WAAM,4CACd,4BAAAf,EAAA,sEACqBS,IADrB,QACQV,EADR,SAEcA,EAAKoD,WACfC,EAAyBrD,EAAKoD,WAHlC,4CADc,uBAAC,WAAD,wBAOdnC,KACC,IAEH,IAAMqC,EAAchC,uBAClB,SAACiC,GACC,IAAMC,EAAU,sBAAOJ,GAAP,CAAkBG,IAClCF,EAAyBG,GACzBzD,EAAS,CAAEqD,UAAWI,MAExB,CAACJ,IAGGK,EAAiBnC,uBACrB,SAACoC,GACC,IAAMF,EAAU,YAAOJ,GACvBI,EAAWE,QAAc/B,EACzB0B,EAAyBG,GACzBzD,EAAS,CAAEqD,UAAWI,MAExB,CAACJ,IAGGO,EAAiBrC,uBACrB,SAACiC,GACC,IAAMC,EAAU,YAAOJ,GACvBI,EAAWD,EAAS1B,IAAM0B,EAC1BF,EAAyBG,GACzBzD,EAAS,CAAEqD,UAAWI,MAExB,CAACJ,IAGGQ,EAAkBtC,uBACtB,SAACO,GACC,OAAOuB,EAAUvB,KAEnB,CAACuB,IAEH,MAAO,CACLA,EAAUtB,QAAO,SAAC+B,GAAD,OAAOA,GAAkB,kBAANA,KACpCP,EACAG,EACAE,EACAP,EAAUpB,OACV4B,G,iFCxDW,SAASE,EAAOC,GAAQ,IAAD,EACRlH,oBAAS,GADD,mBAC7BmH,EAD6B,KACrBC,EADqB,KAEpC,OACE,kBAAC,IAAD,iBACMF,EADN,CAEEG,QAAS,kBAAMD,GAAU,IACzBE,OAAQ,WACFJ,EAAMI,QAAkC,oBAAjBJ,EAAMI,QAC/BJ,EAAMI,SAERF,GAAU,IAEZG,cAAe,CACbC,QAASL,EACL,CACE,uBACA,qBACA,eACA,sBACA,mBAEF,GACJM,qBAAsB,CACpB,CAAEC,MAAO,OAAQC,MAAO,OAAQC,UAAW,oBAC3C,CAAEF,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,YAAaC,MAAO,cAE/BE,oBAAqB,CACnB,CAAEH,MAAO,SAAUC,MAAO,YAC1B,CAAED,MAAO,gBAAiBC,MAAO,cACjC,CAAED,MAAO,iBAAkBC,MAAO,cAClC,CAAED,MAAO,gBAAiBC,MAAO,iBAEnCG,mBAAoB,CAClB,CAAEJ,MAAO,KAAMC,MAAO,uBACtB,CAAED,MAAO,KAAMC,MAAO,0BCnCjB,SAASI,EAAT,GAAkD,IAA1BrB,EAAyB,EAAzBA,SAAUsB,EAAe,EAAfA,YAAe,EAClBhI,mBAC1CiI,IAAeC,sBAAsBxB,EAASnF,eAAgB,SAFF,mBACvDA,EADuD,KACvC4G,EADuC,OAKhBnI,mBAC5CiI,IAAeC,sBAAsBxB,EAASlF,gBAAiB,SANH,mBAKvDA,EALuD,KAKtC4G,EALsC,KASxDC,EAAkB,SAAC3B,GACvByB,EACEF,IAAeC,sBAAsBxB,EAASnF,eAAgB,SAEhE6G,EACEH,IAAeC,sBAAsBxB,EAASlF,gBAAiB,UAI7D8G,EAAuB,SAACC,EAAD,GAAyB,IAAnBtH,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,OAC1B,QAATK,GAA2B,aAATA,IACpBL,EAAQ4H,WAAW5H,IACf6H,MAAM7H,OAEZoH,EAAY,eAAKtB,EAAN,eAAiBzF,EAAOL,KACnCyH,EAAgB3B,KAGZgC,EAAiB,SAACzH,EAAML,GAC5BoH,EAAY,eAAKtB,EAAN,eAAiBzF,EAAOL,EAAMiB,SAAS,WAClDwG,EAAgB3B,IAGlB,OACE,kBAACiC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CACEC,QAASC,IACTrB,MAAM,aACN9G,MAAO8F,EAASzF,KAChBA,KAAK,OACL+H,SAAUV,KAGd,kBAACK,EAAA,EAAKE,MAAN,CACEC,QAAS7B,EACTS,MAAO,mBACPsB,SAAUb,EACVvH,MAAOW,EACP+F,OAAQ,WACNoB,EAAe,iBAAkBnH,MAGrC,kBAACoH,EAAA,EAAKE,MAAN,CACEC,QAAS7B,EACTS,MAAO,eACPsB,SAAUZ,EACVxH,MAAOY,EACP8F,OAAQ,WACNoB,EAAe,kBAAmBlH,MAGtC,kBAACmH,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CACEC,QAASC,IACTrB,MAAM,OACNuB,YAAY,IACZhI,KAAK,MACLiI,KAAK,UACLF,SAAUV,EACV1H,MAAO8F,EAAShF,MAElB,kBAACiH,EAAA,EAAKE,MAAN,CACEC,QAASC,IACTrB,MAAM,eACNuB,YAAY,IACZC,KAAK,UACLjI,KAAK,WACL+H,SAAUV,EACV1H,MAAO8F,EAASjF,aC9EX,iBAAO,IAAD,EAOf6E,IAPe,mBAEjBC,EAFiB,KAGjBE,EAHiB,KAIjBG,EAJiB,KAKjBE,EALiB,KAMjBqC,EANiB,OAQanJ,qBARb,mBAQZ0G,EARY,KAQFsB,EARE,KAmBnB,OACE,6BACE,kBAACoB,EAAA,EAAD,CACEC,QAAS,kBACPrB,EAAY,eAAKsB,EAAN,CAAwBtE,GAAImE,MAEzCI,SAAO,GAJT,eAQC7C,GACC,kBAAC8C,EAAA,EAAD,CAAOC,QAAS,kBAAMzB,KAAe0B,MAAM,GACzC,kBAACF,EAAA,EAAMG,OAAP,cACA,kBAACH,EAAA,EAAMI,QAAP,KACE,kBAAC7B,EAAD,CAAcrB,SAAUA,EAAUsB,YAAaA,KAEjD,kBAACwB,EAAA,EAAMK,QAAP,KACE,kBAACT,EAAA,EAAD,CACEC,QAAS,kBAAMrB,KACf8B,QAAQ,YACRC,UAAQ,EACRb,KAAK,QACLc,cAAc,UAEhB,kBAACZ,EAAA,EAAD,CACEC,QAlCS,WACf3C,EAAS1B,IAAMmE,EACjB1C,EAAYC,GAEZI,EAAeJ,GAEjBsB,KA6BU8B,QAAQ,YACRP,SAAO,EACPL,KAAK,QACLc,cAAc,YAKtB,kBAACC,EAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,EAAA,EAAMN,OAAP,KACE,kBAACM,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMG,WAAP,aACA,kBAACH,EAAA,EAAMG,WAAP,yBACA,kBAACH,EAAA,EAAMG,WAAP,qBACA,kBAACH,EAAA,EAAMG,WAAP,eACA,kBAACH,EAAA,EAAMG,WAAP,aACA,kBAACH,EAAA,EAAMG,WAAP,QAIJ,kBAACH,EAAA,EAAMI,KAAP,KACG9D,EAAU+D,KAAI,SAACtD,EAAG9B,GAAJ,OACb,kBAAC+E,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMM,KAAP,KAAavD,EAAE/F,MACf,kBAACgJ,EAAA,EAAMM,KAAP,KACE,yBAAKC,wBAAyB,CAAEC,OAAQzD,EAAEzF,mBAE5C,kBAAC0I,EAAA,EAAMM,KAAP,KACE,yBAAKC,wBAAyB,CAAEC,OAAQzD,EAAExF,oBAE5C,kBAACyI,EAAA,EAAMM,KAAP,KAAavD,EAAEvF,UACf,kBAACwI,EAAA,EAAMM,KAAP,KAAavD,EAAEtF,KACf,kBAACuI,EAAA,EAAMM,KAAP,KACE,kBAACnB,EAAA,EAAD,CACEC,QAAS,kBAAMrB,EAAYhB,IAC3BuC,SAAO,EACPL,KAAK,SAEP,kBAACE,EAAA,EAAD,CACEC,QAAS,kBAAMzC,EAAeI,EAAEhC,KAChC+E,UAAQ,EACRb,KAAK,mB,kBCzFR,SAASwB,EAAWC,GACjC,IAAIC,EAAO,IAAIhJ,KAAK+I,GACdE,EAAMD,EAAKE,UACXC,EAAQH,EAAKI,WAAa,EAChC,OACE,0BACER,wBAAyB,CACvBC,OAAO,GAAD,OAAKI,EAAM,GAAK,IAAMA,EAAMA,EAA5B,mBACJE,EAAQ,GAAK,IAAMA,EAAQA,EADvB,mBAEKH,EAAKK,kBCXT,SAASC,EAAW/J,GACjC,OAAOqH,WAAWrH,EAAMgK,QAAQ,IAAK,MCDxB,SAASC,EAAYjK,GAClC,MAAO,UAAGA,EAAMkK,QAAQ,IAAKF,QAAQ,IAAK,KCI7B,SAASG,EAAT,GAAwC,IAAtBtF,EAAqB,EAArBA,OAAQuF,EAAa,EAAbA,UAAa,EACdvL,mBAASgG,EAAOpD,SADF,mBAC7C4I,EAD6C,KAChCC,EADgC,KAG9CC,EAAqB,SAACnD,EAAD,GAAyB,IAAnBtH,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,MACrC,GAAa,YAATK,EAAoB,CAEtB,GADAL,EAAQsK,EAAWtK,GACf6H,MAAM7H,GAER,YADA6K,EAAe,IAGjB7K,EAAQwK,EAAYxK,GACpB6K,EAAe7K,GAEjB2K,EAAU,eAAKvF,EAAN,eAAe/E,EAAOL,MAGjC,OACE,kBAAC+H,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAY+C,MAAM,SAChB,kBAAChD,EAAA,EAAKE,MAAN,CACE7D,GAAG,0BACH8D,QAASC,IACTrB,MAAM,OACNuB,YAAY,OACZhI,KAAK,OACL+H,SAAU0C,EACV9K,MAAOoF,EAAO/E,OAEhB,kBAAC0H,EAAA,EAAKE,MAAN,CACE7D,GAAG,0BACH8D,QAASC,IACTrB,MAAM,UACNuB,YAAY,kBACZD,SAAU0C,EACVzK,KAAK,UACLL,MAAOoF,EAAOrD,WAGlB,kBAACgG,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CACE7D,GAAG,+BACH8D,QAASC,IACTrB,MAAM,UACNuB,YAAY,UACZhI,KAAK,UACLiI,KAAK,UACLF,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OAAkB6K,EAAe7K,IAC3C0G,OAAQ,SAACiB,GACPmD,EAAmBnD,EAAG,CACpBtH,KAAMsH,EAAEqD,OAAO3K,KACfL,MAAO2H,EAAEqD,OAAOhL,SAGpBA,MAAO4K,M,aCjDF,SAASK,EAAT,GAA2C,IAAxBtG,EAAuB,EAAvBA,QAASuG,EAAc,EAAdA,WAAc,EACf9L,mBAASuF,EAAQpE,OADF,mBAChD4K,EADgD,KAClCC,EADkC,OAEDnG,IAFC,mBAEhDvE,EAFgD,KAEjC2K,EAFiC,KAElB5F,EAFkB,OAG3BrG,mBAASuF,EAAQjE,QAAQ,IAHE,mBAGhD0E,EAHgD,KAGxCuF,EAHwC,KAKjDW,EAAsB,SAAC3D,EAAD,GAAyB,IAAnBtH,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,MACtC,GAAa,UAATK,EAAkB,CAEpB,GADAL,EAAQ4H,WAAW5H,EAAMuK,QAAQ,IAAK,MAClC1C,MAAM7H,GAER,YADAoL,EAAgB,QAGlBpL,EAAQwK,EAAYxK,GACpBoL,EAAgBpL,GAElBkL,EAAW,eAAKvG,EAAN,eAAgBtE,EAAOL,MAG7BuL,EAAgB,CACpB,CAAErM,SAAKgF,EAAWlE,WAAOkE,EAAWsH,KAAM,IAC1C,CAAEtM,IAAKmM,EAAerL,MAAOqL,EAAeG,KAAM,gBAClDC,OACA/K,EAAQgJ,KAAI,SAAClH,GAAD,MAAQ,CAClBtD,IAAKsD,EAAE4B,GACPpE,MAAOwC,EAAE4B,GACToH,KAAMhJ,EAAEnC,UAkBZ,OACE,kBAAC0H,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAY+C,MAAM,SAChB,kBAAChD,EAAA,EAAKE,MAAN,CACE7D,GAAG,0BACH8D,QAASC,IACTrB,MAAM,OACNuB,YAAY,OACZhI,KAAK,OACL+H,SAAUkD,EACVtL,MAAO2E,EAAQtE,OAEjB,kBAAC0H,EAAA,EAAKE,MAAN,CACE7D,GAAG,0BACH8D,QAASC,IACTrB,MAAM,eACNuB,YAAY,QACZqD,KAAK,SACLtD,SAAUkD,EACVjL,KAAK,SACLL,MAAO2E,EAAQlE,UAGnB,kBAACsH,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CACE7D,GAAG,+BACH8D,QAASC,IACTrB,MAAM,OACNuB,YAAY,OACZhI,KAAK,OACL+H,SAAUkD,EACVtL,MAAO2E,EAAQnE,OAEjB,kBAACuH,EAAA,EAAKE,MAAN,CACE7D,GAAG,+BACH8D,QAASC,IACTrB,MAAM,QACNuB,YAAY,QACZhI,KAAK,QACLiI,KAAK,YACLF,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OAAkBoL,EAAgBpL,IAC5C0G,OAAQ,SAACiB,GACP2D,EAAoB3D,EAAG,CACrBtH,KAAMsH,EAAEqD,OAAO3K,KACfL,MAAO2H,EAAEqD,OAAOhL,SAGpBA,MAAOmL,KAGX,kBAACpD,EAAA,EAAKE,MAAN,CACEnB,MAAM,mCACNoB,QAASyD,IACTC,QAAM,EACNC,WAAS,EACTC,QAASP,EACTvL,MAAOoF,EAASA,EAAOhB,QAAKF,EAC5BkE,SAvEqB,SAACT,EAAD,GAAmB,IACxCvC,EAD2BpF,EAAY,EAAZA,MAG7BoF,OADYlB,IAAVlE,OACOkE,EACAlE,EAAQqL,EACR5F,EAAczF,GAEjB,eAAQ+L,EAAR,CAAwB3H,GAAIiH,IAEpCzL,QAAQC,IAAIuF,EAAQpF,GACpB2K,EAAUvF,GACV8F,EAAW,eAAKvG,EAAN,CAAejE,QAAS0E,EAAS,CAACA,GAAU,SA8DnDA,GACC,kBAAC4G,EAAA,EAAD,KACE,kBAACtB,EAAD,CAAQtF,OAAQA,EAAQuF,UAAWA,M,WCxG9B,aAAO,IAAD,EAOfnG,IAPe,mBAEjBjD,EAFiB,KAIjBsD,EAJiB,KAKjBE,EALiB,KAMjBkH,EANiB,OAQW7M,qBARX,mBAQZuF,EARY,KAQHuG,EARG,OASyB9L,qBATzB,mBASZ8M,EATY,KASIC,EATJ,OAUA1I,IAAZC,EAVY,oBAWb0I,EAAmBC,mBAAQ,WAC/B,OAAKH,EAGExI,EAAS4I,QAAO,SAACC,EAAMjI,GAC5B,IAAK,IAAIkI,KAAOlI,EAAE/C,SAAU,CAC1B,IAAMoD,EAAUL,EAAE/C,SAASiL,GAC3B,GAAI7H,EAAQP,KAAO8H,EAAe9H,GAChC,MAAM,GAAN,mBACKmI,GADL,gBAGOjI,EAHP,CAIIK,cAKR,OAAO4H,IACN,IAhBM,OAiBR,CAAC7I,EAAUwI,IAEd,OACE,yBAAKlF,UAAU,0BACb,kBAACwB,EAAA,EAAD,CACEC,QAAS,kBAAMyC,EAAW,eAAKuB,EAAN,CAAuBrI,GAAI6H,MACpDtD,SAAO,GAFT,iBAMChE,GACC,kBAACiE,EAAA,EAAD,CAAOC,QAAS,kBAAMqC,KAAcpC,MAAM,GACxC,kBAACF,EAAA,EAAMG,OAAP,gBACA,kBAACH,EAAA,EAAMI,QAAP,KACE,kBAACiC,EAAD,CAAStG,QAASA,EAASuG,WAAYA,KAEzC,kBAACtC,EAAA,EAAMK,QAAP,KACE,kBAACT,EAAA,EAAD,CACEC,QAAS,kBAAMyC,KACfhC,QAAQ,YACRC,UAAQ,EACRb,KAAK,QACLc,cAAc,UAEhB,kBAACZ,EAAA,EAAD,CACEC,QAAS,WACP1D,EAAcJ,GACduG,KAEFhC,QAAQ,YACRwD,UAAQ,EACRpE,KAAK,QACLc,cAAc,YAKrB8C,GACC,kBAACtD,EAAA,EAAD,CAAOC,QAAS,kBAAMsD,KAAqBrD,MAAM,GAC/C,kBAACF,EAAA,EAAMG,OAAP,mBACA,kBAACH,EAAA,EAAMI,QAAP,KACE,kBAACK,EAAA,EAAD,KACE,kBAACA,EAAA,EAAMN,OAAP,KACE,kBAACM,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMG,WAAP,wBACA,kBAACH,EAAA,EAAMG,WAAP,cACA,kBAACH,EAAA,EAAMG,WAAP,4BACA,kBAACH,EAAA,EAAMG,WAAP,eACA,kBAACH,EAAA,EAAMG,WAAP,wBAGJ,kBAACH,EAAA,EAAMI,KAAP,KACG2C,EAAiB1C,KAAI,SAAC5F,GAAD,OACpB,kBAACuF,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMM,KAAP,KAAa7F,EAAQ1C,eACrB,kBAACiI,EAAA,EAAMM,KAAP,KAAa7F,EAAQgC,SAASzF,MAC9B,kBAACgJ,EAAA,EAAMM,KAAP,KAAa7F,EAAQa,QAAQlE,QAC7B,kBAAC4I,EAAA,EAAMM,KAAP,KAAa7F,EAAQa,QAAQpE,OAC7B,kBAAC8I,EAAA,EAAMM,KAAP,KACG7F,EAAQ6I,YACL7C,EAAWhG,EAAQ6I,aACnB,sBASpB,kBAACtD,EAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,EAAA,EAAMN,OAAP,KACE,kBAACM,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMG,WAAP,WACA,kBAACH,EAAA,EAAMG,WAAP,aACA,kBAACH,EAAA,EAAMG,WAAP,aACA,kBAACH,EAAA,EAAMG,WAAP,cACA,kBAACH,EAAA,EAAMG,WAAP,cACA,kBAACH,EAAA,EAAMG,WAAP,gBACA,kBAACH,EAAA,EAAMG,WAAP,QAIJ,kBAACH,EAAA,EAAMI,KAAP,KACGlI,EAASmI,KACR,SAAClH,EAAG8B,GAAJ,OACE9B,GACE,kBAAC6G,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMM,KAAP,KAAanH,EAAE4B,IACf,kBAACiF,EAAA,EAAMM,KAAP,KAAanH,EAAEnC,MACf,kBAACgJ,EAAA,EAAMM,KAAP,KAAanH,EAAEhC,MACf,kBAAC6I,EAAA,EAAMM,KAAP,KAAanH,EAAE/B,QACf,kBAAC4I,EAAA,EAAMM,KAAP,KAAanH,EAAEjC,OACf,kBAAC8I,EAAA,EAAMM,KAAP,KACGnH,EAAE9B,QAAQgJ,KAAI,SAAClH,GAAD,OACb,2BAAIA,EAAEnC,UAGV,kBAACgJ,EAAA,EAAMM,KAAP,KACE,kBAACnB,EAAA,EAAD,CACEC,QAAS,kBAAMyC,EAAW1I,IAC1BmG,SAAO,EACPL,KAAK,SAEP,kBAACE,EAAA,EAAD,CACEC,QAAS,kBAAM0D,EAAkB3J,IACjC8F,KAAK,OACLsE,WAAS,IAEX,kBAACpE,EAAA,EAAD,CACEC,QAAS,kBAAM5D,EAAcP,IAC7B6E,UAAQ,EACRb,KAAK,mB,2ECpJrBuE,GAAY,CAChBC,KAAM,EACNlG,QAAS,OACTmG,cAAe,SACfC,WAAY,SACZC,QAAS,OACTC,YAAa,EACbC,aAAc,EACdC,YAAa,UACbC,YAAa,SACbC,gBAAiB,UACjBC,MAAO,UACPC,QAAS,OACTC,WAAY,2BAGRC,GAAc,CAClBN,YAAa,WAGTO,GAAc,CAClBP,YAAa,WAGTQ,GAAc,CAClBR,YAAa,WAGA,SAASS,GAAT,GAAqC,IAAXC,EAAU,EAAVA,OAAU,EACIC,aAAY,CAC/DC,OAAQ,YADFC,EADyC,EACzCA,aAAcC,EAD2B,EAC3BA,aAAcC,EADa,EACbA,aAI9BpH,EAAQsF,mBACZ,iCACKQ,GADL,GAEMoB,EAAeP,GAAc,GAFnC,GAGMQ,EAAeP,GAAc,GAHnC,GAIMQ,EAAeP,GAAc,MAEnC,CAACK,EAAcE,EAAcD,IAG/B,OACE,kBAAC,KAAD,CAAUJ,OAAQA,IACf,gBAAGM,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,yBAAKrH,UAAU,aACb,wBACMoH,EAAa,CACfrH,QACA+G,OAAQ,SAACQ,GAAD,OAAWA,EAAMC,qBAG3B,0BAAWF,KACX,2FCnDG,SAASG,GAAT,GAAyD,IAAlCnL,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAYmL,EAAY,EAAZA,SAAY,EACjCrP,mBAClCiI,IAAeC,sBAAsBjE,EAAQ1B,WAAY,SAFU,mBAC9DA,EAD8D,KAClD+M,EADkD,OAIvBtP,mBAC5CiI,IAAeC,sBAAsBjE,EAAQxB,gBAAiB,SALK,mBAI9DA,EAJ8D,KAI7C8M,EAJ6C,OAO/BvP,mBACpCiI,IAAeC,sBAAsBjE,EAAQzB,YAAa,SARS,mBAO9DA,EAP8D,KAOjDgN,EAPiD,OAUjBxP,mBAClDiI,IAAeC,sBAAsBjE,EAAQvB,mBAAoB,SAXE,mBAU9DA,EAV8D,KAU1C+M,EAV0C,OAaHzP,mBAChEiI,IAAeC,sBACbjE,EAAQ3B,0BACR,SAhBiE,mBAa9DA,EAb8D,KAanCoN,EAbmC,KAoB/DC,EAAiB,SAAC1O,EAAML,GAC5BsD,EAAW,eAAKD,EAAN,eAAgBhD,EAAOL,EAAMiB,SAAS,YAG5C+N,EAAgB,SAACrH,EAAD,GAAyB,IAAnBtH,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,MAChCsD,EAAW,eAAKD,EAAN,eAAgBhD,EAAOL,MAWnC,OACE,kBAAC+H,EAAA,EAAD,KACgB,qBAAb0G,GACC,kBAAC1G,EAAA,EAAKE,MAAN,CACEnB,MAAM,YACNoB,QAASC,IACT9H,KAAK,OACL+H,SAAU4G,EACVhP,MAAOqD,EAAQhD,OAGL,SAAboO,GACC,kBAACzC,EAAA,EAAD,KACE,oCACkB,KAAjB3I,EAAQ5B,KACP,6BACE,yBAAKwN,IAAK5L,EAAQ5B,KAAMyN,IAAI,iBAC5B,kBAAC1G,EAAA,EAAD,CACEW,UAAQ,EACRV,QAAS,kBAAMnF,EAAW,eAAKD,EAAN,CAAe5B,KAAM,QAFhD,eAQF,kBAAC,GAAD,CAAUqM,OAjCE,SAACqB,GACrB,IAAIC,EAAOD,EAAM,GACXE,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACjB,GACfhL,EAAW,eAAKD,EAAN,CAAe5B,KAAM6M,EAAMtD,OAAOhI,WAE9CqM,EAAOG,cAAcJ,OA+BL,8BAAbX,GACC,kBAAC1G,EAAA,EAAKE,MAAN,CACEC,QAAS7B,EACTrG,MAAO0B,EACP0G,SAAU0G,EACVpI,OAAQ,WACNqI,EACE,4BACArN,IAGJoF,MAAM,WACNzG,KAAK,8BAGK,uBAAboO,GACC,kBAAC1G,EAAA,EAAKE,MAAN,CACEC,QAAS7B,EACTrG,MAAO8B,EACPsG,SAAUyG,EACVnI,OAAQ,WACNqI,EAAe,qBAAsBjN,IAEvCgF,MAAM,wBACNzG,KAAK,uBAGK,oBAAboO,GACC,kBAAC1G,EAAA,EAAKE,MAAN,CACEC,QAAS7B,EACTrG,MAAO6B,EACPuG,SAAUuG,EACVjI,OAAQ,WACNqI,EAAe,kBAAmBlN,IAEpCiF,MAAM,8BACNzG,KAAK,oBAGK,gBAAboO,GACC,kBAAC1G,EAAA,EAAKE,MAAN,CACEC,QAAS7B,EACTrG,MAAO4B,EACPwG,SAAUwG,EACVlI,OAAQ,WACNqI,EAAe,cAAenN,IAEhCkF,MAAM,gBACNzG,KAAK,gBAGK,eAAboO,GACC,kBAAC1G,EAAA,EAAKE,MAAN,CACEC,QAAS7B,EACTrG,MAAO2B,EACPyG,SAAU,SAACpI,GACT0O,EAAc1O,IAEhB0G,OAAQ,WACNqI,EAAe,aAAcpN,IAE/BmF,MAAM,cACNzG,KAAK,eAGK,qBAAboO,GACC,kBAAC1G,EAAA,EAAKE,MAAN,CACEnB,MAAM,QACNoB,QAASC,IACTE,YAAY,iCACZhI,KAAK,eACL+H,SAAU4G,EACVhP,MAAOqD,EAAQkK,SCnHV,mBAMR,IALLzJ,EAKI,EALJA,QACA2L,EAII,EAJJA,WAII,IAHJC,oBAGI,MAHW,GAGX,EAFJC,EAEI,EAFJA,aACAC,EACI,EADJA,gBACI,EACwDlK,IADxD,mBACGC,EADH,KACoB4C,EADpB,KACqCpC,EADrC,OAE0BhD,IAF1B,mBAEGE,EAFH,KAEYC,EAFZ,OAG4BlE,mBAC9B+G,EAAgBrC,EAAQgC,SAAS1B,KAAON,EAAQgC,UAJ9C,mBAGGA,EAHH,KAGasB,EAHb,OAaA5C,IAbA,mBAOFjD,EAPE,KAQFsO,EARE,KAWF5D,EAXE,KAYFjH,EAZE,OAc4C5F,mBAAS0E,EAAQvC,UAd7D,mBAcGuO,EAdH,KAcqBC,EAdrB,OAe0B3Q,mBAAS,eAClCqN,EADiC,CAEpCrI,GAAI6H,KAjBF,oBAeGtH,GAfH,MAeYuG,GAfZ,SAmB8B9L,mBAAS,GAnBvC,qBAmBG4Q,GAnBH,MAmBcC,GAnBd,SAoB4B7Q,mBAAS,GApBrC,qBAoBG8Q,GApBH,MAoBaC,GApBb,SAqBgC/Q,wBAAS8E,GArBzC,qBAqBGkM,GArBH,MAqBeC,GArBf,SAsBsBjR,mBAAS0E,EAAQzC,OAtBvC,qBAsBGA,GAtBH,MAsBUiP,GAtBV,SAuByBrL,IAAhBO,GAvBT,qBAyBErB,GAAgB,SAACwD,EAAD,GAAkC,IAA5BtH,EAA2B,EAA3BA,KAAML,EAAqB,EAArBA,MAAOuQ,EAAc,EAAdA,QACvC,GAAa,UAATlQ,EAAkB,CAEpB,GADAL,EAAQ4H,WAAW5H,EAAMuK,QAAQ,IAAK,MAClC1C,MAAM7H,GAER,YADAsQ,GAAS,IAGXtQ,EAAQwK,EAAYxK,GACpBsQ,GAAStQ,GAEE,UAATK,IACFL,EAAQuQ,GAEVd,EAAW,eAAK3L,EAAN,eAAgBzD,EAAOL,MAG7BwQ,GAAmB,kBAAMH,IAAeD,KAcxCK,GAAoB,SAACzQ,EAAOK,GAChCoP,EAAW,eAAK3L,EAAN,eAAgBzD,EAAOL,EAAMiB,eAGnCyP,GAAkBrE,mBAAQ,WAQ9B,MAPW,CACT,CACEnN,IAAKqJ,EACLvI,MAAOuI,EACPiD,KAAK,gBAGGC,OACV9F,EAAU+D,KAAI,SAACtD,GAAD,MAAQ,CACpBlH,IAAKkH,EAAEhC,GACPoH,KAAMpF,EAAE/F,KACRL,MAAOoG,EAAEhC,UAGZ,CAACuB,EAAWG,IAET6K,GAAkBtE,mBAAQ,WAE9B,MADa,GACDZ,OACVlK,EAASmI,KAAI,SAAClH,GACZ,IAAIgJ,EAAOhJ,EAAEnC,KAAKuQ,MAAM,EAAG,GAI3B,OAHIpF,IAAShJ,EAAEnC,OACbmL,GAAQ,OAEH,CACLtM,IAAKsD,EAAE4B,GACPpE,MAAOwC,EAAE4B,GACToH,cAIL,CAACjK,IAcE+J,GAAsB,SAAClH,EAAI/D,EAAML,GACrC,IAAI6Q,EACJ,GAAIzM,GAAM0L,EAAiBvL,OAAQ,CACjC,GAAIvE,GAASiM,EACX,OAEF4E,EAAiB,sBACZf,GADY,CAEf,CAAEI,YAAUF,aAAWlL,UAAW9E,KAEpCmQ,GAAY,GACZF,GAAa,QAEbY,EAAiB,YAAOf,IACN1L,GAAI/D,GAAQL,EAEhC+P,EAAoBc,GACpBpB,EAAW,eACN3L,EADK,CAERvC,SAAUsP,EAAkBnH,KAAI,SAAClH,GAAD,sBAC3BA,EAD2B,GAE3BwC,EAAexC,EAAEsC,mBAiB1B,OACE,yBAAKkC,UAAW2I,GACd,yBAAK3I,UAAU,wBACb,kBAACwB,EAAA,EAAD,CAAQC,QAAS+H,GAAkB7H,SAAO,GAA1C,0BAIF,yBAAK3B,UAAW,iBACO,aAApB0I,EAAa,IACZ,kBAAC9G,EAAA,EAAD,CAAOE,MAAI,EAACD,QAAS,kBAAM+G,EAAgB,KAAKkB,WAAS,GACvD,yBAAK9J,UAAU,qBACb,kBAACe,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CACEnB,MAAM,kCACNoB,QAASyD,IACTC,QAAM,EACNC,WAAS,EACTC,QAAS4E,GACT1Q,MAAO8F,EAAS1B,GAChBgE,SArEa,SAACT,EAAD,GAAmB,IAC1C7B,EAD6B9F,EAAY,EAAZA,MAEJ8F,EAAzB9F,EAAQuI,EAA4BpC,EAAgBnG,GAC3C,eAAQ0I,EAAR,CAA0BtE,GAAImE,IAC3CnB,EAAYtB,GACZlG,QAAQC,IAAIiG,GACZ2J,EAAW,eACN3L,EADK,CAERgC,kBAgEQ,kBAACkG,EAAA,EAAD,KACE,kBAAC7E,EAAD,CACErB,SAAUA,EACVsB,YAAa,SAACtB,GACZsB,EAAYtB,GACZ2J,EAAW,eACN3L,EADK,CAERgC,oBAQd,kBAACiL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,OAAK,GACT,kBAACD,EAAA,EAAKhI,QAAN,KACE,yBAAKhC,UAAU,qBACb,6BACE,kBAACe,EAAA,EAAD,KACG+H,EAAiBvL,OAAS,GACzB,6BACE,uDACCuL,EAAiBpG,KAAI,SAAClH,EAAG8B,GAAJ,OACpB,6BACE,kBAACyD,EAAA,EAAKC,MAAN,CAAYkJ,OAAO,SACjB,kBAACnJ,EAAA,EAAKI,MAAN,CACE8I,OAAK,EACL5Q,KAAK,WACLqL,KAAK,SACL5E,MAAM,SACN9G,MAAOwC,EAAE0N,SACT9H,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAOK,EAAb,EAAaA,KAAb,OACRiL,GAAoBhH,EAAGjE,EAAML,MAGjC,kBAAC+H,EAAA,EAAKI,MAAN,CACE8I,OAAK,EACL5Q,KAAK,YACLqL,KAAK,SACL5E,MAAM,WACN9G,MAAOwC,EAAEwN,UACT5H,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAOK,EAAb,EAAaA,KAAb,OACRiL,GAAoBhH,EAAGjE,EAAML,MAIjC,kBAAC+H,EAAA,EAAKE,MAAN,CACEC,QAASyD,IACTsF,OAAK,EACLnK,MAAM,UACNzG,KAAK,YACLuL,QAAM,EACNC,WAAS,EACTC,QAAS6E,GACT3Q,MAAOwC,EAAEsC,UACTsD,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAOK,EAAb,EAAaA,KAAb,OACRiL,GAAoBhH,EAAGjE,EAAML,MAGjC,kBAAC+H,EAAA,EAAKE,MAAN,KACE,uCACA,kBAACO,EAAA,EAAD,CACEF,KAAK,QACLa,UAAQ,EACRV,QAAS,kBApGnB,SAACrE,GACrB,IAAMyM,EAAoBf,EAAiBzL,QAAO,SAAC7B,EAAG8B,GAAJ,OAAUA,IAAMF,KAClE2L,EAAoBc,GACpBpB,EAAW,eACN3L,EADK,CAERvC,SAAUsP,EAAkBnH,KAAI,SAAClH,GAAD,sBAC3BwC,EAAexC,EAAEsC,WADU,GAE3BtC,SA6FsCqC,CAAcP,YAMvC,8BAGJ,qDAEA,kBAACyD,EAAA,EAAKC,MAAN,CAAYkJ,OAAO,SACjB,kBAACnJ,EAAA,EAAKI,MAAN,CACE8I,OAAK,EACL5Q,KAAK,SACLqL,KAAK,SACL5E,MAAM,YACN9G,MAAOkQ,GACP9H,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OAAkBmQ,GAAYnQ,MAE1C,kBAAC+H,EAAA,EAAKI,MAAN,CACE8I,OAAK,EACL5Q,KAAK,cACLqL,KAAK,SACL5E,MAAM,cACN9G,MAAOgQ,GACP5H,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OAAkBiQ,GAAajQ,MAE3C,kBAAC+H,EAAA,EAAKE,MAAN,CACEC,QAASyD,IACTsF,OAAK,EACLnK,MAAM,UACNzG,KAAK,YACLuL,QAAM,EACNC,WAAS,EACTC,QAAS6E,GACT3Q,MAAO2E,GAAQP,GACfgE,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OACRsL,GACEwE,EAAiBvL,OACjB,YACAvE,SAOZ,kBAAC4I,EAAA,EAAD,CAAOE,KAAMsH,GAAYvH,QAAS2H,GAAkBM,WAAS,GAC3D,kBAAClI,EAAA,EAAMG,OAAP,sBACA,kBAACH,EAAA,EAAMI,QAAP,KACE,kBAACiC,EAAD,CAAStG,QAASA,GAASuG,WAAYA,MAEzC,kBAACtC,EAAA,EAAMK,QAAP,KACE,kBAACT,EAAA,EAAD,CACEC,QAAS+H,GACTtH,QAAQ,YACRC,UAAQ,EACRb,KAAK,QACLc,cAAc,UAEhB,kBAACZ,EAAA,EAAD,CACEC,QA1PE,WACpBoH,EAAclL,IACduG,GAAW,eACNuB,EADK,CAERrI,GAAI6H,EAAiB,KAEvBuE,KACI7L,GAAQjE,QAAQ6D,OAAS,GAC3BiB,GAAab,GAAQjE,QAAQ,KAmPbwI,QAAQ,UACRwD,UAAQ,EACRpE,KAAK,QACLc,cAAc,eAOL,YAApBsG,EAAa,IACZ,kBAAC9G,EAAA,EAAD,CAAOE,MAAI,EAACD,QAAS,kBAAM+G,EAAgB,KAAKkB,WAAS,GACvD,yBAAK9J,UAAU,qBACb,kBAACe,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYiJ,OAAK,EAACC,OAAO,SACF,gBAApBxB,EAAa,IACZ,kBAAC3H,EAAA,EAAKE,MAAN,CACEnB,MAAM,iBACNzG,KAAK,cACLoO,SAAU,IAAIzN,KAAK8C,EAAQ/C,aAC3BqH,SAAU,SAAC+I,GAAD,OAAOV,GAAkBU,EAAG,gBACtCjJ,QAASkJ,KACTC,WAAW,eAGM,cAApB3B,EAAa,IACZ,kBAAC3H,EAAA,EAAKE,MAAN,CACEnB,MAAM,eACNzG,KAAK,YACLoO,SAAU,IAAIzN,KAAK8C,EAAQ3C,WAC3BiH,SAAU,SAAC+I,GAAD,OAAOV,GAAkBU,EAAG,cACtCjJ,QAASkJ,KACTC,WAAW,eAGM,iBAApB3B,EAAa,IACZ,kBAAC3H,EAAA,EAAKE,MAAN,CACEnB,MAAM,eACNzG,KAAK,eACLoO,SAAU,IAAIzN,KAAK8C,EAAQ5C,cAC3BkH,SAAU,SAAC+I,GAAD,OAAOV,GAAkBU,EAAG,iBACtCjJ,QAASkJ,KACTC,WAAW,gBAIjB,kBAACtJ,EAAA,EAAKC,MAAN,CAAYiJ,OAAK,EAACC,OAAO,SACF,UAApBxB,EAAa,IACZ,kBAAC3H,EAAA,EAAKE,MAAN,CACEnB,MAAM,QACN9G,MAAOqB,GACPhB,KAAK,QACL+H,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OAAkBsQ,GAAStQ,IACrCkI,QAASC,IACTzB,OAAQ,SAACiB,GAAD,OACNxD,GAAcwD,EAAG,CACftH,KAAMsH,EAAEqD,OAAO3K,KACfL,MAAO2H,EAAEqD,OAAOhL,SAGpBsI,KAAK,SAGY,kBAApBoH,EAAa,IACZ,kBAAC3H,EAAA,EAAKE,MAAN,CACEnB,MAAM,kBACNzG,KAAK,gBACLL,MAAO8D,EAAQ1C,cACfgH,SAAUjE,GACV+D,QAASC,OAKM,UAApBuH,EAAa,IACZ,6BACE,kBAAC3H,EAAA,EAAKE,MAAN,KACE,0CACA,kBAACqJ,GAAA,EAAD,CACElJ,SAAU,SAACT,EAAD,GAA2B,IACtB,EAMN,EAPOtH,EAAoB,EAApBA,KAAMkQ,EAAc,EAAdA,QAChBA,EACFd,EAAW,eACN3L,GADK,mBAEPzD,EAAOkQ,GAFA,4BAGK,IAAIvP,MAHT,KAMVyO,EAAW,eACN3L,GADK,mBAEPzD,EAAOkQ,GAFA,iCAGKrM,GAHL,MAOd7D,KAAK,QACLkQ,QAASzM,EAAQyN,MACjBC,QAAM,KAGT1N,EAAQyN,OACP,kBAACxJ,EAAA,EAAKE,MAAN,CACEnB,MAAM,wBACNzG,KAAK,cACLoO,SAAU,IAAIzN,KAAK8C,EAAQ6I,aAC3BvE,SAAU,SAAC+I,GAAD,OAAOV,GAAkBU,EAAG,gBACtCjJ,QAASkJ,KACTC,WAAW,iBAMrB,kBAAC7C,GAAD,CACEnL,QAASA,EACTC,WAAY,SAACD,GACXC,EAAWD,GACXoM,EAAW,eACN3L,EADK,CAERT,cAGJoL,SAAUiB,EAAa,W,0CCza1B+B,GAnBK,SAAC,GAAD,IAAGrN,EAAH,EAAGA,GAAWsN,GAAd,EAAO5K,MAAP,EAAc4K,UAAd,OAClB,kBAAClJ,EAAA,EAAD,CACEG,SAAO,EACPF,QAAS,WACP,IAAMkJ,EAAQC,SAASC,eAAezN,GAEtC0N,KAAYH,EAAO,CAAEI,MAAO,IAAKC,MAAK,SAACC,GACrC,IAAMC,EAAUD,EAAOE,UAAU,aAAc,IAC3CC,EAAM,IAAIC,KACdD,EAAIE,SAASJ,EAAS,OAAQ,EAAG,EAAG,IAAK,KACzCE,EAAIG,KAAJ,UAAYb,EAAZ,aAGJpJ,KAAK,WACLc,cAAc,QACdF,QAAQ,cCNGsJ,GAZF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,WAAYtO,EAAS,EAATA,GACpC,OACE,yBACEA,GAAIA,EACJ4C,UAAU,2BACVD,MAAO,CAAEgE,MAAO,QAAS4H,OAAQD,EAAa,QAAU,KAEvDD,I,OCPQ,SAASG,GAAT,GAAiE,IAApCnK,EAAmC,EAAnCA,QAASkH,EAA0B,EAA1BA,aAAc8C,EAAY,EAAZA,SACjE,OACE,yBACEzL,UAAS,UAAK2I,GAA8B,GAAnC,6BAER8C,EACD,yBAAKzL,UAAU,kBAAkByB,QAASA,KCDhD,IAqSeoK,GArSI,SAAC,GAab,IAZLzO,EAYI,EAZJA,GAYI,IAXJN,QACE3C,EAUE,EAVFA,UACAJ,EASE,EATFA,YACAG,EAQE,EARFA,aACAE,EAOE,EAPFA,cACAC,EAME,EANFA,MACAyE,EAKE,EALFA,SAKE,IAJFvE,gBAIE,MAJS,GAIT,EAHF8B,EAGE,EAHFA,QAEFuM,EACI,EADJA,gBAEMkD,EAAqBvR,EACxBmI,KAAI,YAA2B,IAAxBnJ,EAAuB,EAAvBA,MAAOyP,EAAgB,EAAhBA,UACP+C,EAAazI,EAAW/J,GAASyP,EAIvC,OAFE+C,EAAaA,GAAcjN,EAASjF,SAAW,OACX,EAAIiF,EAAShF,IAAM,QAG1DwL,QAAO,SAAC0G,EAAOC,GAAR,OAAcrL,WAAWqL,GAAKD,IAAO,GAE/C,OAAKlN,EAKH,kBAAC,GAAD,CAAM4M,YAAY,EAAMtO,GAAIA,GAC1B,yBACE4C,UAAU,uBACVD,MACE1D,EAAQ6P,aAAe,CAAE9F,YAAa/J,EAAQ6P,cAAiB,KAGnE,yBAAKlM,UAAU,oBACb,yBAAKA,UAAU,oBACb,kBAAC4L,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,WAE3C,yBAAK5I,UAAU,8BACb,yBACEA,UAAU,8BACViI,IAAK5L,EAAQ5B,KACbyN,IAAI,mBAIV,yBAAKlI,UAAU,kBACb,yBAAKA,UAAU,mCACb,kBAAC4L,GAAD,CACEjD,aAAa,kCACblH,QAAS,kBACPmH,EAAgB,CAAC,UAAW,gCAG9B,yBACEhG,wBAAyB,CACvBC,OAAQxG,EAAQ3B,8BAIrBoE,EACC,kBAAC8M,GAAD,CACEjD,aAAa,+BACblH,QAAS,kBAAMmH,EAAgB,CAAC,eAEhC,yBACEhG,wBAAyB,CACvBC,OAAQ/D,EAASnF,mBAKvB,kBAAC6H,EAAA,EAAD,6BAGJ,kBAACoK,GAAD,CACEjD,aAAa,8BACblH,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,yBAE3C,yBACEhG,wBAAyB,CAAEC,OAAQxG,EAAQvB,yBAKnD,yBAAKkF,UAAU,gBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mBACb,kBAAC4L,GAAD,CACEjD,aAAa,4BACblH,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,sBAE3C,yBACEhG,wBAAyB,CAAEC,OAAQxG,EAAQxB,oBAG/C,yBAAKmF,UAAU,mCACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,2BACb,2BACE,8CAGJ,yBAAKA,UAAU,0BACb,2BACE,8CAGJ,yBAAKA,UAAU,wBACb,2BACE,6CAIN,yBAAKA,UAAU,+BACb,kBAAC4L,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,eAC3CD,aAAa,2BAEb,2BACE,2BAAI7F,EAAW3I,MAGnB,kBAACyR,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,kBAC3CD,aAAa,0BAEb,2BACE,2BAAI7F,EAAW5I,MAGnB,kBAAC0R,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,eAEhC,yBACE5I,UAAU,uBACV4C,wBAAyB,CACvBC,OAAQ/D,EAASlF,uBAO7B,yBAAKoG,UAAU,6BACb,kBAAC4L,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,kBAE3C,yBAAK5I,UAAU,0BACb,8CACkB,2BAAI8C,EAAW/I,OAIrC,kBAAC6R,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,oBAE3C,yBAAK5I,UAAU,2BACb,+CACmB,2BAAI5F,MAI3B,yBAAK4F,UAAU,6BACb,6DAIN,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,gCACZzF,EAASmI,KAAI,YAAiD,IAA9CsG,EAA6C,EAA7CA,UAAWE,EAAkC,EAAlCA,SAAU3P,EAAwB,EAAxBA,MAAOF,EAAiB,EAAjBA,KAAMG,EAAW,EAAXA,KAC3C2S,EAAWC,SAASpD,GAAa,EACjC+C,EAAazI,EAAW/J,GAASyP,EACjCqD,EACJN,EAAaA,GAAcjN,EAASjF,SAAW,KAC3CyS,EAAMD,GAA0B,EAAIvN,EAAShF,IAAM,KACzD,OACE,yBAAKkG,UAAU,wBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,oCACb,6BACE,2BACGgJ,IAAcE,GAAYA,EAAW,IACrCF,EAFH,YAGGmD,GAAY,MAGjB,yBAAKnM,UAAU,8BACb,2BAAI3G,GAAI,gBAAQA,EAAR,aAEV,yBAAK2G,UAAU,8BACZxG,GAAI,UAAOA,EAAP,OAGT,yBAAKwG,UAAU,mCAAf,gBACEmM,EAAW,KAAO,GADpB,YAEI5S,EAFJ,kBAGE4S,EAAQ,aAAS3I,EAAYuI,GAArB,WAAuC,IAHjD,OAKEjN,EAASjF,SAAW,EAApB,yBAEMiF,EAASjF,SAFf,uBAGmB2J,EACb6I,GAJN,WAMI,GAXN,wBAYgBvN,EAAShF,IAZzB,qBAYyC0J,EACvC6I,EAAyBC,GAb3B,cAgBF,yBAAKtM,UAAU,8BACb,2BAAIzF,EAASgD,OAAS,GAAlB,UAA0BiG,EAAY8I,GAAtC,kBAMd,yBAAKtM,UAAU,kCACb,yBAAKA,UAAU,mDACb,oCACA,2BACE,2BAAIwD,EAAYsI,GAAhB,aAGJ,kBAACF,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,YAE3C,yBAAK5I,UAAU,mDACb,4CACA,2BACE,2BAAI3F,EAAMkJ,QAAQ,IAAK,KAAvB,cAIN,kBAACqI,GAAD,CAAmBnK,QAAS,kBAAMmH,EAAgB,CAAC,eACjD,yBAAK5I,UAAU,mDACb,sCAAQlB,EAAShF,IAAjB,qBACA,2BACE,2BACG0J,GACGsI,EAAqBlL,WAAWvG,IAChCuG,WAAW9B,EAAShF,KACpB,KACD,IALL,cAYR,yBAAKkG,UAAU,sBACb,8CACA,2BACE,2BACGwD,GACEsI,EAAqBlL,WAAWvG,KAC9B,EAAIuG,WAAW9B,EAAShF,KAAO,MACjC,IAJL,YASJ,kBAAC8R,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,iBAC3CD,aAAa,2BAEb,6BACE,uBACE/F,wBAAyB,CAAEC,OAAQxG,EAAQzB,mBAMrD,kBAACgR,GAAD,CACEnK,QAAS,kBAAMmH,EAAgB,CAAC,UAAW,iBAE3C,yBACE5I,UAAU,iBACVD,MACE1D,EAAQ6P,aAAe,CAAE9F,YAAa/J,EAAQ6P,cAAiB,GAEjEtJ,wBAAyB,CAAEC,OAAQxG,EAAQ1B,iBApQ5C,M,UCrBI,I,OAAA,YAOR,IANL4R,EAMI,EANJA,KACAzP,EAKI,EALJA,QACA2L,EAII,EAJJA,WACA/L,EAGI,EAHJA,SACAS,EAEI,EAFJA,cACAqP,EACI,EADJA,OAEA,IAAK1P,IAAYJ,EACf,OAAO,KAFL,MAIwBtE,mBAASmU,GAJjC,mBAIGhN,EAJH,KAIWC,EAJX,OAKoCpH,mBAAS,IAL7C,mBAKGsQ,EALH,KAKiBE,EALjB,OAM2BlK,IAAlBQ,EANT,oBAmBEuN,EAAa3P,EAAQM,KAAOV,EAASa,OAE3C,OACE,6BACE,yBAAKyC,UAAU,uBACb,kBAAC0M,GAAA,EAAD,CACEC,MAAI,EACJC,OAAO,0BACP1K,QAAQ,qIACRZ,KAAK,UAGT,yBAAKtB,UAAU,gBACb,yBAAKA,UAAU,wBACZT,EACC,yBAAKS,UAAU,iCACb,6BACE,kBAAC,GAAD,CACE5C,GAAI,aACJ0C,MAAO,yBACP4K,SAAU5N,EAAQ1C,iBAGtB,6BACE,kBAACoH,EAAA,EAAD,CACEC,QAAS,kBAAMgH,KACfvG,QAAQ,YACRC,UAAQ,EACRb,KAAK,QACLc,cAAc,UAEftF,EAAQgC,UACP,kBAAC0C,EAAA,EAAD,CACEC,QA5CE,WAClB3E,EAAO,WCzBI,SAACA,GACd,OACEA,EAAQvC,SACLmI,KAAI,YAA2B,IAAxBnJ,EAAuB,EAAvBA,MAAOyP,EAAgB,EAAhBA,UACP+C,EAAazI,EAAW/J,GAASyP,EACvC,OAAO+C,EAAaA,GAAcjP,EAAQgC,SAASjF,SAAW,QAE/DyL,QAAO,SAAC0G,EAAOC,GAAR,OAAcA,EAAID,IAAO,GACnC1I,EAAWxG,EAAQzC,OAClBiJ,EAAWxG,EAAQzC,OAASyC,EAAQgC,SAAShF,IAAO,IDgB7B+S,CAAoB/P,GAC5CK,EAAcL,GACd2L,IACA7P,QAAQC,IAAIiE,EAAQgC,UACpBI,EAAepC,EAAQgC,UACD,oBAAX0N,GACTA,KAsCctK,QAASuK,EAAa,UAAY,YAClC/G,UAAQ,EACRpE,KAAK,QACLc,cAAc,YAMtB,yBAAKpC,UAAU,0BACb,kBAACwB,EAAA,EAAD,CAAQC,QAAS,kBAAMjC,GAAU,IAAOmC,SAAO,GAA/C,4BAKJ,kBAAC,GAAD,CACEvE,GAAI,aACJN,QAASA,EACT2L,WAAYA,EACZG,gBAAiBA,KAGpBrJ,GACC,kBAAC,GAAD,CACEoJ,aAAa,uBACb7L,QAASA,EACT2L,WAAYA,EACZC,aAAcA,EACdE,gBAAiBA,QExFd,cAAO,IAAD,EAOfnM,IAPe,mBAEjBC,EAFiB,KAIjBM,EAJiB,KAKjBG,EALiB,KAMjB2P,EANiB,OAQ2B1U,qBAR3B,mBAQZ2U,EARY,KAQKC,EARL,OASD7Q,IAAXE,EATY,sBAUwBqC,IAVxB,mBAUK6C,GAVL,WAYnB,OAAIwL,EAEA,kBAAC,GAAD,CACER,MAAI,EACJzP,QAASiQ,EACTtE,WAAYuE,EACZ7P,cAAeA,EACfT,SAAUA,IAMd,yBAAKsD,UAAU,yBACb,kBAACwB,EAAA,EAAD,CACEC,QAAS,kBACPuL,EAAmB,eACdC,EADa,CAEhB7P,GAAI0P,EACJhO,SAAS,eACJ4C,EADG,CAENtE,GAAImE,IAENlF,cAGJsF,SAAO,GAZT,iBAgBA,kBAACU,EAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,EAAA,EAAMN,OAAP,KACE,kBAACM,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMG,WAAP,wBACA,kBAACH,EAAA,EAAMG,WAAP,uBACA,kBAACH,EAAA,EAAMG,WAAP,cACA,kBAACH,EAAA,EAAMG,WAAP,gBACA,kBAACH,EAAA,EAAMG,WAAP,oBACA,kBAACH,EAAA,EAAMG,WAAP,wBACA,kBAACH,EAAA,EAAMG,WAAP,QAIJ,kBAACH,EAAA,EAAMI,KAAP,KACG/F,EAASgG,KACR,SAACpF,GAAD,OACEA,GACa,kBAANA,GACL,kBAAC+E,EAAA,EAAME,IAAP,CAAWrK,IAAKoF,EAAEF,IAChB,kBAACiF,EAAA,EAAMM,KAAP,KAAarF,EAAElD,eACf,kBAACiI,EAAA,EAAMM,KAAP,KAAaG,EAAWxF,EAAEvD,cAC1B,kBAACsI,EAAA,EAAMM,KAAP,KAAarF,EAAEwB,SAASzF,MACxB,kBAACgJ,EAAA,EAAMM,KAAP,KACGrF,EAAE/C,SAASmI,KAAI,SAAClH,GAAD,OACd,2BAAIA,EAAEnC,UAGV,kBAACgJ,EAAA,EAAMM,KAAP,KAAaa,EAAYlG,EAAEyO,YAA3B,WACA,kBAAC1J,EAAA,EAAMM,KAAP,KACGrF,EAAEqI,YAAc7C,EAAWxF,EAAEqI,aAAe,cAE/C,kBAACtD,EAAA,EAAMM,KAAP,KACE,kBAACnB,EAAA,EAAD,CACEG,SAAO,EACPL,KAAK,OACLG,QAAS,kBAAMuL,EAAmB1P,MAEpC,kBAACkE,EAAA,EAAD,CACEW,UAAQ,EACRb,KAAK,QACLG,QAAS,kBAAMzE,EAAcM,EAAEF,gBCtFtC,SAAS8P,KAAW,IAAD,EAC+BjP,IAD/B,mBACzBvE,EADyB,KACdyT,EADc,KACA3O,EADA,KACc6F,EADd,OAEJjM,qBAFI,mBAEzBgG,EAFyB,KAEjBuF,EAFiB,KAIhC,OACE,6BACE,kBAACnC,EAAA,EAAD,CACEC,QAAS,kBAAMkC,EAAU,eAAKoB,EAAN,CAAsB3H,GAAIiH,MAClD1C,SAAO,GAFT,eAMCvD,GACC,kBAACwD,EAAA,EAAD,CAAOC,QAAS,kBAAM8B,KAAa7B,MAAM,GACvC,kBAACF,EAAA,EAAMG,OAAP,eACA,kBAACH,EAAA,EAAMI,QAAP,KACE,kBAAC0B,EAAD,CAAQtF,OAAQA,EAAQuF,UAAWA,KAErC,kBAAC/B,EAAA,EAAMK,QAAP,KACE,kBAACT,EAAA,EAAD,CACEC,QAAS,kBAAMkC,KACfzB,QAAQ,YACRC,UAAQ,EACRb,KAAK,QACLc,cAAc,UAEhB,kBAACZ,EAAA,EAAD,CACEC,QAAS,WACPjD,EAAaJ,GACbuF,KAEFzB,QAAQ,YACRP,SAAO,EACPL,KAAK,QACLc,cAAc,YAKtB,kBAACC,EAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,EAAA,EAAMN,OAAP,KACE,kBAACM,EAAA,EAAME,IAAP,KACE,kBAACF,EAAA,EAAMG,WAAP,WACA,kBAACH,EAAA,EAAMG,WAAP,aACA,kBAACH,EAAA,EAAMG,WAAP,gBACA,kBAACH,EAAA,EAAMG,WAAP,gBACA,kBAACH,EAAA,EAAMG,WAAP,QAIJ,kBAACH,EAAA,EAAMI,KAAP,KACG/I,EAAQgJ,KACP,SAAClH,EAAG8B,GAAJ,OACE9B,GACE,kBAAC6G,EAAA,EAAME,IAAP,CAAWrK,IAAKsD,EAAE4B,IAChB,kBAACiF,EAAA,EAAMM,KAAP,KAAanH,EAAE4B,IACf,kBAACiF,EAAA,EAAMM,KAAP,KAAanH,EAAEnC,MACf,kBAACgJ,EAAA,EAAMM,KAAP,KAAanH,EAAET,SACf,kBAACsH,EAAA,EAAMM,KAAP,KAAanH,EAAER,QAAf,MACA,kBAACqH,EAAA,EAAMM,KAAP,KACE,kBAACnB,EAAA,EAAD,CACEC,QAAS,kBAAMkC,EAAUnI,IACzB8F,KAAK,OACLK,SAAO,IAET,kBAACH,EAAA,EAAD,CACEC,QAAS,kBAAM0L,EAAa3R,EAAE4B,KAC9B+E,UAAQ,EACRb,KAAK,kB,aClEZ,SAAS8L,KAAQ,IAAD,EACXjR,IAAXE,EADsB,sBAETqC,IAAbC,EAFsB,oBAGvB0O,EAAUC,eAHa,EAKyB7Q,IALzB,mBAKtBC,EALsB,KAKRS,EALQ,KAKO2P,EALP,OAMC1U,mBAAS,eAClC6U,EADiC,CAEpC7P,GAAI0P,EACJhO,SAAS,eACJ4C,EADG,CAENtE,GAAIuB,EAAUpB,SAEhBlB,aAb2B,mBAMtBS,EANsB,KAMb2L,EANa,KAgB7B,OACE,kBAAC,GAAD,CACE3L,QAASA,EACT2L,WAAYA,EACZtL,cAAeA,EACfT,SAAUA,EACV6P,MAAM,EACNC,OAAQ,WACNa,EAAQE,KAAK,gB,uBC7BfnS,I,OAFiBC,IAAfH,WAEiB,UAEV,SAAesS,GAA9B,mC,8CAAe,WAAqBjS,GAArB,eAAAC,EAAA,+EAEUI,IAAMC,KAAKT,GAAKG,GAF1B,YAELS,EAFK,QAGAT,MAA0B,MAAlBS,EAAOyR,OAHf,sBAIHzR,EAAOT,KAAKmS,QAJT,gCAMJ1R,EAAOT,MANH,sCAQL,iDARK,0D,0BCDTH,GAFiBC,IAAfH,WAEiB,YAEV,SAAeyS,GAA9B,mC,8CAAe,WAAwBpS,GAAxB,eAAAC,EAAA,+EAEUI,IAAMC,KAAKT,GAAKG,GAF1B,cAELS,EAFK,yBAGJA,EAAOT,MAHH,2CAMTqS,SACErS,KAAQmS,QAPD,0D,sBCPA,SAAeG,GAA9B,mC,8CAAe,WAAkCtS,GAAlC,uBAAAC,EAAA,yDACLmD,EAAoDpD,EAApDoD,UAAWpE,EAAyCgB,EAAzChB,SAAUmC,EAA+BnB,EAA/BmB,SAAUhD,EAAqB6B,EAArB7B,QAAS2C,EAAYd,EAAZc,SAE5CsC,EAHS,gCAILpG,aAAaY,QAAQ,YAAaV,KAAKW,UAAUuF,IAJ5C,WAMTpE,EANS,gCAOLhC,aAAaY,QAAQ,WAAYV,KAAKW,UAAUmB,IAP3C,WASTmC,EATS,kCAULnE,aAAaY,QAAQ,WAAYV,KAAKW,UAAUsD,IAV3C,YAYThD,EAZS,kCAaLnB,aAAaY,QAAQ,UAAWV,KAAKW,UAAUM,IAb1C,YAeT2C,EAfS,kCAgBL9D,aAAaY,QAAQ,UAAWV,KAAKW,UAAUiD,IAhB1C,6C,sBCAA,SAAeyR,KAA9B,gC,8CAAe,sBAAAtS,EAAA,+EACN,CACLkB,SAAUjE,KAAKC,MAAMH,aAAaC,QAAQ,WAAY,KACtDmG,UAAWlG,KAAKC,MAAMH,aAAaC,QAAQ,YAAa,KACxDkB,QAASjB,KAAKC,MAAMH,aAAaC,QAAQ,UAAW,KACpD+B,SAAU9B,KAAKC,MAAMH,aAAaC,QAAQ,WAAY,KACtD6D,QAAS5D,KAAKC,MAAMH,aAAaC,QAAQ,UAAW,OANzC,4C,sBCaA,SAASuV,KAAoB,IAAD,EACtBtR,IAAZC,EADkC,oBAEnC2Q,EAAUC,eAFyB,EAGHlV,mBAAS,CAAE4V,MAAO,GAAIC,SAAU,KAH7B,mBAGlCC,EAHkC,KAGrBC,EAHqB,OAIH/V,oBAAS,GAJN,mBAIlCgW,EAJkC,KAIrBC,EAJqB,OCVlCpW,EAAgB,OAAQ,IDUU,mBAKlCwD,EALkC,KAK5B6S,EAL4B,OAMTlW,mBAAS,YANA,mBAMlCmW,EANkC,KAMxBC,EANwB,OAOfpW,mBAAS,IAPM,mBAOlCO,EAPkC,KAO3B8V,EAP2B,KASzC,OACE,yBAAKzO,UAAU,yBACb,6BACE,wBAAIA,UAAU,iCAAd,aAEF,yBAAKA,UAAU,uCACZtD,EAASa,OAAS,GACjB,6BACE,kBAACiE,EAAA,EAAOR,MAAR,KACE,kBAACQ,EAAA,EAAD,CACEU,QAAQ,aACRT,QAAS,kBAAM4L,EAAQE,KAAK,eAE9B,kBAAC/L,EAAA,EAAD,CACEU,QAAQ,UACRT,QAAS,kBAAM4L,EAAQE,KAAK,eAE9B,kBAAC/L,EAAA,EAAD,CACEU,QAAQ,SACRT,QAAS,kBAAM4L,EAAQE,KAAK,gBAE9B,kBAAC/L,EAAA,EAAD,CACEU,QAAQ,UACRT,QAAS,kBAAM4L,EAAQE,KAAK,eAGhC,kBAAC/L,EAAA,EAAD,CACEkN,KAAK,QACL1O,UAAU,oCACVkC,QAAQ,gBACRT,QAAS,kBAAM4L,EAAQE,KAAK,MAC5B3H,WAAS,KAIf,kBAACpE,EAAA,EAAD,eACExB,UAAU,oCACVyB,QAAS,kBAAM4M,GAAe,KACzB5S,GAAQA,EAAKA,KACd,CAAEyG,QAASzG,EAAKA,KAAKuS,OACrB,CAAE1M,KAAM,QALd,CAMEK,SAAO,KAGRlG,GAAQA,EAAKA,KACZ,kBAACmG,EAAA,EAAD,CAAOE,KAAMsM,EAAavM,QAAS,kBAAMwM,GAAe,KACtD,kBAACzM,EAAA,EAAMG,OAAP,eACA,kBAACH,EAAA,EAAMI,QAAP,KACE,6BACE,6CAAmBvG,EAAKA,KAAKuS,OAC7B,kBAACxM,EAAA,EAAD,CACEU,QAAQ,WACRT,QAAS,WACP6M,EAAQ,IACRT,GAAmB,CACjBtT,SAAU,GACVmC,SAAU,GACViC,UAAW,GACXjF,QAAS,KAEXpB,OAAOsS,SAAS+D,SAASC,KAAO,UAO1C,kBAAChN,EAAA,EAAD,CACEE,KAAMsM,EACNvM,QAAS,WACPwM,GAAe,GACfI,EAAS,MAGX,kBAAC7M,EAAA,EAAMG,OAAP,KACgB,UAAbwM,EAAuB,WAAa,gBAEvC,kBAAC3M,EAAA,EAAMI,QAAP,KACE,kBAAC0K,GAAA,EAAD,CAASC,MAAI,GACG,UAAb4B,EACG,4EACA,+EAEL5V,GAAS,kBAAC+T,GAAA,EAAD,CAAS/T,OAAK,GAAEA,GAC1B,kBAACoI,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CACEnB,MAAM,QACNuB,YAAY,QACZH,QAASC,IACTnI,MAAOkV,EAAYF,MACnB5M,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OACRmV,EAAe,eAAKD,EAAN,CAAmBF,MAAOhV,QAG5C,kBAAC+H,EAAA,EAAKE,MAAN,CACEnB,MAAM,WACNuB,YAAY,WACZH,QAASC,IACTuD,KAAK,WACL1L,MAAOkV,EAAYD,SACnB7M,SAAU,SAACT,EAAD,OAAM3H,EAAN,EAAMA,MAAN,OACRmV,EAAe,eAAKD,EAAN,CAAmBD,SAAUjV,QAG/C,kBAACwI,EAAA,EAAD,CACEC,QAAS,WACP+M,EAAyB,aAAbD,EAA0B,QAAU,YAChDE,EAAS,KAEX/J,KAAK,UAES,aAAb6J,EAA0B,WAAa,gBAE1C,kBAAC/M,EAAA,EAAD,CACEkD,KAAK,SACL/C,SAAO,EACPF,QAAO,sBAAE,4BAAAjG,EAAA,kEAGY,UAAb+S,EAHC,iCAIUf,GAAMU,GAJhB,cAIHzS,EAJG,gBAKGlD,aAAaY,QACjB,OACAV,KAAKW,UAAUqC,IAPd,uBASgBQ,IAThB,OAUH4R,GAVG,iDAYUF,GAASO,GAZnB,eAYHzS,EAZG,iBAaGlD,aAAaY,QACjB,OACAV,KAAKW,UAAUqC,IAfd,yBAkBgBqS,KAlBhB,QAmBHxS,EAnBG,gBAqBLgT,EAAQ7S,GACR4S,GAAe,GACf/V,OAAOsS,SAAS+D,SAASC,KAAO,IAvB3B,kDAyBLH,EAAS,EAAD,IAzBH,2DA6BK,UAAbF,EAAuB,WAAa,eACrC,kBAACM,GAAA,EAAD,CAAMxV,KAAK,wB,OE3H7ByV,iBAAO,mBA9BK,WAGV,OACE,kBAAC,KAAD,KACE,kBAAC,GAAD,MACA,yBAAK9O,UAAU,yBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO+O,OAAK,EAACC,KAAK,KAChB,kBAAC5B,GAAD,OAEF,kBAAC,KAAD,CAAO4B,KAAK,aACV,kBAACC,GAAD,OAEF,kBAAC,KAAD,CAAOD,KAAK,cACV,kBAACE,EAAD,OAEF,kBAAC,KAAD,CAAOF,KAAK,aACV,kBAAC,EAAD,OAGF,kBAAC,KAAD,CAAOA,KAAK,YACV,kBAAC9B,GAAD,YAQL,MAAStC,SAASC,eAAe,W","file":"static/js/main.f6b52543.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n\n  // Pass initial state function to useState so logic is only executed once\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  name: \"\",\n  empty: true,\n  price: \"20,00\",\n  isbn: \"\",\n  amount: 1,\n  authors: [],\n};\n","export default {\n  name: \"Max Mustermann\",\n  invoiceAddress:\n    \"<p>musterdomain.de<br/>\\\n  Muster Firma GbR<br/>\\\n  Musterstraße 2<br/>\\\n  15366 Musterstadt</p>\",\n  shippingAddress:\n    \"<p>musterdomain.de • Muster Firma GbR<br/>\\\n  Musterstraße 2 • 15366 Musterstadt</p>\",\n  discount: 0,\n  ust: 7,\n};\n","export default {\n  invoiceDate: new Date().toString(),\n  shippingDate: new Date().toString(),\n  orderDate: new Date().toString(),\n  invoiceNumber: \"\",\n  porto: \"5,00\",\n  finalText: \"\",\n  articles: [],\n};\n","export default {\n  name: \"\",\n  executive: \"\",\n  logo: \"\",\n  aboveClientInvoiceAddress:\n    \"<p>Verlag GbR • Musterstraße 12 • 10405 Musterstadt</p>\",\n  footerText:\n    \"<p><b>Geschäftsführung</b> Max Mustermann<br/>\\\n  <b>Bankverbindung</b> Postbank • IBAN DE 00 0000 0000 0000 00 • BIC ABCDEFGHIJKL<br/>\\\n  <b>Steuernummer</b> 000/000/00000 | <b>USt-IdNr.</b> DE000000000</p>\",\n  invoiceText:\n    \"<p>Zahlen Sie bitte den Rechnungsbetrag bis zum <Datum> unter Angabe der Rechnungsnummer\\\nauf unten stehendes Konto.<br/>\\\nDie gelieferte Ware bleibt bis zur vollständigen Bezahlung Eigentum des Verlages.<br/>\\\nVielen Dank für Ihre Bestellung.</p>\\\n<p>Mit herzlichen Grüßen.<br/>\\\nMusterstadt, den <Datum></p>\",\n  subjectAndBelow:\n    \"<h3>Rechnung</h3>\\\n  <p><br></p>\\\n  <p>wir erlauben uns, in Rechnung zu stellen:</p>\",\n  contactInformation:\n    \"<p>Buch- und Zeitschriftenverlag GbR<br>\\\n  Max Mustermann</p>\\\n  <p>Hauptsitz<br>\\\n  Musterstraße 12<br>\\\n  10405 Musterstadt<br>\\\n  Telefon 000 / 00 00 00</p>\\\n  <p>Büro Musterstadt<br>\\\n  Musterstraße 19<br>\\\n  10409 Musterstadt<br>\\\n  Telefon 030 / 00 00 00 00</p>\\\n  <p>info@muster-email.de<br>\\\n  www.musterdomain.de</p>\\\n  <p>Steuernummer 000/000/00000<br>\\\n  Finanzamt Musterstadt</p>\",\n};\n","export default {\n  name: \"\",\n  contact: \"\",\n  percent: \"7,00\",\n  books: [],\n};\n","export default {\n  backendURL: \"https://api.billeroo.de\",\n};\n","import local from \"./local\";\nimport production from \"./production\";\n\nexport default () => {\n  if (process.env.NODE_ENV == \"production\") {\n    return production;\n  }\n  return local;\n};\n","import config from \"../../config\";\nimport Axios from \"axios\";\n\nconst { backendURL } = config();\n\nconst url = backendURL + \"/data\";\n\nexport default async function postData(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\", \"{}\"));\n\n  if (!user.token) {\n    return;\n  }\n\n  const jwt = user.token;\n\n  const result = await Axios.post(url, data, {\n    headers: {\n      Authorization: \"Bearer \" + jwt,\n    },\n  });\n\n  return result.data;\n}\n","import config from \"../../config\";\nimport Axios from \"axios\";\nconst { backendURL } = config();\n\nconst url = backendURL + \"/data\";\n\nexport default async function getData() {\n  const user = JSON.parse(localStorage.getItem(\"user\"), \"{}\");\n  if (!user || !user.token) {\n    return;\n  }\n  const jwt = user.token;\n  const result = await Axios.get(url, {\n    headers: {\n      Authorization: \"Bearer \" + jwt,\n    },\n  });\n\n  return result.data;\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport { company as companySceleton } from \"../sceletons\";\nimport postData from \"../services/backend/postData\";\nimport { useEffect } from \"react\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useCompany() {\n  const [company, setCompany] = useLocalStorage(\"companies\", companySceleton);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.company) {\n        setCompany(data.company);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const updateCompany = (company) => {\n    setCompany(company);\n    postData({ company });\n  };\n\n  return [company, updateCompany];\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport postData from \"../services/backend/postData\";\nimport { useCallback, useEffect } from \"react\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useInvoices() {\n  const [invoices, setLocalStorageInvoices] = useLocalStorage(\"invoices\", []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.invoices) {\n        setLocalStorageInvoices(data.invoices);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addInvoice = useCallback(\n    (invoice) => {\n      const _invoices = [...invoices, invoice];\n      setLocalStorageInvoices(_invoices);\n      postData({ invoices: _invoices });\n    },\n    [invoices]\n  );\n\n  const removeInvoice = useCallback(\n    (invoiceId) => {\n      const _invoices = [...invoices];\n      _invoices[invoiceId] = undefined;\n      console.log(_invoices);\n      setLocalStorageInvoices(_invoices);\n      postData({ invoices: _invoices });\n    },\n    [invoices]\n  );\n\n  const updateInvoice = useCallback(\n    (invoice) => {\n      const _invoices = [...invoices];\n      _invoices[invoice.id] = invoice;\n      setLocalStorageInvoices(_invoices);\n      postData({ invoices: _invoices });\n    },\n    [invoices]\n  );\n\n  return [\n    invoices.filter((i) => i && typeof i === \"object\"),\n    addInvoice,\n    removeInvoice,\n    updateInvoice,\n    invoices.length,\n  ];\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport { useCallback, useEffect } from \"react\";\nimport postData from \"../services/backend/postData\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useArticles() {\n  const [articles, setLocalStorageArticles] = useLocalStorage(\"articles\", []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.articles) {\n        setLocalStorageArticles(data.articles);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addArticle = useCallback(\n    (article) => {\n      const _articles = [...articles, article];\n      setLocalStorageArticles(_articles);\n      postData({ articles: _articles });\n    },\n    [articles]\n  );\n\n  const removeArticle = useCallback(\n    (articleId) => {\n      const _articles = [...articles];\n      _articles[articleId] = undefined;\n      setLocalStorageArticles(_articles);\n      postData({ articles: _articles });\n    },\n    [articles]\n  );\n\n  const updateArticle = useCallback(\n    (article) => {\n      const _articles = [...articles];\n      _articles[article.id] = article;\n      setLocalStorageArticles(_articles);\n      postData({ articles: _articles });\n    },\n    [articles]\n  );\n\n  const getArticleById = useCallback(\n    (id) => {\n      return articles[id];\n    },\n    [articles]\n  );\n  return [\n    articles.filter((a) => a && typeof a === \"object\"),\n    addArticle,\n    removeArticle,\n    updateArticle,\n    articles.length,\n    getArticleById,\n  ];\n}\n","import useLocalStorage from \"./useLocalStorage\";\nimport { useCallback, useEffect } from \"react\";\nimport postData from \"../services/backend/postData\";\nimport getData from \"../services/backend/getData\";\n\nexport default function useAuthors() {\n  const [authors, setLocalStorageAuthors] = useLocalStorage(\"authors\", []);\n  console.log(authors);\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      console.log(data);\n      if (data && data.authors) {\n        setLocalStorageAuthors(data.authors);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addAuthor = useCallback(\n    (author) => {\n      const _authors = [...authors, author];\n      setLocalStorageAuthors(_authors);\n      postData({ authors: _authors });\n    },\n    [authors]\n  );\n\n  const removeAuthor = useCallback(\n    (authorId) => {\n      const _authors = [...authors];\n      _authors[authorId] = undefined;\n      setLocalStorageAuthors(_authors);\n      postData({ authors: _authors });\n    },\n    [authors]\n  );\n\n  const updateAuthor = useCallback(\n    (author) => {\n      const _authors = [...authors];\n      _authors[author.id] = author;\n      setLocalStorageAuthors(_authors);\n      postData({ authors: _authors });\n    },\n    [authors]\n  );\n\n  const getAuthorById = useCallback(\n    (id) => {\n      return authors[id];\n    },\n    [authors]\n  );\n\n  return [\n    authors.filter((a) => a && typeof a === \"object\"),\n    addAuthor,\n    removeAuthor,\n    updateAuthor,\n    authors.length,\n    getAuthorById,\n  ];\n}\n","import { useCallback, useEffect } from \"react\";\nimport postData from \"../services/backend/postData\";\nimport useLocalStorage from \"./useLocalStorage\";\nimport getData from \"../services/backend/getData\";\nexport default function useCustomers() {\n  const [customers, setLocalStorageCustomers] = useLocalStorage(\n    \"customers\",\n    []\n  );\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getData();\n      if (data && data.customers) {\n        setLocalStorageCustomers(data.customers);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const addCustomer = useCallback(\n    (customer) => {\n      const _customers = [...customers, customer];\n      setLocalStorageCustomers(_customers);\n      postData({ customers: _customers });\n    },\n    [customers]\n  );\n\n  const removeCustomer = useCallback(\n    (customerId) => {\n      const _customers = [...customers];\n      _customers[customerId] = undefined;\n      setLocalStorageCustomers(_customers);\n      postData({ customers: _customers });\n    },\n    [customers]\n  );\n\n  const updateCustomer = useCallback(\n    (customer) => {\n      const _customers = [...customers];\n      _customers[customer.id] = customer;\n      setLocalStorageCustomers(_customers);\n      postData({ customers: _customers });\n    },\n    [customers]\n  );\n\n  const getCustomerById = useCallback(\n    (id) => {\n      return customers[id];\n    },\n    [customers]\n  );\n  return [\n    customers.filter((c) => c && typeof c === \"object\"),\n    addCustomer,\n    removeCustomer,\n    updateCustomer,\n    customers.length,\n    getCustomerById,\n  ];\n}\n","import React, { useState } from \"react\";\nimport RichTextEditor from \"react-rte\";\n\nimport \"./Editor.css\";\n\nexport default function Editor(props) {\n  const [active, setActive] = useState(false);\n  return (\n    <RichTextEditor\n      {...props}\n      onFocus={() => setActive(true)}\n      onBlur={() => {\n        if (props.onBlur && typeof props.onBlur === \"function\") {\n          props.onBlur();\n        }\n        setActive(false);\n      }}\n      toolbarConfig={{\n        display: active\n          ? [\n              \"INLINE_STYLE_BUTTONS\",\n              \"BLOCK_TYPE_BUTTONS\",\n              \"LINK_BUTTONS\",\n              \"BLOCK_TYPE_DROPDOWN\",\n              \"HISTORY_BUTTONS\",\n            ]\n          : [],\n        INLINE_STYLE_BUTTONS: [\n          { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\n          { label: \"Italic\", style: \"ITALIC\" },\n          { label: \"Underline\", style: \"UNDERLINE\" },\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n          { label: \"Normal\", style: \"unstyled\" },\n          { label: \"Heading Large\", style: \"header-one\" },\n          { label: \"Heading Medium\", style: \"header-two\" },\n          { label: \"Heading Small\", style: \"header-three\" },\n        ],\n        BLOCK_TYPE_BUTTONS: [\n          { label: \"UL\", style: \"unordered-list-item\" },\n          { label: \"OL\", style: \"ordered-list-item\" },\n        ],\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input } from \"semantic-ui-react\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"../Editor/Editor\";\n\nexport default function CustomerForm({ customer, setCustomer }) {\n  const [invoiceAddress, setInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n  );\n\n  const [shippingAddress, setShippingAddress] = useState(\n    RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n  );\n\n  const updateAddresses = (customer) => {\n    setInvoiceAddress(\n      RichTextEditor.createValueFromString(customer.invoiceAddress, \"html\")\n    );\n    setShippingAddress(\n      RichTextEditor.createValueFromString(customer.shippingAddress, \"html\")\n    );\n  };\n\n  const handleCustomerChange = (e, { name, value }) => {\n    if (name === \"ust\" || name === \"discount\") {\n      value = parseFloat(value);\n      if (isNaN(value)) return;\n    }\n    setCustomer({ ...customer, [name]: value });\n    updateAddresses(customer);\n  };\n\n  const updateRichtext = (name, value) => {\n    setCustomer({ ...customer, [name]: value.toString(\"html\") });\n    updateAddresses(customer);\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"Kundenname\"\n          value={customer.name}\n          name=\"name\"\n          onChange={handleCustomerChange}\n        />\n      </Form.Group>\n      <Form.Field\n        control={Editor}\n        label={\"Rechnungsadresse\"}\n        onChange={setInvoiceAddress}\n        value={invoiceAddress}\n        onBlur={() => {\n          updateRichtext(\"invoiceAddress\", invoiceAddress);\n        }}\n      />\n      <Form.Field\n        control={Editor}\n        label={\"Lieferadress\"}\n        onChange={setShippingAddress}\n        value={shippingAddress}\n        onBlur={() => {\n          updateRichtext(\"shippingAddress\", shippingAddress);\n        }}\n      />\n      <Form.Group>\n        <Form.Field\n          control={Input}\n          label=\"MwST\"\n          placeholder=\"7\"\n          name=\"ust\"\n          icon=\"percent\"\n          onChange={handleCustomerChange}\n          value={customer.ust}\n        />\n        <Form.Field\n          control={Input}\n          label=\"Kundenrabatt\"\n          placeholder=\"0\"\n          icon=\"percent\"\n          name=\"discount\"\n          onChange={handleCustomerChange}\n          value={customer.discount}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useCustomers } from \"../hooks\";\nimport { customer as customerSceleton } from \"../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport CustomerForm from \"./CustomerForm/CustomerForm\";\nexport default () => {\n  const [\n    customers,\n    addCustomer,\n    removeCustomer,\n    updateCustomer,\n    customersLength,\n  ] = useCustomers();\n  const [customer, setCustomer] = useState();\n\n  const saveCustomer = () => {\n    if (customer.id >= customersLength) {\n      addCustomer(customer);\n    } else {\n      updateCustomer(customer);\n    }\n    setCustomer();\n  };\n\n  return (\n    <div>\n      <Button\n        onClick={() =>\n          setCustomer({ ...customerSceleton, id: customersLength })\n        }\n        primary\n      >\n        Neuer Kunde\n      </Button>\n      {customer && (\n        <Modal onClose={() => setCustomer()} open={true}>\n          <Modal.Header>Kunde</Modal.Header>\n          <Modal.Content>\n            <CustomerForm customer={customer} setCustomer={setCustomer} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setCustomer()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={saveCustomer}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsadresse</Table.HeaderCell>\n            <Table.HeaderCell>Lieferadress</Table.HeaderCell>\n            <Table.HeaderCell>Rabatt</Table.HeaderCell>\n            <Table.HeaderCell>MwST</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {customers.map((c, i) => (\n            <Table.Row>\n              <Table.Cell>{c.name}</Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.invoiceAddress }} />\n              </Table.Cell>\n              <Table.Cell>\n                <div dangerouslySetInnerHTML={{ __html: c.shippingAddress }} />\n              </Table.Cell>\n              <Table.Cell>{c.discount}</Table.Cell>\n              <Table.Cell>{c.ust}</Table.Cell>\n              <Table.Cell>\n                <Button\n                  onClick={() => setCustomer(c)}\n                  primary\n                  icon=\"edit\"\n                ></Button>\n                <Button\n                  onClick={() => removeCustomer(c.id)}\n                  negative\n                  icon=\"trash\"\n                ></Button>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function formatDate(dateString) {\n  let date = new Date(dateString);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  return (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: `${day < 10 ? \"0\" + day : day}.&#8202;${\n          month < 10 ? \"0\" + month : month\n        }.&#8202;${date.getFullYear()}`,\n      }}\n    />\n  );\n}\n","export default function parsePrice(price) {\n  return parseFloat(price.replace(\",\", \".\"));\n}\n","export default function formatPrice(price) {\n  return `${price.toFixed(2)}`.replace(\".\", \",\");\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input } from \"semantic-ui-react\";\nimport { parsePrice, formatPrice } from \"../../services\";\n\nexport default function Author({ author, setAuthor }) {\n  const [authorPrice, setAuthorPrice] = useState(author.percent);\n\n  const handleAuthorChange = (e, { name, value }) => {\n    if (name === \"percent\") {\n      value = parsePrice(value);\n      if (isNaN(value)) {\n        setAuthorPrice(\"\");\n        return;\n      }\n      value = formatPrice(value);\n      setAuthorPrice(value);\n    }\n    setAuthor({ ...author, [name]: value });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleAuthorChange}\n          value={author.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Kontakt\"\n          placeholder=\"Tel, Email, ...\"\n          onChange={handleAuthorChange}\n          name=\"contact\"\n          value={author.contact}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Prozent\"\n          placeholder=\"Prozent\"\n          name=\"percent\"\n          icon=\"percent\"\n          onChange={(e, { value }) => setAuthorPrice(value)}\n          onBlur={(e) => {\n            handleAuthorChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={authorPrice}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Form, Input, Dropdown } from \"semantic-ui-react\";\nimport { useAuthors } from \"../hooks\";\nimport { author as authorSceleton } from \"../sceletons\";\nimport Author from \"./Author\";\nimport { Segment } from \"semantic-ui-react\";\nimport { formatPrice } from \"../services\";\n\nexport default function Article({ article, setArticle }) {\n  const [articlePrice, setArticlePrice] = useState(article.price);\n  const [authors, , , , authorsLength, getAuthorById] = useAuthors();\n  const [author, setAuthor] = useState(article.authors[0]);\n\n  const handleArticleChange = (e, { name, value }) => {\n    if (name === \"price\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setArticlePrice(\"0,00\");\n        return;\n      }\n      value = formatPrice(value);\n      setArticlePrice(value);\n    }\n    setArticle({ ...article, [name]: value });\n  };\n\n  const authorOptions = [\n    { key: undefined, value: undefined, text: \"\" },\n    { key: authorsLength, value: authorsLength, text: \"Neuer Autor\" },\n  ].concat(\n    authors.map((a) => ({\n      key: a.id,\n      value: a.id,\n      text: a.name,\n    }))\n  );\n\n  const handleAuthorChange = (e, { value }) => {\n    let author;\n    if (value === undefined) {\n      author = undefined;\n    } else if (value < authorsLength) {\n      author = getAuthorById(value);\n    } else {\n      author = { ...authorSceleton, id: authorsLength };\n    }\n    console.log(author, value);\n    setAuthor(author);\n    setArticle({ ...article, authors: author ? [author] : [] });\n  };\n\n  return (\n    <Form>\n      <Form.Group width=\"equal\">\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={handleArticleChange}\n          value={article.name}\n        />\n        <Form.Field\n          id=\"form-input-control-name\"\n          control={Input}\n          label=\"Lagerbestand\"\n          placeholder=\"Menge\"\n          type=\"number\"\n          onChange={handleArticleChange}\n          name=\"amount\"\n          value={article.amount}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"ISBN\"\n          placeholder=\"ISBN\"\n          name=\"isbn\"\n          onChange={handleArticleChange}\n          value={article.isbn}\n        />\n        <Form.Field\n          id=\"form-input-control-last-name\"\n          control={Input}\n          label=\"Preis\"\n          placeholder=\"Preis\"\n          name=\"price\"\n          icon=\"euro sign\"\n          onChange={(e, { value }) => setArticlePrice(value)}\n          onBlur={(e) => {\n            handleArticleChange(e, {\n              name: e.target.name,\n              value: e.target.value,\n            });\n          }}\n          value={articlePrice}\n        />\n      </Form.Group>\n      <Form.Field\n        label=\"Wählen Sie einen Autoren aus:\"\n        control={Dropdown}\n        search\n        selection\n        options={authorOptions}\n        value={author ? author.id : undefined}\n        onChange={handleAuthorChange}\n      />\n      {author && (\n        <Segment>\n          <Author author={author} setAuthor={setAuthor} />\n        </Segment>\n      )}\n    </Form>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport { useArticles, useInvoices } from \"../../hooks\";\nimport { article as articleSceleton } from \"../../sceletons\";\nimport { Table, Button, Modal } from \"semantic-ui-react\";\nimport Article from \"../Article\";\n\nimport \"./Articles.css\";\nimport { formatDate } from \"../../services\";\n\nexport default () => {\n  const [\n    articles,\n    ,\n    removeArticle,\n    updateArticle,\n    articlesLength,\n  ] = useArticles();\n  const [article, setArticle] = useState();\n  const [invoiceArticle, setInvoiceArticle] = useState();\n  const [invoices] = useInvoices();\n  const filteredInvoices = useMemo(() => {\n    if (!invoiceArticle) {\n      return null;\n    }\n    return invoices.reduce((list, i) => {\n      for (let aId in i.articles) {\n        const article = i.articles[aId];\n        if (article.id === invoiceArticle.id) {\n          return [\n            ...list,\n            {\n              ...i,\n              article,\n            },\n          ];\n        }\n      }\n      return list;\n    }, []);\n  }, [invoices, invoiceArticle]);\n\n  return (\n    <div className=\"articles-tab-container\">\n      <Button\n        onClick={() => setArticle({ ...articleSceleton, id: articlesLength })}\n        primary\n      >\n        Neuer Artikel\n      </Button>\n      {article && (\n        <Modal onClose={() => setArticle()} open={true}>\n          <Modal.Header>Artikel</Modal.Header>\n          <Modal.Content>\n            <Article article={article} setArticle={setArticle} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setArticle()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={() => {\n                updateArticle(article);\n                setArticle();\n              }}\n              content=\"Speichern\"\n              positive\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      {invoiceArticle && (\n        <Modal onClose={() => setInvoiceArticle()} open={true}>\n          <Modal.Header>Rechnungen</Modal.Header>\n          <Modal.Content>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n                  <Table.HeaderCell>Kunde</Table.HeaderCell>\n                  <Table.HeaderCell>Verkaufte Exemplare</Table.HeaderCell>\n                  <Table.HeaderCell>Umsatz</Table.HeaderCell>\n                  <Table.HeaderCell>Zahlungsdatum</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {filteredInvoices.map((invoice) => (\n                  <Table.Row>\n                    <Table.Cell>{invoice.invoiceNumber}</Table.Cell>\n                    <Table.Cell>{invoice.customer.name}</Table.Cell>\n                    <Table.Cell>{invoice.article.amount}</Table.Cell>\n                    <Table.Cell>{invoice.article.price}</Table.Cell>\n                    <Table.Cell>\n                      {invoice.paymentDate\n                        ? formatDate(invoice.paymentDate)\n                        : \"Ausstehend\"}\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Modal.Content>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ISBN</Table.HeaderCell>\n            <Table.HeaderCell>Menge</Table.HeaderCell>\n            <Table.HeaderCell>Preis</Table.HeaderCell>\n            <Table.HeaderCell>Autoren</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {articles.map(\n            (a, i) =>\n              a && (\n                <Table.Row>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.isbn}</Table.Cell>\n                  <Table.Cell>{a.amount}</Table.Cell>\n                  <Table.Cell>{a.price}</Table.Cell>\n                  <Table.Cell>\n                    {a.authors.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setArticle(a)}\n                      primary\n                      icon=\"edit\"\n                    ></Button>\n                    <Button\n                      onClick={() => setInvoiceArticle(a)}\n                      icon=\"list\"\n                      secondary\n                    ></Button>\n                    <Button\n                      onClick={() => removeArticle(i)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nexport default function StyledDropzone({ onDrop }) {\n  const { isDragActive, isDragAccept, isDragReject } = useDropzone({\n    accept: \"image/*\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <div className=\"container\">\n          <div\n            {...getRootProps({\n              style,\n              onDrop: (event) => event.stopPropagation(),\n            })}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </div>\n      )}\n    </Dropzone>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport DropZone from \"./DropZone\";\nimport RichTextEditor from \"react-rte\";\nimport Editor from \"./Editor/Editor\";\n\nexport default function CompanyForm({ company, setCompany, selected }) {\n  const [footerText, setFooterText] = useState(\n    RichTextEditor.createValueFromString(company.footerText, \"html\")\n  );\n  const [subjectAndBelow, setSubjectAndBelow] = useState(\n    RichTextEditor.createValueFromString(company.subjectAndBelow, \"html\")\n  );\n  const [invoiceText, setInvoiceText] = useState(\n    RichTextEditor.createValueFromString(company.invoiceText, \"html\")\n  );\n  const [contactInformation, setContactInformation] = useState(\n    RichTextEditor.createValueFromString(company.contactInformation, \"html\")\n  );\n  const [aboveClientInvoiceAddress, setAboveClientInvoiceAddress] = useState(\n    RichTextEditor.createValueFromString(\n      company.aboveClientInvoiceAddress,\n      \"html\"\n    )\n  );\n\n  const updateRichText = (name, value) => {\n    setCompany({ ...company, [name]: value.toString(\"html\") });\n  };\n\n  const updateCompany = (e, { name, value }) => {\n    setCompany({ ...company, [name]: value });\n  };\n\n  const onDropHandler = (files) => {\n    var file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setCompany({ ...company, logo: event.target.result });\n    };\n    reader.readAsDataURL(file);\n  };\n  return (\n    <Form>\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Firmename\"\n          control={Input}\n          name=\"name\"\n          onChange={updateCompany}\n          value={company.name}\n        />\n      )}\n      {selected === \"logo\" && (\n        <Segment>\n          <h4>Logo</h4>\n          {company.logo !== \"\" ? (\n            <div>\n              <img src={company.logo} alt=\"company logo\" />\n              <Button\n                negative\n                onClick={() => setCompany({ ...company, logo: \"\" })}\n              >\n                Löschen\n              </Button>\n            </div>\n          ) : (\n            <DropZone onDrop={onDropHandler} />\n          )}\n        </Segment>\n      )}\n      {selected === \"aboveClientInvoiceAddress\" && (\n        <Form.Field\n          control={Editor}\n          value={aboveClientInvoiceAddress}\n          onChange={setAboveClientInvoiceAddress}\n          onBlur={() => {\n            updateRichText(\n              \"aboveClientInvoiceAddress\",\n              aboveClientInvoiceAddress\n            );\n          }}\n          label=\"Absender\"\n          name=\"aboveClientInvoiceAddress\"\n        />\n      )}\n      {selected === \"contactInformation\" && (\n        <Form.Field\n          control={Editor}\n          value={contactInformation}\n          onChange={setContactInformation}\n          onBlur={() => {\n            updateRichText(\"contactInformation\", contactInformation);\n          }}\n          label=\"Kontakt Informationen\"\n          name=\"contactInformation\"\n        />\n      )}\n      {selected === \"subjectAndBelow\" && (\n        <Form.Field\n          control={Editor}\n          value={subjectAndBelow}\n          onChange={setSubjectAndBelow}\n          onBlur={() => {\n            updateRichText(\"subjectAndBelow\", subjectAndBelow);\n          }}\n          label=\"Betreff und Begrüßung\"\n          name=\"subjectAndBelow\"\n        />\n      )}\n      {selected === \"invoiceText\" && (\n        <Form.Field\n          control={Editor}\n          value={invoiceText}\n          onChange={setInvoiceText}\n          onBlur={() => {\n            updateRichText(\"invoiceText\", invoiceText);\n          }}\n          label=\"Rechnungstext\"\n          name=\"invoiceText\"\n        />\n      )}\n      {selected === \"footerText\" && (\n        <Form.Field\n          control={Editor}\n          value={footerText}\n          onChange={(value) => {\n            setFooterText(value);\n          }}\n          onBlur={() => {\n            updateRichText(\"footerText\", footerText);\n          }}\n          label=\"Fußzeile\"\n          name=\"footerText\"\n        />\n      )}\n      {selected === \"advancedSettings\" && (\n        <Form.Field\n          label=\"Farbe\"\n          control={Input}\n          placeholder=\"z.B. #ffffff oder rgb(120,0,0)\"\n          name=\"companyColor\"\n          onChange={updateCompany}\n          value={company.color}\n        />\n      )}\n    </Form>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport { useCompany, useCustomers, useAuthors, useArticles } from \"../../hooks\";\nimport {\n  Container,\n  Form,\n  Input,\n  Card,\n  Modal,\n  Button,\n  Checkbox,\n  Dropdown,\n  Segment,\n} from \"semantic-ui-react\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport {\n  article as articleSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./InvoiceForm.css\";\nimport Article from \"../Article\";\nimport CustomerForm from \"../CustomerForm/CustomerForm\";\nimport CompanyForm from \"../CompanyForm\";\nimport { formatPrice } from \"../../services\";\n\nexport default ({\n  invoice,\n  setInvoice,\n  formSelected = [],\n  wrapperClass,\n  setFormSelected,\n}) => {\n  const [customers, , , , customersLength, getCustomerById] = useCustomers();\n  const [company, setCompany] = useCompany();\n  const [customer, setCustomer] = useState(\n    getCustomerById(invoice.customer.id) || invoice.customer\n  );\n  const [\n    articles,\n    addToArticles,\n    ,\n    ,\n    articlesLength,\n    getArticleById,\n  ] = useArticles();\n  const [selectedArticles, setSelectedArticles] = useState(invoice.articles);\n  const [article, setArticle] = useState({\n    ...articleSceleton,\n    id: articlesLength,\n  });\n  const [toBePayed, setToBePayed] = useState(1);\n  const [toBeSend, setToBeSend] = useState(1);\n  const [newArticle, setNewArticle] = useState(undefined);\n  const [porto, setPorto] = useState(invoice.porto);\n  const [, , , updateAuthor] = useAuthors();\n\n  const updateInvoice = (e, { name, value, checked }) => {\n    if (name === \"porto\") {\n      value = parseFloat(value.replace(\",\", \".\"));\n      if (isNaN(value)) {\n        setPorto(\"\");\n        return;\n      }\n      value = formatPrice(value);\n      setPorto(value);\n    }\n    if (name === \"payed\") {\n      value = checked;\n    }\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  const toggleNewArticle = () => setNewArticle(!newArticle);\n\n  const addNewArticle = () => {\n    addToArticles(article);\n    setArticle({\n      ...articleSceleton,\n      id: articlesLength + 1,\n    });\n    toggleNewArticle();\n    if (article.authors.length > 0) {\n      updateAuthor(article.authors[0]);\n    }\n  };\n\n  const updateInvoiceDate = (value, name) => {\n    setInvoice({ ...invoice, [name]: value.toString() });\n  };\n\n  const customerOptions = useMemo(() => {\n    let list = [\n      {\n        key: customersLength,\n        value: customersLength,\n        text: `Neuer Kunde`,\n      },\n    ];\n    return list.concat(\n      customers.map((c) => ({\n        key: c.id,\n        text: c.name,\n        value: c.id,\n      }))\n    );\n  }, [customers, customer]);\n\n  const articlesOptions = useMemo(() => {\n    const list = [];\n    return list.concat(\n      articles.map((a) => {\n        let text = a.name.slice(0, 7);\n        if (text !== a.name) {\n          text += \"...\";\n        }\n        return {\n          key: a.id,\n          value: a.id,\n          text,\n        };\n      })\n    );\n  }, [articles]);\n\n  const handleCustomerChange = (e, { value }) => {\n    let customer;\n    if (value < customersLength) customer = getCustomerById(value);\n    else customer = { ...customerSceleton, id: customersLength };\n    setCustomer(customer);\n    console.log(customer);\n    setInvoice({\n      ...invoice,\n      customer,\n    });\n  };\n\n  const handleArticleChange = (id, name, value) => {\n    let _selectedArticles;\n    if (id >= selectedArticles.length) {\n      if (value >= articlesLength) {\n        return;\n      }\n      _selectedArticles = [\n        ...selectedArticles,\n        { toBeSend, toBePayed, articleId: value },\n      ];\n      setToBeSend(1);\n      setToBePayed(1);\n    } else {\n      _selectedArticles = [...selectedArticles];\n      _selectedArticles[id][name] = value;\n    }\n    setSelectedArticles(_selectedArticles);\n    setInvoice({\n      ...invoice,\n      articles: _selectedArticles.map((a) => ({\n        ...a,\n        ...getArticleById(a.articleId),\n      })),\n    });\n  };\n\n  const removeArticle = (id) => {\n    const _selectedArticles = selectedArticles.filter((a, i) => i !== id);\n    setSelectedArticles(_selectedArticles);\n    setInvoice({\n      ...invoice,\n      articles: _selectedArticles.map((a) => ({\n        ...getArticleById(a.articleId),\n        ...a,\n      })),\n    });\n  };\n\n  return (\n    <div className={wrapperClass}>\n      <div className=\"invoice-form-buttons\">\n        <Button onClick={toggleNewArticle} primary>\n          Neuen Artikel Anlegen\n        </Button>\n      </div>\n      <div className={\"invoice-form \"}>\n        {formSelected[0] === \"customer\" && (\n          <Modal open onClose={() => setFormSelected([])} closeIcon>\n            <div className=\"invoice-form-wrap\">\n              <Form>\n                <Form.Field\n                  label=\"Wählen Sie einen Kunden aus:\"\n                  control={Dropdown}\n                  search\n                  selection\n                  options={customerOptions}\n                  value={customer.id}\n                  onChange={handleCustomerChange}\n                />\n              </Form>\n              <Segment>\n                <CustomerForm\n                  customer={customer}\n                  setCustomer={(customer) => {\n                    setCustomer(customer);\n                    setInvoice({\n                      ...invoice,\n                      customer,\n                    });\n                  }}\n                />\n              </Segment>\n            </div>\n          </Modal>\n        )}\n        <Container>\n          <Card fluid>\n            <Card.Content>\n              <div className=\"invoice-form-wrap\">\n                <div>\n                  <Form>\n                    {selectedArticles.length > 0 && (\n                      <div>\n                        <h3>Artikel in der Rechnung</h3>\n                        {selectedArticles.map((a, i) => (\n                          <div>\n                            <Form.Group widths=\"equal\">\n                              <Form.Input\n                                fluid\n                                name=\"toBeSend\"\n                                type=\"number\"\n                                label=\"Senden\"\n                                value={a.toBeSend}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                              <Form.Input\n                                fluid\n                                name=\"toBePayed\"\n                                type=\"number\"\n                                label=\"Bezahlen\"\n                                value={a.toBePayed}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n\n                              <Form.Field\n                                control={Dropdown}\n                                fluid\n                                label=\"Artikel\"\n                                name=\"articleId\"\n                                search\n                                selection\n                                options={articlesOptions}\n                                value={a.articleId}\n                                onChange={(e, { value, name }) =>\n                                  handleArticleChange(i, name, value)\n                                }\n                              />\n                              <Form.Field>\n                                <label>&nbsp;</label>\n                                <Button\n                                  icon=\"trash\"\n                                  negative\n                                  onClick={() => removeArticle(i)}\n                                />\n                              </Form.Field>\n                            </Form.Group>\n                          </div>\n                        ))}\n                        <hr></hr>\n                      </div>\n                    )}\n                    <h3>Artikel hinzufügen</h3>\n\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        fluid\n                        name=\"amount\"\n                        type=\"number\"\n                        label=\"Zu Senden\"\n                        value={toBeSend}\n                        onChange={(e, { value }) => setToBeSend(value)}\n                      />\n                      <Form.Input\n                        fluid\n                        name=\"amountPayed\"\n                        type=\"number\"\n                        label=\"Zu Bezahlen\"\n                        value={toBePayed}\n                        onChange={(e, { value }) => setToBePayed(value)}\n                      />\n                      <Form.Field\n                        control={Dropdown}\n                        fluid\n                        label=\"Artikel\"\n                        name=\"articleId\"\n                        search\n                        selection\n                        options={articlesOptions}\n                        value={article.id}\n                        onChange={(e, { value }) =>\n                          handleArticleChange(\n                            selectedArticles.length,\n                            \"articleId\",\n                            value\n                          )\n                        }\n                      />\n                    </Form.Group>\n                  </Form>\n                </div>\n                <Modal open={newArticle} onClose={toggleNewArticle} closeIcon>\n                  <Modal.Header>Neuer Artikel</Modal.Header>\n                  <Modal.Content>\n                    <Article article={article} setArticle={setArticle} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      onClick={toggleNewArticle}\n                      content=\"Abbrechen\"\n                      negative\n                      icon=\"close\"\n                      labelPosition=\"right\"\n                    ></Button>\n                    <Button\n                      onClick={addNewArticle}\n                      content=\"Anlegen\"\n                      positive\n                      icon=\"check\"\n                      labelPosition=\"right\"\n                    ></Button>\n                  </Modal.Actions>\n                </Modal>\n              </div>\n            </Card.Content>\n          </Card>\n          {formSelected[0] === \"general\" && (\n            <Modal open onClose={() => setFormSelected([])} closeIcon>\n              <div className=\"invoice-form-wrap\">\n                <Form>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"invoiceDate\" && (\n                      <Form.Field\n                        label=\"Rechnungsdatum\"\n                        name=\"invoiceDate\"\n                        selected={new Date(invoice.invoiceDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"invoiceDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"orderDate\" && (\n                      <Form.Field\n                        label=\"Bestelldatum\"\n                        name=\"orderDate\"\n                        selected={new Date(invoice.orderDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"orderDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                    {formSelected[1] === \"shippingDate\" && (\n                      <Form.Field\n                        label=\"Versanddatum\"\n                        name=\"shippingDate\"\n                        selected={new Date(invoice.shippingDate)}\n                        onChange={(v) => updateInvoiceDate(v, \"shippingDate\")}\n                        control={DatePicker}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    )}\n                  </Form.Group>\n                  <Form.Group fluid widths=\"equal\">\n                    {formSelected[1] === \"porto\" && (\n                      <Form.Field\n                        label=\"Porto\"\n                        value={porto}\n                        name=\"porto\"\n                        onChange={(e, { value }) => setPorto(value)}\n                        control={Input}\n                        onBlur={(e) =>\n                          updateInvoice(e, {\n                            name: e.target.name,\n                            value: e.target.value,\n                          })\n                        }\n                        icon=\"euro\"\n                      />\n                    )}\n                    {formSelected[1] === \"invoiceNumber\" && (\n                      <Form.Field\n                        label=\"Rechnungsnummer\"\n                        name=\"invoiceNumber\"\n                        value={invoice.invoiceNumber}\n                        onChange={updateInvoice}\n                        control={Input}\n                      />\n                    )}\n                  </Form.Group>\n\n                  {formSelected[1] === \"payed\" && (\n                    <div>\n                      <Form.Field>\n                        <label>Bezahlt</label>\n                        <Checkbox\n                          onChange={(e, { name, checked }) => {\n                            if (checked) {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: new Date(),\n                              });\n                            } else {\n                              setInvoice({\n                                ...invoice,\n                                [name]: checked,\n                                paymentDate: undefined,\n                              });\n                            }\n                          }}\n                          name=\"payed\"\n                          checked={invoice.payed}\n                          toggle\n                        />\n                      </Form.Field>\n                      {invoice.payed && (\n                        <Form.Field\n                          label=\"Zahlungseingangsdatum\"\n                          name=\"paymentDate\"\n                          selected={new Date(invoice.paymentDate)}\n                          onChange={(v) => updateInvoiceDate(v, \"paymentDate\")}\n                          control={DatePicker}\n                          dateFormat=\"dd/MM/yyyy\"\n                        />\n                      )}\n                    </div>\n                  )}\n                </Form>\n                <CompanyForm\n                  company={company}\n                  setCompany={(company) => {\n                    setCompany(company);\n                    setInvoice({\n                      ...invoice,\n                      company,\n                    });\n                  }}\n                  selected={formSelected[1]}\n                />\n              </div>\n            </Modal>\n          )}\n        </Container>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { Button } from \"semantic-ui-react\";\n\nconst PrintButton = ({ id, label, fileName }) => (\n  <Button\n    primary\n    onClick={() => {\n      const input = document.getElementById(id);\n\n      html2canvas(input, { scale: 3 }).then((canvas) => {\n        const imgData = canvas.toDataURL(\"image/jpeg\", 0.5);\n        let pdf = new jsPDF();\n        pdf.addImage(imgData, \"JPEG\", 0, 0, 210, 297);\n        pdf.save(`${fileName}.pdf`);\n      });\n    }}\n    icon=\"download\"\n    labelPosition=\"right\"\n    content=\"Download\"\n  ></Button>\n);\n\nexport default PrintButton;\n","import React from \"react\";\n\nconst Page = ({ children, singleMode, id }) => {\n  return (\n    <div\n      id={id}\n      className=\"bg-white shadow-1 center\"\n      style={{ width: \"210mm\", height: singleMode ? \"297mm\" : \"\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\n\nexport default function SinglePageOverlay({ onClick, wrapperClass, children }) {\n  return (\n    <div\n      className={`${wrapperClass ? wrapperClass : \"\"} invoice-overlay-wrapper`}\n    >\n      {children}\n      <div className=\"invoice-overlay\" onClick={onClick} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Page from \"../Page\";\nimport \"./SinglePage.css\";\nimport { formatDate, formatPrice, parsePrice } from \"../../services\";\nimport { Button } from \"semantic-ui-react\";\nimport SinglePageOverlay from \"./SinglePageOverlay\";\n\nconst SinglePage = ({\n  id,\n  invoice: {\n    orderDate,\n    invoiceDate,\n    shippingDate,\n    invoiceNumber,\n    porto,\n    customer,\n    articles = [],\n    company,\n  },\n  setFormSelected,\n}) => {\n  const articles_net_price = articles\n    .map(({ price, toBePayed }) => {\n      const totalPrice = parsePrice(price) * toBePayed;\n      const totalPriceWithDiscount =\n        totalPrice - totalPrice * (customer.discount / 100);\n      const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n      return net;\n    })\n    .reduce((total, x) => parseFloat(x) + total, 0);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page singleMode={true} id={id}>\n      <div\n        className=\"invoice-folding-line\"\n        style={\n          company.companyColor ? { borderColor: company.companyColor } : {}\n        }\n      />\n      <div className=\"invoice-page-pdf\">\n        <div className=\"invoice-page-top\">\n          <SinglePageOverlay\n            onClick={() => setFormSelected([\"general\", \"logo\"])}\n          >\n            <div className=\"invoice-page-image-wrapper\">\n              <img\n                className=\"invoice-header-company-logo\"\n                src={company.logo}\n                alt=\"company logo\"\n              />\n            </div>\n          </SinglePageOverlay>\n          <div className=\"invoice-header\">\n            <div className=\"invoice-header-customer-address\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-header-customer-company\"\n                onClick={() =>\n                  setFormSelected([\"general\", \"aboveClientInvoiceAddress\"])\n                }\n              >\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: company.aboveClientInvoiceAddress,\n                  }}\n                />\n              </SinglePageOverlay>\n              {customer ? (\n                <SinglePageOverlay\n                  wrapperClass=\"invoice-header-customer-info\"\n                  onClick={() => setFormSelected([\"customer\"])}\n                >\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: customer.invoiceAddress,\n                    }}\n                  />\n                </SinglePageOverlay>\n              ) : (\n                <Button>Kunde hinzufügen</Button>\n              )}\n            </div>\n            <SinglePageOverlay\n              wrapperClass=\"invoice-header-company-info\"\n              onClick={() => setFormSelected([\"general\", \"contactInformation\"])}\n            >\n              <div\n                dangerouslySetInnerHTML={{ __html: company.contactInformation }}\n              ></div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <div className=\"invoice-body\">\n          <div className=\"invoice-body-top\">\n            <div className=\"invoice-subject\">\n              <SinglePageOverlay\n                wrapperClass=\"invoice-subject-and-below\"\n                onClick={() => setFormSelected([\"general\", \"subjectAndBelow\"])}\n              >\n                <div\n                  dangerouslySetInnerHTML={{ __html: company.subjectAndBelow }}\n                />\n              </SinglePageOverlay>\n              <div className=\"invoice-body-subject-key-values\">\n                <div className=\"invoice-body-subject-keys\">\n                  <div className=\"invoice-body-order-date\">\n                    <p>\n                      <b>Bestelldatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-date\">\n                    <p>\n                      <b>Versanddatum:</b>\n                    </p>\n                  </div>\n                  <div className=\"invoice-body-send-to\">\n                    <p>\n                      <b>Versand an:</b>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"invoice-body-subject-values\">\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"orderDate\"])}\n                    wrapperClass=\"invoice-body-order-date\"\n                  >\n                    <p>\n                      <b>{formatDate(orderDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"general\", \"shippingDate\"])}\n                    wrapperClass=\"invoice-body-send-date\"\n                  >\n                    <p>\n                      <b>{formatDate(shippingDate)}</b>\n                    </p>\n                  </SinglePageOverlay>\n                  <SinglePageOverlay\n                    onClick={() => setFormSelected([\"customer\"])}\n                  >\n                    <div\n                      className=\"invoice-body-send-to\"\n                      dangerouslySetInnerHTML={{\n                        __html: customer.shippingAddress,\n                      }}\n                    ></div>\n                  </SinglePageOverlay>\n                </div>\n              </div>\n            </div>\n            <div className=\"invoice-body-invoice-date\">\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceDate\"])}\n              >\n                <div className=\"invoice-body-top-right\">\n                  <p>\n                    Rechnungsdatum: <b>{formatDate(invoiceDate)}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"invoiceNumber\"])}\n              >\n                <div className=\"invoice-body-invoice-nr\">\n                  <p>\n                    Rechnungsnummer: <b>{invoiceNumber}</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <div className=\"invoice-body-invoice-hint\">\n                <p>(Bitte bei Zahlung angeben)</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"invoice-body-bottom\">\n            <div className=\"invoice-body-article-wrapper\">\n              {articles.map(({ toBePayed, toBeSend, price, name, isbn }) => {\n                const multiple = parseInt(toBePayed) > 1;\n                const totalPrice = parsePrice(price) * toBePayed;\n                const totalPriceWithDiscount =\n                  totalPrice - totalPrice * (customer.discount / 100);\n                const net = totalPriceWithDiscount / (1 + customer.ust / 100);\n                return (\n                  <div className=\"invoice-body-article\">\n                    <div className=\"invoice-body-article-left\">\n                      <div className=\"invoice-body-article-description\">\n                        <div>\n                          <b>\n                            {toBePayed !== toBeSend && toBeSend + \"/\"}\n                            {toBePayed} Exemplar\n                            {multiple && \"e\"}\n                          </b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          <b>{name && `„${name}“,`}</b>\n                        </div>\n                        <div className=\"invoice-body-article-title\">\n                          {isbn && `${isbn},`}\n                        </div>\n                      </div>\n                      <div className=\"invoice-body-artivle-price-calc\">{`Preis ${\n                        multiple ? \"je\" : \"\"\n                      } ${price} €${\n                        multiple ? ` = ${formatPrice(totalPrice)} €` : \"\"\n                      }${\n                        customer.discount > 0\n                          ? `, abzüglich ${\n                              customer.discount\n                            } % Rabatt = ${formatPrice(\n                              totalPriceWithDiscount\n                            )} €`\n                          : \"\"\n                      } (beinhaltet ${customer.ust} % MwST = ${formatPrice(\n                        totalPriceWithDiscount - net\n                      )} €)`}</div>\n                    </div>\n                    <div className=\"invoice-body-article-price\">\n                      <b>{articles.length > 1 && `${formatPrice(net)} €`}</b>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"invoice-body-price-calculation\">\n              <div className=\"invoice-body-price-calculation-label-and-number\">\n                <p>Netto</p>\n                <p>\n                  <b>{formatPrice(articles_net_price)} €</b>\n                </p>\n              </div>\n              <SinglePageOverlay\n                onClick={() => setFormSelected([\"general\", \"porto\"])}\n              >\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>Versandkosten</p>\n                  <p>\n                    <b>{porto.replace(\".\", \",\")} €</b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n              <SinglePageOverlay onClick={() => setFormSelected([\"customer\"])}>\n                <div className=\"invoice-body-price-calculation-label-and-number\">\n                  <p>{`+${customer.ust}% Mehrwertsteuer`}</p>\n                  <p>\n                    <b>\n                      {formatPrice(\n                        ((articles_net_price + parseFloat(porto)) *\n                          parseFloat(customer.ust)) /\n                          100\n                      )}{\" \"}\n                      €\n                    </b>\n                  </p>\n                </div>\n              </SinglePageOverlay>\n            </div>\n            <div className=\"invoice-body-price\">\n              <p>Rechnungsbetrag</p>\n              <p>\n                <b>\n                  {formatPrice(\n                    (articles_net_price + parseFloat(porto)) *\n                      (1 + parseFloat(customer.ust) / 100)\n                  )}{\" \"}\n                  €\n                </b>\n              </p>\n            </div>\n            <SinglePageOverlay\n              onClick={() => setFormSelected([\"general\", \"invoiceText\"])}\n              wrapperClass=\"invoice-body-final-text\"\n            >\n              <div>\n                <p\n                  dangerouslySetInnerHTML={{ __html: company.invoiceText }}\n                ></p>\n              </div>\n            </SinglePageOverlay>\n          </div>\n        </div>\n        <SinglePageOverlay\n          onClick={() => setFormSelected([\"general\", \"footerText\"])}\n        >\n          <div\n            className=\"invoice-footer\"\n            style={\n              company.companyColor ? { borderColor: company.companyColor } : {}\n            }\n            dangerouslySetInnerHTML={{ __html: company.footerText }}\n          ></div>\n        </SinglePageOverlay>\n      </div>\n    </Page>\n  );\n};\n\nexport default SinglePage;\n","import React, { useState } from \"react\";\n\nimport InvoiceForm from \"../InvoiceForm\";\nimport PrintButton from \"../PrintButton\";\nimport SinglePage from \"../SinglePage/SinglePage\";\nimport { Button, Segment, Icon, Message } from \"semantic-ui-react\";\n\nimport \"./Invoice.css\";\nimport { useCustomers } from \"../../hooks\";\nimport { calculateTotalPrice } from \"../../services\";\n\nexport default ({\n  edit,\n  invoice,\n  setInvoice,\n  invoices,\n  updateInvoice,\n  onSave,\n}) => {\n  if (!invoice || !invoices) {\n    return null;\n  }\n  const [active, setActive] = useState(edit);\n  const [formSelected, setFormSelected] = useState([]);\n  const [, , , updateCustomer] = useCustomers();\n\n  const saveInvoice = () => {\n    invoice[\"totalPrice\"] = calculateTotalPrice(invoice);\n    updateInvoice(invoice);\n    setInvoice();\n    console.log(invoice.customer);\n    updateCustomer(invoice.customer);\n    if (typeof onSave === \"function\") {\n      onSave();\n    }\n  };\n\n  const newInvoice = invoice.id === invoices.length;\n\n  return (\n    <div>\n      <div className=\"invoice-page-header\">\n        <Message\n          info\n          header=\"Neue Rechnung erstellen\"\n          content=\"Klicken Sie auf den Bereich, den Sie anpassen wollen. Rechts können Sie Artikel zur Rechnung hinzufügen oder neue erstellen.\"\n          icon=\"bell\"\n        />\n      </div>\n      <div className=\"invoice-page\">\n        <div className=\"invoice-page-wrapper\">\n          {active ? (\n            <div className=\"invoice-page-button-container\">\n              <div>\n                <PrintButton\n                  id={\"singlePage\"}\n                  label={\"Rechnung Herunterladen\"}\n                  fileName={invoice.invoiceNumber}\n                />\n              </div>\n              <div>\n                <Button\n                  onClick={() => setInvoice()}\n                  content=\"Abbrechen\"\n                  negative\n                  icon=\"close\"\n                  labelPosition=\"right\"\n                ></Button>\n                {invoice.customer && (\n                  <Button\n                    onClick={saveInvoice}\n                    content={newInvoice ? \"Anlegen\" : \"Speichern\"}\n                    positive\n                    icon=\"check\"\n                    labelPosition=\"right\"\n                  ></Button>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"invoice-button-wrapper\">\n              <Button onClick={() => setActive(true)} primary>\n                Neue Rechnung erstellen\n              </Button>\n            </div>\n          )}\n          <SinglePage\n            id={\"singlePage\"}\n            invoice={invoice}\n            setInvoice={setInvoice}\n            setFormSelected={setFormSelected}\n          />\n        </div>\n        {active && (\n          <InvoiceForm\n            wrapperClass=\"invoice-form-wrapper\"\n            invoice={invoice}\n            setInvoice={setInvoice}\n            formSelected={formSelected}\n            setFormSelected={setFormSelected}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import parsePrice from \"./parsePrice\";\n\nexport default (invoice) => {\n  return (\n    invoice.articles\n      .map(({ price, toBePayed }) => {\n        const totalPrice = parsePrice(price) * toBePayed;\n        return totalPrice - totalPrice * (invoice.customer.discount / 100);\n      })\n      .reduce((total, x) => x + total, 0) +\n    parsePrice(invoice.porto) +\n    (parsePrice(invoice.porto) * invoice.customer.ust) / 100\n  );\n};\n","import React, { useState } from \"react\";\nimport { useCompany, useInvoices, useCustomers } from \"../hooks\";\n\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport Invoice from \"./Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../sceletons\";\nimport { formatDate, formatPrice } from \"../services\";\n\nexport default () => {\n  const [\n    invoices,\n    ,\n    removeInvoice,\n    updateInvoice,\n    invoicesLength,\n  ] = useInvoices();\n  const [invoiceSelected, setInvoiceSelected] = useState();\n  const [company] = useCompany();\n  const [customers, , , , customersLength] = useCustomers();\n\n  if (invoiceSelected) {\n    return (\n      <Invoice\n        edit\n        invoice={invoiceSelected}\n        setInvoice={setInvoiceSelected}\n        updateInvoice={updateInvoice}\n        invoices={invoices}\n      />\n    );\n  }\n\n  return (\n    <div className=\"invoice-tab-container\">\n      <Button\n        onClick={() =>\n          setInvoiceSelected({\n            ...invoiceSceleton,\n            id: invoicesLength,\n            customer: {\n              ...customerSceleton,\n              id: customersLength,\n            },\n            company,\n          })\n        }\n        primary\n      >\n        Neue Rechnung\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rechnungsnummer</Table.HeaderCell>\n            <Table.HeaderCell>Rechnungsdatum</Table.HeaderCell>\n            <Table.HeaderCell>Kunde</Table.HeaderCell>\n            <Table.HeaderCell>Artikel</Table.HeaderCell>\n            <Table.HeaderCell>Gesamtpreis</Table.HeaderCell>\n            <Table.HeaderCell>Zahlungseingang</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {invoices.map(\n            (i) =>\n              i &&\n              typeof i === \"object\" && (\n                <Table.Row key={i.id}>\n                  <Table.Cell>{i.invoiceNumber}</Table.Cell>\n                  <Table.Cell>{formatDate(i.invoiceDate)}</Table.Cell>\n                  <Table.Cell>{i.customer.name}</Table.Cell>\n                  <Table.Cell>\n                    {i.articles.map((a) => (\n                      <p>{a.name}</p>\n                    ))}\n                  </Table.Cell>\n                  <Table.Cell>{formatPrice(i.totalPrice)} €</Table.Cell>\n                  <Table.Cell>\n                    {i.paymentDate ? formatDate(i.paymentDate) : \"Ausstehend\"}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      primary\n                      icon=\"edit\"\n                      onClick={() => setInvoiceSelected(i)}\n                    ></Button>\n                    <Button\n                      negative\n                      icon=\"trash\"\n                      onClick={() => removeInvoice(i.id)}\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, Table, Modal } from \"semantic-ui-react\";\nimport { useAuthors } from \"../../hooks\";\nimport { author as authorSceleton } from \"../../sceletons\";\nimport Author from \"../Author\";\nimport { formatPrice } from \"../../services\";\n\nexport default function Authors() {\n  const [authors, , deleteAuthor, updateAuthor, authorsLength] = useAuthors();\n  const [author, setAuthor] = useState();\n\n  return (\n    <div>\n      <Button\n        onClick={() => setAuthor({ ...authorSceleton, id: authorsLength })}\n        primary\n      >\n        Neuer Autor\n      </Button>\n      {author && (\n        <Modal onClose={() => setAuthor()} open={true}>\n          <Modal.Header>Author</Modal.Header>\n          <Modal.Content>\n            <Author author={author} setAuthor={setAuthor} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => setAuthor()}\n              content=\"Abbrechen\"\n              negative\n              icon=\"close\"\n              labelPosition=\"right\"\n            ></Button>\n            <Button\n              onClick={() => {\n                updateAuthor(author);\n                setAuthor();\n              }}\n              content=\"Speichern\"\n              primary\n              icon=\"check\"\n              labelPosition=\"right\"\n            ></Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Kontakt</Table.HeaderCell>\n            <Table.HeaderCell>Prozent</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {authors.map(\n            (a, i) =>\n              a && (\n                <Table.Row key={a.id}>\n                  <Table.Cell>{a.id}</Table.Cell>\n                  <Table.Cell>{a.name}</Table.Cell>\n                  <Table.Cell>{a.contact}</Table.Cell>\n                  <Table.Cell>{a.percent} %</Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      onClick={() => setAuthor(a)}\n                      icon=\"edit\"\n                      primary\n                    ></Button>\n                    <Button\n                      onClick={() => deleteAuthor(a.id)}\n                      negative\n                      icon=\"trash\"\n                    ></Button>\n                  </Table.Cell>\n                </Table.Row>\n              )\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useInvoices, useCompany, useCustomers } from \"../../hooks\";\nimport Invoice from \"../../components/Invoice\";\nimport {\n  invoice as invoiceSceleton,\n  customer as customerSceleton,\n} from \"../../sceletons\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home() {\n  const [company] = useCompany();\n  const [customers] = useCustomers();\n  const history = useHistory();\n\n  const [invoices, , , updateInvoice, invoicesLength] = useInvoices();\n  const [invoice, setInvoice] = useState({\n    ...invoiceSceleton,\n    id: invoicesLength,\n    customer: {\n      ...customerSceleton,\n      id: customers.length,\n    },\n    company,\n  });\n\n  return (\n    <Invoice\n      invoice={invoice}\n      setInvoice={setInvoice}\n      updateInvoice={updateInvoice}\n      invoices={invoices}\n      edit={true}\n      onSave={() => {\n        history.push(\"/invoices\");\n      }}\n    />\n  );\n}\n","import Axios from \"axios\";\nimport config from \"../../config\";\nconst { backendURL } = config();\n\nconst url = backendURL + \"/login\";\n\nexport default async function login(data) {\n  try {\n    const result = await Axios.post(url, data);\n    if (result.data && result.status !== 200) {\n      throw result.data.message;\n    }\n    return result.data;\n  } catch (err) {\n    throw \"Die Email oder das Passwort ist leider falsch.\";\n  }\n}\n","import Axios from \"axios\";\nimport config from \"../../config\";\n\nconst { backendURL } = config();\n\nconst url = backendURL + \"/register\";\n\nexport default async function register(data) {\n  try {\n    const result = await Axios.post(url, data);\n    return result.data;\n  } catch (err) {\n    const {\n      response: {\n        data: { message },\n      },\n    } = err;\n    throw message;\n  }\n}\n","export default async function dataToLocalStorage(data) {\n  const { customers, articles, invoices, authors, company } = data;\n\n  if (customers) {\n    await localStorage.setItem(\"customers\", JSON.stringify(customers));\n  }\n  if (articles) {\n    await localStorage.setItem(\"articles\", JSON.stringify(articles));\n  }\n  if (invoices) {\n    await localStorage.setItem(\"invoices\", JSON.stringify(invoices));\n  }\n  if (authors) {\n    await localStorage.setItem(\"authors\", JSON.stringify(authors));\n  }\n  if (company) {\n    await localStorage.setItem(\"authors\", JSON.stringify(company));\n  }\n}\n","export default async function dataFromLocalStorage() {\n  return {\n    invoices: JSON.parse(localStorage.getItem(\"invoices\", [])),\n    customers: JSON.parse(localStorage.getItem(\"customers\", [])),\n    authors: JSON.parse(localStorage.getItem(\"authors\", [])),\n    articles: JSON.parse(localStorage.getItem(\"articles\", [])),\n    company: JSON.parse(localStorage.getItem(\"company\", {})),\n  };\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, Form, Input, Icon, Message } from \"semantic-ui-react\";\nimport { useInvoices, useUser } from \"../../hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./TopNavigationBar.css\";\nimport login from \"../../services/backend/login\";\nimport register from \"../../services/backend/register\";\nimport getData from \"../../services/backend/getData\";\nimport dataToLocalStorage from \"../../services/localStorage/dataToLocalStorage\";\nimport dataFromLocalStorage from \"../../services/localStorage/dataFromLocalStorage\";\nimport postData from \"../../services/backend/postData\";\n\nexport default function TopNavigationBar() {\n  const [invoices] = useInvoices();\n  const history = useHistory();\n  const [loginValues, setLoginValues] = useState({ email: \"\", password: \"\" });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [user, setUser] = useUser();\n  const [modalUse, setModalUse] = useState(\"register\");\n  const [error, setError] = useState(\"\");\n\n  return (\n    <div className=\"oi-top-navigation-bar\">\n      <div>\n        <h2 className=\"oi-top-navigation-bar-heading\">Billeroo</h2>\n      </div>\n      <div className=\"billeroo-top-navigation-bar-buttons\">\n        {invoices.length > 0 && (\n          <div>\n            <Button.Group>\n              <Button\n                content=\"Rechnungen\"\n                onClick={() => history.push(\"invoices\")}\n              />\n              <Button\n                content=\"Artikel\"\n                onClick={() => history.push(\"articles\")}\n              />\n              <Button\n                content=\"Kunden\"\n                onClick={() => history.push(\"customers\")}\n              />\n              <Button\n                content=\"Autoren\"\n                onClick={() => history.push(\"authors\")}\n              />\n            </Button.Group>\n            <Button\n              size=\"large\"\n              className=\"oi-top-navigation-bar-new-invoice\"\n              content=\"Neue Rechnung\"\n              onClick={() => history.push(\"/\")}\n              secondary\n            />\n          </div>\n        )}\n        <Button\n          className=\"oi-top-navigation-bar-new-invoice\"\n          onClick={() => setModalIsOpen(true)}\n          {...(user && user.user\n            ? { content: user.user.email }\n            : { icon: \"user\" })}\n          primary\n        />\n\n        {user && user.user ? (\n          <Modal open={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n            <Modal.Header>Nutzer</Modal.Header>\n            <Modal.Content>\n              <div>\n                <p>Angemeldet als {user.user.email}</p>\n                <Button\n                  content=\"Abmelden\"\n                  onClick={() => {\n                    setUser({});\n                    dataToLocalStorage({\n                      articles: [],\n                      invoices: [],\n                      customers: [],\n                      authors: [],\n                    });\n                    window.document.location.href = \"/\";\n                  }}\n                />\n              </div>\n            </Modal.Content>\n          </Modal>\n        ) : (\n          <Modal\n            open={modalIsOpen}\n            onClose={() => {\n              setModalIsOpen(false);\n              setError(\"\");\n            }}\n          >\n            <Modal.Header>\n              {modalUse === \"login\" ? \"Anmelden\" : \"Registrieren\"}\n            </Modal.Header>\n            <Modal.Content>\n              <Message info>\n                {modalUse === \"login\"\n                  ? \"Melden Sie sich an, um diesen Browser mit ihren Daten zu synchronisieren.\"\n                  : \"Registrieren Sie sich, um ihre Daten auch auf anderen Geräten zu nutzen.\"}\n              </Message>\n              {error && <Message error>{error}</Message>}\n              <Form>\n                <Form.Field\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  control={Input}\n                  value={loginValues.email}\n                  onChange={(e, { value }) =>\n                    setLoginValues({ ...loginValues, email: value })\n                  }\n                />\n                <Form.Field\n                  label=\"Passwort\"\n                  placeholder=\"Passwort\"\n                  control={Input}\n                  type=\"password\"\n                  value={loginValues.password}\n                  onChange={(e, { value }) =>\n                    setLoginValues({ ...loginValues, password: value })\n                  }\n                />\n                <Button\n                  onClick={() => {\n                    setModalUse(modalUse === \"register\" ? \"login\" : \"register\");\n                    setError(\"\");\n                  }}\n                  type=\"button\"\n                >\n                  {modalUse === \"register\" ? \"Anmelden\" : \"Registrieren\"}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  primary\n                  onClick={async () => {\n                    let user;\n                    try {\n                      if (modalUse === \"login\") {\n                        user = await login(loginValues);\n                        await localStorage.setItem(\n                          \"user\",\n                          JSON.stringify(user)\n                        );\n                        const data = await getData();\n                        dataToLocalStorage(data);\n                      } else {\n                        user = await register(loginValues);\n                        await localStorage.setItem(\n                          \"user\",\n                          JSON.stringify(user)\n                        );\n\n                        const data = await dataFromLocalStorage();\n                        postData(data);\n                      }\n                      setUser(user);\n                      setModalIsOpen(false);\n                      window.document.location.href = \"/\";\n                    } catch (err) {\n                      setError(err);\n                    }\n                  }}\n                >\n                  {modalUse === \"login\" ? \"Anmelden\" : \"Registrieren\"}\n                  <Icon name=\"right chevron\" />\n                </Button>\n              </Form>\n            </Modal.Content>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useUser() {\n  return useLocalStorage(\"user\", {});\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Customers from \"./components/Customers\";\n\nimport \"./index.css\";\nimport Articles from \"./components/Articles\";\nimport Invoices from \"./components/Invoices\";\nimport Authors from \"./components/Authors/Authors\";\nimport useMigration from \"./hooks/useMigration\";\nimport Home from \"./pages/Home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopNavigationBar from \"./components/TopNavigationBar\";\n\nimport \"semantic-ui-less/semantic.less\";\n\nconst App = () => {\n  //useMigration();\n\n  return (\n    <Router>\n      <TopNavigationBar />\n      <div className=\"invoice-app-container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/invoices\">\n            <Invoices />\n          </Route>\n          <Route path=\"/customers\">\n            <Customers />\n          </Route>\n          <Route path=\"/articles\">\n            <Articles />\n          </Route>\n\n          <Route path=\"/authors\">\n            <Authors />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}